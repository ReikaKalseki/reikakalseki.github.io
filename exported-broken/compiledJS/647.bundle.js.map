{"version":3,"sources":["webpack://sitecore/./p2/backgroundgen.ts"],"names":["addImageToRow","elem","img","tile","document","createElement","className","appendChild","addImageToTile","x","y","w","h","added","style","position","top","toString","left","width","height","modifyImageLocational","rows","cols","terrain","idx","placePortalSurface","blocks","blue","orange","x2","Math","min","y2","i","k","tex","random","addBlock","generateBeam","type","dx","dy","length","push","setPageBackground","body","documentElement","rh","offsetHeight","rw","max","window","innerWidth","clientWidth","ceil","console","log","Array","ret","placeTestElements","tag","container","getElementById","id","prepend","firstChild","removeChild","display","lasers","row","imgs","add","n","startsWith","element","flakes","m","buildImage"],"mappings":"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","file":"647.bundle.js","sourcesContent":["const SCALE = 1;\r\nimport { xmas, getRandomBetween, getArrayIndex, fitBCG, isDarkModeEnabled } from '../library';\r\nimport { isPhone } from '../browser';\r\nfunction addImageToRow(elem, img) {\r\n    let tile = document.createElement('div');\r\n    tile.className = \"tile-p2-\" + img;\r\n    elem.appendChild(tile);\r\n    return tile;\r\n}\r\nfunction addImageToTile(elem, img, x, y, w, h) {\r\n    let added = addImageToRow(elem, img);\r\n    added.style.position = \"absolute\";\r\n    added.style.top = y.toString() + \"px\";\r\n    added.style.left = x.toString() + \"px\";\r\n    added.style.width = w.toString() + \"px\";\r\n    added.style.height = h.toString() + \"px\";\r\n}\r\nfunction buildImage(elem, rows, cols, terrain, blocks) {\r\n    var w = 128 * SCALE;\r\n    var h = 128 * SCALE;\r\n    var x = 0;\r\n    var y = 0;\r\n    var lasers = [];\r\n    for (var k = 0; k < rows; k++) {\r\n        x = 0;\r\n        let row = document.createElement(\"div\");\r\n        for (var i = 0; i < cols; i++) {\r\n            let idx = getArrayIndex(cols, i, k);\r\n            let imgs = blocks[idx];\r\n            let add = row;\r\n            add = addImageToRow(add, terrain[idx]);\r\n            if (isDarkModeEnabled()) {\r\n                add = addImageToRow(add, \"dark\");\r\n            }\r\n            if (imgs.length != 1 || imgs[0] != \"air\") {\r\n                //console.log(\"Got \"+img+\" @ \"+i+\", \"+k);\r\n                for (var n = 0; n < imgs.length; n++) {\r\n                    var img = imgs[n];\r\n                    if (img != \"air\") {\r\n                        img = modifyImageLocational(rows, cols, terrain, i, k, idx, img);\r\n                        add = addImageToRow(add, img);\r\n                        if (xmas && img.startsWith(\"laser\")) {\r\n                            lasers.push({ element: add, x: x, y: y });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            x += w;\r\n        }\r\n        elem.appendChild(row);\r\n        y += h;\r\n    }\r\n    for (var i = 0; i < lasers.length; i++) {\r\n        let tile = lasers[i];\r\n        var flakes = getRandomBetween(4, 9);\r\n        for (var m = 0; m < flakes; m++) {\r\n            addImageToTile(tile.element, \"laser_snow\", getRandomBetween(tile.x - 36, tile.x + w - 12), getRandomBetween(tile.y - 36, tile.y + h - 12), 48 * SCALE, 48 * SCALE);\r\n        }\r\n    }\r\n    fitBCG(elem, SCALE);\r\n}\r\nfunction getRandomTileAt(x, y, rows) {\r\n    return \"black\" + getRandomBetween(0, 15);\r\n}\r\nfunction modifyImageLocational(rows, cols, terrain, x, y, idx, img) {\r\n    return img;\r\n}\r\nfunction placePortalSurface(terrain, blocks, rows, cols, blue, orange) {\r\n    var w = getRandomBetween(1, 6);\r\n    var h = getRandomBetween(1, 3);\r\n    var x = getRandomBetween(0, cols - 1);\r\n    var y = getRandomBetween(0, rows - 1);\r\n    var x2 = Math.min(x + w, cols);\r\n    var y2 = Math.min(y + h, rows);\r\n    for (var i = x; i < x2; i++) {\r\n        for (var k = y; k < y2; k++) {\r\n            var tex = \"white\" + getRandomBetween(0, 3);\r\n            var idx = getArrayIndex(cols, i, k);\r\n            terrain[idx] = tex;\r\n            if (blue && Math.random() < 0.1) {\r\n                addBlock(blocks, idx, \"portal_b\");\r\n                blue = false;\r\n            }\r\n            else if (orange && Math.random() < 0.1) {\r\n                addBlock(blocks, idx, \"portal_o\");\r\n                orange = false;\r\n            }\r\n        }\r\n    }\r\n    return [blue, orange];\r\n}\r\nfunction placeTestElements(blocks, rows, cols) {\r\n    for (var i = 1; i < rows - 1; i++) {\r\n        if (Math.random() < 0.1) {\r\n            generateBeam(blocks, rows, cols, 0, i);\r\n        }\r\n    }\r\n    for (var i = 1; i < cols - 1; i++) {\r\n        if (Math.random() < 0.1) {\r\n            generateBeam(blocks, rows, cols, i, 0);\r\n        }\r\n    }\r\n}\r\nfunction generateBeam(blocks, rows, cols, x, y) {\r\n    var type = Math.random() < 0.5 ? (Math.random() < 0.5 ? \"lightbridge\" : \"laser\") : (xmas ? \"funnel_xmas\" : (Math.random() < 0.35 ? \"funnel_o\" : \"funnel\"));\r\n    var dx = (x == 0 ? 1 : 0);\r\n    var dy = 1 - dx;\r\n    type = type + (dx == 0 ? \"_v\" : \"_h\");\r\n    while (x < cols && y < rows) {\r\n        addBlock(blocks, getArrayIndex(cols, x, y), type);\r\n        x += dx;\r\n        y += dy;\r\n    }\r\n}\r\nfunction addBlock(blocks, idx, img) {\r\n    if (blocks[idx].length == 1 && blocks[idx][0] == \"air\") {\r\n        blocks[idx] = [];\r\n    }\r\n    blocks[idx].push(img);\r\n}\r\nexport default function setPageBackground() {\r\n    if (isPhone)\r\n        return;\r\n    let w = 128 * SCALE;\r\n    let h = 128 * SCALE;\r\n    let x = 0;\r\n    let y = 0;\r\n    //var height = findHighestNode(0, document.documentElement.childNodes);\r\n    let body = document.body;\r\n    let html = document.documentElement;\r\n    var rh = document.body.offsetHeight; //Math.max(body.offsetHeight, html.clientHeight, html.offsetHeight, window.innerHeight, document.body.clientHeight);\r\n    var rw = Math.max(window.innerWidth, document.body.clientWidth);\r\n    //console.log(rw+\" x \"+rh);\r\n    let rows = Math.ceil(rh / h);\r\n    let cols = Math.ceil(rw / w);\r\n    let tw = cols * w;\r\n    let th = rows * h;\r\n    console.log(\"Generating portal tileset with \" + cols + \" columns and \" + rows + \" rows\");\r\n    let terrain = new Array(cols * rows);\r\n    let blocks = new Array(cols * rows);\r\n    for (var i = 0; i < cols; i++) {\r\n        for (var k = 0; k < rows; k++) {\r\n            var img = getRandomTileAt(i, k, rows);\r\n            var idx = getArrayIndex(cols, i, k);\r\n            terrain[idx] = img;\r\n            blocks[idx] = [\"air\"];\r\n        }\r\n    }\r\n    let blue = true;\r\n    let orange = true;\r\n    for (var i = 0; i < rows / 4; i++) {\r\n        var ret = placePortalSurface(terrain, blocks, rows, cols, blue, orange);\r\n        blue = ret[0];\r\n        orange = ret[1];\r\n    }\r\n    placeTestElements(blocks, rows, cols);\r\n    let tag = \"background-content\";\r\n    let container = document.getElementById(tag);\r\n    if (container == null) {\r\n        container = document.createElement(\"div\");\r\n        container.id = tag;\r\n        console.log(\"Injecting background element.\");\r\n        document.body.prepend(container);\r\n    }\r\n    while (container.firstChild) {\r\n        container.removeChild(container.firstChild);\r\n    }\r\n    let elem = document.createElement(\"div\");\r\n    container.appendChild(elem);\r\n    elem.className = \"tile-layer\";\r\n    // container.style.width = rw.toString()+\"px\";\r\n    // container.style.height = rh.toString()+\"px\";\r\n    container.style.display = \"block\";\r\n    //console.log(elem);\r\n    buildImage(elem, rows, cols, terrain, blocks);\r\n}\r\n//window.addEventListener('resize', debounce(setPageBackground, 100));\r\n"],"sourceRoot":""}
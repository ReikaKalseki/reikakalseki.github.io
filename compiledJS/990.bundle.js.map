{"version":3,"sources":["webpack://sitecore/./node_modules/ts-debounce/dist/src/index.esm.js","webpack://sitecore/./browser.ts","webpack://sitecore/./factorio/backgroundgen.ts","webpack://sitecore/./library.ts"],"names":["r","e","n","i","t","o","a","isImmediate","u","callback","c","maxWait","v","Date","now","l","f","d","slice","call","arguments","this","Promise","clearTimeout","setTimeout","apply","forEach","resolve","push","reject","cancel","isPhone","document","addEventListener","console","log","imgs","getElementsByClassName","length","img","par","parentNode","tagName","put","createElement","innerHTML","src","replaceChild","className","url","replace","text","style","width","header","navbar","getElementById","insertBefore","nextSibling","toc","removeChild","collapseOnPhone","addImage","elem","ix","iy","iw","ih","startsWith","Math","max","svgimg","createElementNS","setAttributeNS","toString","appendChild","modifyImageLocational","blocks","rows","cols","x","y","idx","idxl","idxr","idxu","idxd","tryCorrectBeltJunctions","genBelt","x1","y1","dx","dy","dir","flag","turns","dprev","dirp","randd","random","ch","min","wall","canBeltMoveFrom","down","up","left","right","list","filter","item","floor","flag2","x2","y2","genDirt","ground","s","rx","ry","mx","my","px","py","ms","slopeX","slopeY","k","di","dk","setPageBackground","body","html","documentElement","height","scrollHeight","offsetHeight","clientHeight","titleImg","window","location","href","rh","innerHeight","rw","innerWidth","clientWidth","ceil","tw","th","Array","ore","maxtype","type","m","generateOre","deco","w","h","sz","posX","posY","minX","minY","maxX","maxY","canPlace","entry","image","size","rootX","rootY","n2","building","ang","PI","dr","cos","sin","mob","blockX","blockY","idx2","sand","generateDecorations","gnd","buildImage","domes","ds","SCALE","tag","container","id","prepend","firstChild","root","date","time","getSeconds","month","getMonth","day","getDate","xmas","hallow","viskey","visval","xkey","ykey","hkey","wkey","tileWidth","tileHeight","tileWidthNum","tileHeightNum","imagePaths","getRandomBetween","getRandomDecimalBetween","getOrCreateImgPath","folder","folderName","ret","indexOf","levels","substring","split","getImageRoot","getTileWidth","getTileHeight","getArrayIndex"],"mappings":"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","file":"990.bundle.js","sourcesContent":["function r(r,e,n){var i,t,o;void 0===e&&(e=50),void 0===n&&(n={});var a=null!=(i=n.isImmediate)&&i,u=null!=(t=n.callback)&&t,c=n.maxWait,v=Date.now(),l=[];function f(){if(void 0!==c){var r=Date.now()-v;if(r+e>=c)return c-r}return e}var d=function(){var e=[].slice.call(arguments),n=this;return new Promise(function(i,t){var c=a&&void 0===o;if(void 0!==o&&clearTimeout(o),o=setTimeout(function(){if(o=void 0,v=Date.now(),!a){var i=r.apply(n,e);u&&u(i),l.forEach(function(r){return(0,r.resolve)(i)}),l=[]}},f()),c){var d=r.apply(n,e);return u&&u(d),i(d)}l.push({resolve:i,reject:t})})};return d.cancel=function(r){void 0!==o&&clearTimeout(o),l.forEach(function(e){return(0,e.reject)(r)}),l=[]},d}export{r as debounce};\n//# sourceMappingURL=index.esm.js.map\n","export const isPhone = checkMobile();\r\nfunction checkMobile() {\r\n    return false;\r\n}\r\nfunction collapseOnPhone() {\r\n    if (isPhone) {\r\n        var imgs = document.getElementsByClassName(\"deembed-media\");\r\n        while (imgs.length > 0) {\r\n            let img = imgs[0];\r\n            let par = img.parentNode;\r\n            //console.log(img.src+\" @ \"+par.tagName);\r\n            if (par.tagName == \"VIDEO\") {\r\n                let put = document.createElement(\"div\");\r\n                put.innerHTML = '<a href = \"' + img.src + '\">' + img.src + \"</a>\";\r\n                par.parentNode.replaceChild(put, par);\r\n            }\r\n            else {\r\n                //par.replaceChild(put, img);\r\n                if (par.className == \"video\") {\r\n                    var url = img.src.replace(\"embed/\", \"watch?v=\");\r\n                    par.innerHTML = '<a href = \"' + url + '\">' + url + \"</a>\";\r\n                }\r\n                else if (par.className != \"header-image\")\r\n                    par.innerHTML = img.src + \"<br>\";\r\n                else\r\n                    par.innerHTML = \"\";\r\n            }\r\n            console.log(\"Hiding media '\" + img.src + \"'\");\r\n        }\r\n        var text = document.getElementsByClassName(\"textarea\");\r\n        for (var i = 0; i < text.length; i++) {\r\n            text[i].style.width = \"33%\";\r\n        }\r\n        let header = document.createElement(\"div\");\r\n        header.innerHTML = \"<div style = 'text-align: center; width: 33%; margin: auto; border: 3px solid red;'><h2 style = 'color: red; margin: 12px;'>This site is not designed for use on phones and other handheld devices, nor is any of its content relevant on such platforms. You may continue to browse it this way if you wish, but it is recommended that you visit the site with a proper computer.</h2></div>\";\r\n        let navbar = document.getElementById(\"navbar\");\r\n        navbar.parentNode.insertBefore(header, navbar.nextSibling);\r\n        let toc = document.getElementById(\"toc_container\");\r\n        toc.parentNode.removeChild(toc);\r\n    }\r\n}\r\nfunction interceptDOM() {\r\n    console.log(\"Detected phone browser: \" + isPhone);\r\n    collapseOnPhone();\r\n}\r\ndocument.addEventListener(\"DOMContentLoaded\", interceptDOM);\r\n","//import * as browser from '../browser.js'\r\n//import * as library from '../library.js'\r\nimport { debounce } from \"ts-debounce\";\r\nimport { xmas, viskey, visval, xkey, ykey, hkey, wkey, getRandomBetween, getRandomDecimalBetween, getOrCreateImgPath, getTileWidth, getTileHeight, getArrayIndex } from '../library';\r\nimport { isPhone } from '../browser';\r\nconst SCALE = 1;\r\nfunction addImage(elem, img, ix, iy, iw, ih) {\r\n    //var pre = '<image x=\"'+ix+'\" y=\"'+iy+'\" width=\"'+iw+'\" height=\"'+ih+'\" xlink:href=\"'+getImageRoot();\r\n    //var post = '.png\" />';\r\n    //return pre+img+post;\r\n    if (img.startsWith(\"snowtree\")) {\r\n        iw = iw * 1.5;\r\n        ih = ih * 1.5;\r\n    }\r\n    if (img.startsWith(\"geothermal\")) {\r\n        iw = iw * 2;\r\n        ih = ih * 2;\r\n        ix = Math.max(0, ix - 1);\r\n        iy = Math.max(0, iy - 1);\r\n        //console.log(\"Geo @ \"+ix+\", \"+iy);\r\n    }\r\n    let svgimg = document.createElementNS('http://www.w3.org/2000/svg', 'image');\r\n    svgimg.setAttributeNS(null, wkey, getTileWidth(iw));\r\n    svgimg.setAttributeNS(null, hkey, getTileHeight(ih));\r\n    svgimg.setAttributeNS('http://www.w3.org/1999/xlink', 'href', getOrCreateImgPath(img, \"factiles\"));\r\n    svgimg.setAttributeNS(null, xkey, ix.toString());\r\n    svgimg.setAttributeNS(null, ykey, iy.toString());\r\n    svgimg.setAttributeNS(null, viskey, visval);\r\n    if (img == \"domeglow\")\r\n        svgimg.setAttributeNS(null, \"style\", \"mix-blend-mode: screen;\");\r\n    elem.appendChild(svgimg);\r\n}\r\nfunction buildImage(elem, rows, cols, ground, ore, blocks) {\r\n    var w = 32 * SCALE;\r\n    var h = 32 * SCALE;\r\n    var x = 0;\r\n    var y = 0;\r\n    for (var k = 0; k < rows; k++) {\r\n        x = 0;\r\n        for (var i = 0; i < cols; i++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            if (k < rows / 2 && i < cols / 2) {\r\n                var gnd = ground[getArrayIndex(cols / 2, i, k)];\r\n                gnd = modifyImageLocational(ground, rows / 2, cols / 2, i, k, idx, gnd);\r\n                addImage(elem, gnd, x * 2, y * 2, w * 2, h * 2);\r\n            }\r\n            var img = ore[idx];\r\n            //console.log(\"Got \"+img+\" @ \"+i+\", \"+k);\r\n            img = modifyImageLocational(ore, rows, cols, i, k, idx, img);\r\n            if (img != \"air\")\r\n                addImage(elem, img, x, y, w, h);\r\n            img = blocks[idx];\r\n            //console.log(\"Got \"+img+\" @ \"+i+\", \"+k);\r\n            img = modifyImageLocational(blocks, rows, cols, i, k, idx, img);\r\n            if (img != \"air\") {\r\n                addImage(elem, img, x, y, w, h);\r\n            }\r\n            x += w;\r\n        }\r\n        y += h;\r\n    }\r\n}\r\nfunction isTransparent(img) {\r\n    switch (img) {\r\n        case \"air\":\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction tryCorrectBeltJunctions(blocks, rows, cols, x, y, idx, img) {\r\n    var idxl = getArrayIndex(cols, x - 1, y);\r\n    var idxr = getArrayIndex(cols, x + 1, y);\r\n    var idxu = getArrayIndex(cols, x, y - 1);\r\n    var idxd = getArrayIndex(cols, x, y + 1);\r\n    if (blocks[idxl] == blocks[idxr] && (blocks[idxl] == \"belt-left\" || blocks[idxl] == \"belt-right\")) {\r\n        return blocks[idxl];\r\n    }\r\n    if ((blocks[idxl] == \"belt-dr\" || blocks[idxl] == \"belt-ur\") && blocks[idxr] == \"belt-right\") {\r\n        return \"belt-right\";\r\n    }\r\n    if ((blocks[idxr] == \"belt-dl\" || blocks[idxr] == \"belt-ul\") && blocks[idxl] == \"belt-left\") {\r\n        return \"belt-left\";\r\n    }\r\n    if ((blocks[idxl] == \"belt-dr\" || blocks[idxl] == \"belt-ur\" || blocks[idxl] == \"belt-right\") && (blocks[idxr] == \"belt-left\" || blocks[idxr] == \"belt-dl\" || blocks[idxr] == \"belt-ul\")) {\r\n        //console.log(\"Belt @ \"+x+\", \"+y+\" has left with right exit and vice versa.\");\r\n        return img == \"belt-down\" || img == \"belt-ld\" || img == \"belt-rd\" ? \"belt-down\" : \"belt-up\";\r\n    }\r\n    if (blocks[idxu] == blocks[idxd] && (blocks[idxd] == \"belt-up\" || blocks[idxd] == \"belt-down\")) {\r\n        return blocks[idxd];\r\n    }\r\n    if ((blocks[idxd] == \"belt-lu\" || blocks[idxd] == \"belt-ru\") && blocks[idxu] == \"belt-up\") {\r\n        return \"belt-up\";\r\n    }\r\n    if ((blocks[idxu] == \"belt-ld\" || blocks[idxu] == \"belt-rd\") && blocks[idxd] == \"belt-down\") {\r\n        return \"belt-down\";\r\n    }\r\n    if ((blocks[idxu] == \"belt-down\" || blocks[idxu] == \"belt-rd\" || blocks[idxu] == \"belt-ld\") && (blocks[idxd] == \"belt-up\" || blocks[idxd] == \"belt-ru\" || blocks[idxd] == \"belt-lu\")) {\r\n        //console.log(\"Belt @ \"+x+\", \"+y+\" has up with down exit and vice versa.\");\r\n        return img == \"belt-right\" || img == \"belt-dr\" || img == \"belt-ur\" ? \"belt-right\" : \"belt-left\";\r\n    }\r\n    return img;\r\n}\r\nfunction modifyImageLocational(blocks, rows, cols, x, y, idx, img) {\r\n    if (img.startsWith(\"belt\") && img.length == 7) { //corner\r\n        img = tryCorrectBeltJunctions(blocks, rows, cols, x, y, idx, img);\r\n    }\r\n    else if (img == \"blocker\") {\r\n        return \"air\";\r\n    }\r\n    return img;\r\n}\r\n/*\r\nfunction getGroundAt(rows, cols, x, y) {\r\n    return \"grass\"+getRandomBetween(0, 15);\r\n}*/\r\nfunction genBelt(rows, cols, blocks) {\r\n    var side1 = getRandomBetween(0, 3); /*\r\n    //var side2 = getRandomBetween(0, 3);\r\n    var y1 = side1 == 0 || side1 == 2 ? (Math.random() < 0.5 ? 0 : rows) : getRandomBetween(0, rows);\r\n    var x1 = side1 == 1 || side1 == 3 ? (Math.random() < 0.5 ? 0 : cols) : getRandomBetween(0, cols);\r\n    //var y2 = side2 == 0 || side2 == 2 ? 0 : getRandomBetween(0, rows);\r\n    //var x2 = side2 == 1 || side2 == 3 ? 0 : getRandomBetween(0, cols);\r\n    var dx = side1 == 1 || side1 == 3 ? 0 : (side1 == );*/\r\n    var x1 = 0;\r\n    var y1 = 0;\r\n    var dx = 0;\r\n    var dy = 0;\r\n    var dir = \"\";\r\n    switch (side1) {\r\n        case 0:\r\n            x1 = getRandomBetween(0, cols - 1);\r\n            y1 = rows - 1;\r\n            dy = -1;\r\n            dir = \"up\";\r\n            break;\r\n        case 1:\r\n            x1 = 0;\r\n            y1 = getRandomBetween(0, rows - 1);\r\n            dx = 1;\r\n            dir = \"right\";\r\n            break;\r\n        case 2:\r\n            x1 = getRandomBetween(0, cols - 1);\r\n            y1 = 0;\r\n            dy = 1;\r\n            dir = \"down\";\r\n            break;\r\n        case 3:\r\n            x1 = cols - 1;\r\n            y1 = getRandomBetween(0, rows - 1);\r\n            dx = -1;\r\n            dir = \"left\";\r\n            break;\r\n    }\r\n    var flag = true;\r\n    var x = x1;\r\n    var y = y1;\r\n    var turns = 0;\r\n    while (flag) {\r\n        var dprev = dir;\r\n        var dirp = dir;\r\n        var idx = getArrayIndex(cols, x, y);\r\n        if (blocks[idx] != \"air\")\r\n            break;\r\n        var randd = Math.random();\r\n        var ch = Math.min(0.35, turns * 0.066);\r\n        var wall = !canBeltMoveFrom(blocks, cols, rows, x, y, dx, dy);\r\n        if (randd < ch || wall) {\r\n            turns = 0;\r\n            var v1 = randd < (wall ? 0.5 : 0.15);\r\n            var down = dy != -1 && canBeltMoveFrom(blocks, cols, rows, x, y, 0, 1);\r\n            var up = dy != 1 && canBeltMoveFrom(blocks, cols, rows, x, y, 0, -1);\r\n            var left = dx != 1 && canBeltMoveFrom(blocks, cols, rows, x, y, -1, 0);\r\n            var right = dx != -1 && canBeltMoveFrom(blocks, cols, rows, x, y, 1, 0);\r\n            var list = [];\r\n            if (down)\r\n                list.push(\"down\");\r\n            if (up)\r\n                list.push(\"up\");\r\n            if (left)\r\n                list.push(\"left\");\r\n            if (right)\r\n                list.push(\"right\");\r\n            if (list.length > 1)\r\n                list = list.filter(item => item != dprev);\r\n            if (list.length > 0) {\r\n                var newdir = list[Math.floor(Math.random() * list.length)];\r\n                switch (newdir) {\r\n                    case \"left\":\r\n                        dx = -1;\r\n                        dir = \"left\";\r\n                        dirp = dy == 1 ? \"dl\" : \"ul\";\r\n                        dy = 0;\r\n                        break;\r\n                    case \"right\":\r\n                        dx = 1;\r\n                        dir = \"right\";\r\n                        dirp = dy == 1 ? \"dr\" : \"ur\";\r\n                        dy = 0;\r\n                        break;\r\n                    case \"up\":\r\n                        dy = -1;\r\n                        dir = \"up\";\r\n                        dirp = dx == 1 ? \"ru\" : \"lu\";\r\n                        dx = 0;\r\n                        break;\r\n                    case \"down\":\r\n                        dy = 1;\r\n                        dir = \"down\";\r\n                        dirp = dx == 1 ? \"rd\" : \"ld\";\r\n                        dx = 0;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                dx = 0;\r\n                dy = 0;\r\n            }\r\n        }\r\n        else {\r\n            turns++;\r\n        }\r\n        var flag2 = dx == 0 && dy == 0;\r\n        if (flag2) {\r\n            //console.log(\"Belt from \"+dprev+\" @ \"+x+\", \"+y+\" had nowhere to go\");\r\n            //dirp = dir;\r\n        }\r\n        blocks[idx] = \"belt-\" + dirp;\r\n        x += dx;\r\n        y += dy;\r\n        flag = x >= 0 && x < cols && y >= 0 && y < rows && !flag2;\r\n    }\r\n}\r\nfunction canBeltMoveFrom(blocks, cols, rows, x, y, dx, dy) {\r\n    var x2 = x + dx;\r\n    var y2 = y + dy;\r\n    var idx = getArrayIndex(cols, x2, y2);\r\n    return x2 < 0 || x2 >= cols || y2 < 0 || y2 >= rows || blocks[idx] == \"air\" || (blocks[idx].startsWith(\"belt\") && Math.random() < 0.5);\r\n}\r\nfunction generateDecorations(rows, cols, ground, blocks, tw, th, w, h) {\r\n    var list = [];\r\n    for (var n = 0; n < Math.floor(rows / 4); n++) {\r\n        //var posX = getRandomBetween(6, cols-6);\r\n        //var posY = getRandomBetween(6, rows-6);\r\n        var type = \"rock\" + getRandomBetween(1, 4);\r\n        var sz = type == \"rock1\" ? 128 : 64;\r\n        var posX = getRandomBetween(sz / 2, tw - sz / 2);\r\n        var posY = getRandomBetween(sz / 2, th - sz / 2);\r\n        var minX = Math.floor(posX / w);\r\n        var minY = Math.floor(posY / h);\r\n        var maxX = Math.ceil((posX + sz / 2) / w);\r\n        var maxY = Math.ceil((posY + sz / 2) / h);\r\n        var canPlace = true;\r\n        for (var i = minX; i <= maxX && canPlace; i++) {\r\n            for (var k = minY; k <= maxY && canPlace; k++) {\r\n                var idx = getArrayIndex(cols, i, k);\r\n                if (blocks[idx] != \"air\") {\r\n                    canPlace = false;\r\n                }\r\n            }\r\n        }\r\n        if (canPlace) {\r\n            for (var i = minX; i <= maxX; i++) {\r\n                for (var k = minY; k <= maxY; k++) {\r\n                    var idx = getArrayIndex(cols, i, k);\r\n                    blocks[idx] = \"blocker\";\r\n                }\r\n            }\r\n            var entry = { image: type, x: posX, y: posY, size: sz };\r\n            //console.log(\"Placing \"+entry.image+\" @ \"+entry.x+\", \"+entry.y);\r\n            list.push(entry);\r\n        }\r\n    }\r\n    for (var n = 0; n < Math.max(5, Math.floor(rows / 15)); n++) {\r\n        var rootX = getRandomBetween(256, tw - 256);\r\n        var rootY = getRandomBetween(256, th - 256);\r\n        for (var n2 = 0; n2 < 3; n2++) {\r\n            var building = getRandomBuilding();\r\n            var sz = (building == \"turret\" || building == \"plasma\") ? 64 : 128;\r\n            var posX = getRandomBetween(rootX - sz, rootX + sz);\r\n            var posY = getRandomBetween(rootY - sz, rootY + sz);\r\n            var minX = Math.floor(posX / w);\r\n            var minY = Math.floor(posY / h);\r\n            var maxX = Math.ceil((posX + sz / 2) / w);\r\n            var maxY = Math.ceil((posY + sz / 2) / h);\r\n            var canPlace = true;\r\n            for (var i = minX; i <= maxX && canPlace; i++) {\r\n                for (var k = minY; k <= maxY && canPlace; k++) {\r\n                    var idx = getArrayIndex(cols, i, k);\r\n                    if (blocks[idx] != \"air\") {\r\n                        canPlace = false;\r\n                    }\r\n                }\r\n            }\r\n            if (canPlace) {\r\n                for (var i = minX; i <= maxX; i++) {\r\n                    for (var k = minY; k <= maxY; k++) {\r\n                        var idx = getArrayIndex(cols, i, k);\r\n                        blocks[idx] = \"blocker\";\r\n                    }\r\n                }\r\n                var entry = { image: building, x: posX, y: posY, size: sz };\r\n                //console.log(\"Placing \"+entry.image+\" @ \"+entry.x+\", \"+entry.y);\r\n                list.push(entry);\r\n            }\r\n        }\r\n    }\r\n    for (var n = 0; n < Math.floor(rows / 16); n++) {\r\n        var sz = 192;\r\n        var posX = getRandomBetween(sz / 2, tw - sz / 2);\r\n        var posY = getRandomBetween(sz / 2, th - sz / 2);\r\n        var minX = Math.floor(posX / w);\r\n        var minY = Math.floor(posY / h);\r\n        var maxX = Math.ceil((posX + sz / 2) / w);\r\n        var maxY = Math.ceil((posY + sz / 2) / h);\r\n        var canPlace = true;\r\n        for (var i = minX; i <= maxX && canPlace; i++) {\r\n            for (var k = minY; k <= maxY && canPlace; k++) {\r\n                var idx = getArrayIndex(cols, i, k);\r\n                if (blocks[idx] != \"air\") {\r\n                    canPlace = false;\r\n                }\r\n            }\r\n        }\r\n        if (canPlace) {\r\n            for (var i = minX; i <= maxX; i++) {\r\n                for (var k = minY; k <= maxY; k++) {\r\n                    var idx = getArrayIndex(cols, i, k);\r\n                    blocks[idx] = \"blocker\";\r\n                }\r\n            }\r\n            var entry = { image: \"spawner\", x: posX, y: posY, size: sz };\r\n            //console.log(\"Placing \"+entry.image+\" @ \"+entry.x+\", \"+entry.y);\r\n            list.push(entry);\r\n            for (var n2 = 0; n2 < 3; n2++) {\r\n                //posX = getRandomBetween(entry.x-sz, entry.x+sz);\r\n                //posY = getRandomBetween(entry.y-sz, entry.y+sz);\r\n                var ang = getRandomBetween(0, 360) * Math.PI / 180;\r\n                var dr = getRandomDecimalBetween(sz / 3, sz);\r\n                posX = entry.x + sz / 2 + Math.cos(ang) * dr;\r\n                posY = entry.y + sz / 2 + Math.sin(ang) * dr;\r\n                list.push({ image: \"worm\", x: posX, y: posY, size: 96 });\r\n            }\r\n            for (var n2 = 0; n2 < 9; n2++) {\r\n                //posX = getRandomBetween(entry.x-sz, entry.x+sz);\r\n                //posY = getRandomBetween(entry.y-sz, entry.y+sz);\r\n                var ang = getRandomBetween(0, 360) * Math.PI / 180;\r\n                var dr = getRandomDecimalBetween(sz / 3, sz);\r\n                posX = entry.x + sz / 2 + Math.cos(ang) * dr;\r\n                posY = entry.y + sz / 2 + Math.sin(ang) * dr;\r\n                var mob = \"biter\" + getRandomBetween(1, 4);\r\n                if (Math.random() < 0.1)\r\n                    mob = \"fly\";\r\n                list.push({ image: mob, x: posX, y: posY, size: 64 });\r\n            }\r\n        }\r\n    }\r\n    for (var n = 0; n < Math.floor(rows * cols / 12); n++) {\r\n        var sz = 128;\r\n        var posX = getRandomBetween(sz / 2, tw - sz / 2);\r\n        var posY = getRandomBetween(sz / 2, th - sz / 2);\r\n        var blockX = Math.floor((posX + sz / 2) / w);\r\n        var blockY = Math.floor((posY + sz / 2) / h);\r\n        var idx = getArrayIndex(cols, blockX, blockY);\r\n        var canPlace = blocks[idx] == \"air\";\r\n        if (canPlace) {\r\n            var idx2 = getArrayIndex(Math.floor(cols / 2), Math.floor(blockX / 2), Math.floor(blockY / 2));\r\n            //console.log(\"Placing \"+entry.image+\" @ \"+entry.x+\", \"+entry.y+\" on tile index \"+idx2+\" = \"+gr\tound[idx2]);\r\n            var sand = ground[idx2].startsWith(\"dirt\") || ground[idx2].startsWith(\"ice\");\r\n            if (sand && xmas)\r\n                continue;\r\n            var entry = { image: \"tree\" + getRandomBetween(sand ? 1 : 3, sand ? 2 : 5), x: posX, y: posY, size: sz };\r\n            if (xmas)\r\n                entry.image = \"snowtree\" + getRandomBetween(1, 3);\r\n            list.push(entry);\r\n        }\r\n    }\r\n    return list;\r\n}\r\nfunction getRandomBuilding() {\r\n    if (true)\r\n        return \"dome\";\r\n    var types = [\"turret\", \"plasma\", \"well\", \"dome\"];\r\n    return types[getRandomBetween(0, types.length - 1)];\r\n}\r\nfunction genDirt(rows, cols, ground) {\r\n    var x = getRandomBetween(4, cols - 4);\r\n    var y = getRandomBetween(4, rows - 4);\r\n    //console.log(\"Genning dirt @ \"+x+\", \"+y);\r\n    var s = [2, 5];\r\n    //s[0] = 1;\r\n    //s[1] = 9;\r\n    var rx = getRandomDecimalBetween(s[0], s[1]);\r\n    var ry = getRandomDecimalBetween(s[0], s[1]);\r\n    var mx = Math.max(0, Math.floor(x - rx));\r\n    var my = Math.max(0, Math.floor(y - ry));\r\n    var px = Math.min(cols - 1, Math.floor(x + rx));\r\n    var py = Math.min(rows - 1, Math.floor(y + ry));\r\n    var ms = 0.75;\r\n    var slopeX = getRandomDecimalBetween(-ms, ms);\r\n    var slopeY = getRandomDecimalBetween(-ms, ms);\r\n    for (var i = mx; i <= px; i++) {\r\n        for (var k = my; k <= py; k++) {\r\n            var di = i - x;\r\n            var dk = k - y;\r\n            if (di * di + dk * dk <= rx * ry + 0.5) {\r\n                var dx = i + Math.floor(slopeX * dk);\r\n                var dy = k + Math.floor(slopeY * di);\r\n                var idx = getArrayIndex(cols, dx, dy);\r\n                ground[idx] = xmas ? (\"ice\" + getRandomBetween(0, 15)) : (\"dirt\" + getRandomBetween(0, 20));\r\n                //console.log(\"Placing dirt @ \"+dx+\", \"+dy+\" (idx = \"+idx);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction generateOre(rows, cols, ore) {\r\n    for (var n = 0; n < rows * cols / 200; n++) {\r\n        var r = getRandomBetween(2, 9);\r\n        var x = getRandomBetween(r + 2, cols - r - 2);\r\n        var y = getRandomBetween(r + 2, rows - r - 2);\r\n        var mx = Math.max(0, Math.floor(x - r));\r\n        var my = Math.max(0, Math.floor(y - r));\r\n        var px = Math.min(cols - 1, Math.floor(x + r));\r\n        var py = Math.min(rows - 1, Math.floor(y + r));\r\n        var maxtype = 7;\r\n        var f = Math.random();\r\n        var type = \"coal\";\r\n        if (f < 0.1)\r\n            type = \"oil\";\r\n        else if (f < 0.4)\r\n            type = \"copper\";\r\n        else if (f < 0.7)\r\n            type = \"iron\";\r\n        if (Math.random() < 0.2)\r\n            type = \"geothermal_\";\r\n        if (type == \"oil\" || type == \"geothermal_\") {\r\n            maxtype = type == \"oil\" ? 3 : 5;\r\n            for (var m = 0; m < r * 2; m++) {\r\n                var dx = getRandomBetween(mx, px);\r\n                var dy = getRandomBetween(my, py);\r\n                var idx = getArrayIndex(cols, dx, dy);\r\n                if (ore[idx] == \"air\") {\r\n                    ore[idx] = type + getRandomBetween(0, maxtype);\r\n                    if (type == \"geothermal_\") {\r\n                        if (dx > 0)\r\n                            ore[getArrayIndex(cols, dx - 1, dy)] = \"air\";\r\n                        if (dx < cols)\r\n                            ore[getArrayIndex(cols, dx + 1, dy)] = \"air\";\r\n                        if (dy > 0)\r\n                            ore[getArrayIndex(cols, dx, dy - 1)] = \"air\";\r\n                        if (dy < rows)\r\n                            ore[getArrayIndex(cols, dx, dy + 1)] = \"air\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (var i = mx; i <= px; i++) {\r\n                for (var k = my; k <= py; k++) {\r\n                    var di = i - x;\r\n                    var dk = k - y;\r\n                    if (di * di + dk * dk <= r * r + 0.5) {\r\n                        var idx = getArrayIndex(cols, i, k);\r\n                        if (ore[idx] == \"air\")\r\n                            ore[idx] = type + getRandomBetween(0, maxtype);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default function setPageBackground() {\r\n    if (isPhone)\r\n        return;\r\n    let tail = '</svg>';\r\n    let w = 32 * SCALE;\r\n    let h = 32 * SCALE;\r\n    let x = 0;\r\n    let y = 0;\r\n    //var height = findHighestNode(0, document.documentElement.childNodes);\r\n    let body = document.body;\r\n    let html = document.documentElement;\r\n    let height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight) - 64;\r\n    let titleImg = document.getElementsByClassName(\"title-image\")[0];\r\n    if (titleImg == null || titleImg.src == null || titleImg.src == \"\" || titleImg.src == window.location.href) {\r\n        height += 72;\r\n    }\r\n    else {\r\n        height += 48;\r\n    }\r\n    //console.log(\"Total height is \"+height+\", document content is: \"+document.documentElement.innerHTML);\r\n    var rh = Math.max(height, window.innerHeight, document.body.clientHeight);\r\n    var rw = Math.max(window.innerWidth, document.body.clientWidth);\r\n    //console.log(rw+\" x \"+rh);\r\n    let rows = Math.ceil(rh / h);\r\n    let cols = Math.ceil(rw / w);\r\n    let tw = cols * w;\r\n    let th = rows * h;\r\n    console.log(\"Generating Factorio tileset with \" + cols + \" columns and \" + rows + \" rows\");\r\n    let xmlns = \"http://www.w3.org/2000/svg\";\r\n    let elem = document.createElementNS(xmlns, \"svg\");\r\n    elem.setAttributeNS(null, \"width\", tw.toString());\r\n    elem.setAttributeNS(null, \"height\", th.toString());\r\n    var ground = new Array(Math.ceil(cols * rows / 4));\r\n    var ore = new Array(cols * rows);\r\n    var blocks = new Array(cols * rows);\r\n    for (var i = 0; i < cols; i++) {\r\n        for (var k = 0; k < rows; k++) {\r\n            let idx = getArrayIndex(cols, i, k);\r\n            let img = \"air\";\r\n            blocks[idx] = img;\r\n            ore[idx] = img;\r\n            if (i < cols / 2 && k < rows / 2) {\r\n                let max = xmas ? 15 : (Math.random() < 0.125 ? 15 : 3);\r\n                ground[getArrayIndex(cols / 2, i, k)] = (xmas ? \"snow\" : \"grass\") + getRandomBetween(0, max);\r\n            }\r\n        }\r\n    }\r\n    for (var i = 0; i < Math.floor(rows / 6); i++)\r\n        genDirt(rows / 2, cols / 2, ground);\r\n    generateOre(rows, cols, ore);\r\n    let deco = generateDecorations(rows, cols, ground, blocks, tw, th, w, h);\r\n    for (var i = 0; i < Math.floor(rows / 1.5); i++)\r\n        genBelt(rows, cols, blocks);\r\n    buildImage(elem, rows, cols, ground, ore, blocks);\r\n    let domes = [];\r\n    for (var i = 0; i < deco.length; i++) {\r\n        var dx = deco[i].x - w / 2;\r\n        var dy = deco[i].y - h / 2;\r\n        var ds = deco[i].size * SCALE;\r\n        addImage(elem, deco[i].image, dx, dy, ds, ds);\r\n        if (deco[i].image == \"dome\") {\r\n            domes.push({ image: \"domeglow\", x: dx - SCALE * 192, y: dy - SCALE * 160, size: ds * 4 });\r\n        }\r\n    }\r\n    for (var i = 0; i < domes.length; i++) {\r\n        addImage(elem, domes[i].image, domes[i].x, domes[i].y, domes[i].size, domes[i].size);\r\n    }\r\n    let tag = \"background-content\";\r\n    let container = document.getElementById(tag);\r\n    if (container == null) {\r\n        container = document.createElement(\"div\");\r\n        container.id = tag;\r\n        console.log(\"Injecting background element.\");\r\n        document.body.prepend(container);\r\n    }\r\n    while (container.firstChild) {\r\n        container.removeChild(container.firstChild);\r\n    }\r\n    //console.log(elem);\r\n    container.appendChild(elem);\r\n}\r\nwindow.addEventListener('resize', debounce(setPageBackground, 250, { isImmediate: true }));\r\n","let root = {};\r\nexport const date = new Date(); //new Date(\"December 16, 2016 11:13:00\");//\r\nexport const time = date.getSeconds();\r\nexport const month = date.getMonth();\r\nexport const day = date.getDate();\r\nexport const xmas = month == 11 || (month == 0 && day <= 10); //between dec 1 and jan 10\r\nexport const hallow = month == 9 && day >= 10; //between oct 10 and oct 31\t\r\nexport const viskey = 'visibility';\r\nexport const visval = 'visible';\r\nexport const xkey = 'x';\r\nexport const ykey = 'y';\r\nexport const hkey = 'height';\r\nexport const wkey = 'width';\r\nlet tileWidthNum = -1;\r\nlet tileHeightNum = -1;\r\nlet tileWidth;\r\nlet tileHeight;\r\nlet imagePaths = {};\r\nexport function absDiff(a, b) {\r\n    return Math.abs(Math.abs(a) - Math.abs(b));\r\n}\r\nexport function getImageRoot(folderName) {\r\n    if (root[folderName] == null || typeof (root[folderName]) == \"undefined\") {\r\n        var ret = \"images/\" + folderName + \"/\";\r\n        var url = window.location.href;\r\n        //console.log(url);\r\n        var idx = url.indexOf(\"sitecore\");\r\n        url = url.substring(idx + 9);\r\n        //console.log(url);\r\n        var levels = url.split(\"/\").length - 1;\r\n        for (var i = 0; i < levels; i++)\r\n            ret = \"../\" + ret;\r\n        root[folderName] = ret;\r\n        //console.log(\"Calculated root \"+root[folderName]);\r\n    }\r\n    return root[folderName];\r\n}\r\nexport function getRandomBetween(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\nexport function getRandomDecimalBetween(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\nexport function getOrCreateImgPath(img, folder) {\r\n    if (imagePaths[img] == null) {\r\n        imagePaths[img] = getImageRoot(folder) + img + \".png\";\r\n        //console.log(\"Computed image path '\"+imagePaths[img]+\"' for image '\"+img+\"'\");\r\n    }\r\n    return imagePaths[img];\r\n}\r\nexport function getTileWidth(iw) {\r\n    if (tileWidthNum != iw) {\r\n        tileWidthNum = iw;\r\n        tileWidth = tileWidthNum.toString();\r\n    }\r\n    return tileWidth;\r\n}\r\nexport function getTileHeight(ih) {\r\n    if (tileHeightNum != ih) {\r\n        tileHeightNum = ih;\r\n        tileHeight = tileHeightNum.toString();\r\n    }\r\n    return tileHeight;\r\n}\r\nexport function getArrayIndex(cols, x, y) {\r\n    return x + y * cols;\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://sitecore/./factorio/backgroundgen.ts"],"names":["treeColors","red","orange","yellow","green","cyan","argon","blue","purple","magenta","white","bushColors","addImageToRow","elem","img","w","h","tile","document","createElement","className","style","width","toString","height","appendChild","addPositionedImage","dx","dy","scale","added","position","left","top","startsWith","transformOrigin","transform","buildImage","rows","cols","grid","scaleFactor","k","row","i","idx","modifyImageLocational","blocks","x","y","length","idxl","idxr","idxu","idxd","tryCorrectBeltJunctions","genBelt","x1","y1","dir","flag","turns","dprev","dirp","randd","Math","random","ch","min","wall","canBeltMoveFrom","down","up","right","list","push","filter","item","floor","flag2","x2","y2","genDirt","ground","s","rx","ry","mx","max","my","px","py","ms","slopeX","slopeY","di","dk","setPageBackground","body","documentElement","rh","scrollHeight","rw","window","innerWidth","scrollWidth","ceil","tw","th","console","log","Array","ore","geo","ret","n","r","maxtype","f","type","m","generateOre","deco","types","sz","posX","posY","minX","minY","maxX","maxY","canPlace","entry","image","size","rootX","rootY","n2","building","ang","PI","dr","cos","sin","mob","blockX","blockY","idx2","sand","generateDecorations","tag","container","getElementById","id","prepend","firstChild","removeChild","tiles","ores","entities","decoration","glows","dark","classList","add","setProperty","fuzzX","fuzzY","buildLooseImage","rgb","Object","entries","selector","offset","styleSheets","addRule","g","b","e","domes","biters","ds","SCALE","bushes","color","backgroundColor","bush","glow","plant"],"mappings":"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","file":"990.bundle.js","sourcesContent":["//import * as browser from '../browser.js'\r\n//import * as library from '../library.js'\r\nimport { xmas, getRandomBetween, getRandomDecimalBetween, getArrayIndex, fitBCG, isDarkModeEnabled, hexToRGB, getRandomMapKey } from '../library';\r\nimport { isPhone } from '../browser';\r\nconst treeColors = { red: hexToRGB(\"ff0000\"), orange: hexToRGB(\"FF7F00\"), yellow: hexToRGB(\"ffD800\"), green: hexToRGB(\"00ff00\"), cyan: hexToRGB(\"00ffff\"), argon: hexToRGB(\"4CCCFF\"), blue: hexToRGB(\"0045ff\"), purple: hexToRGB(\"A426FF\"), magenta: hexToRGB(\"FF00FF\"), white: hexToRGB(\"ffffff\") };\r\nconst bushColors = [\"argon\", \"argon\", \"purple\", \"red\", \"yellow\", \"yellow\", \"orange\", \"purple\", \"green\", \"magenta\", \"blue\"];\r\nconst SCALE = 1;\r\n/*\r\nfunction addImage(elem:HTMLElement, img:string, ix:number, iy:number, iw:number, ih:number) {\r\n    //var pre = '<image x=\"'+ix+'\" y=\"'+iy+'\" width=\"'+iw+'\" height=\"'+ih+'\" xlink:href=\"'+getImageRoot();\r\n    //var post = '.png\" />';\r\n    //return pre+img+post;\r\n    if (img.startsWith(\"snowtree\")) {\r\n        iw = iw*1.5;\r\n        ih = ih*1.5;\r\n    }\r\n    if (img.startsWith(\"geothermal\")) {\r\n        iw = iw*2;\r\n        ih = ih*2;\r\n        ix = Math.max(0, ix-1);\r\n        iy = Math.max(0, iy-1);\r\n        //console.log(\"Geo @ \"+ix+\", \"+iy);\r\n    }\r\n    let svgimg = document.createElementNS('http://www.w3.org/2000/svg', 'image');\r\n    svgimg.setAttributeNS(null, wkey, getTileWidth(iw));\r\n    svgimg.setAttributeNS(null, hkey, getTileHeight(ih));\r\n    svgimg.setAttributeNS('http://www.w3.org/1999/xlink', 'href', getOrCreateImgPath(img, \"factiles\"));\r\n    svgimg.setAttributeNS(null, xkey, ix.toString());\r\n    svgimg.setAttributeNS(null, ykey, iy.toString());\r\n    svgimg.setAttributeNS(null, viskey, visval);\r\n    if (img == \"domeglow\")\r\n        svgimg.setAttributeNS(null, \"style\", \"mix-blend-mode: screen;\");\r\n    elem.appendChild(svgimg);\r\n}\r\n*/\r\nfunction addImageToRow(elem, img, w, h) {\r\n    let tile = document.createElement('div');\r\n    tile.className = \"tile-factorio-\" + img;\r\n    if (img == \"air\" || img == null) {\r\n        tile.style.width = w.toString() + \"px\";\r\n        tile.style.height = h.toString() + \"px\";\r\n    }\r\n    elem.appendChild(tile);\r\n    return tile;\r\n}\r\nfunction addPositionedImage(elem, img, w, h, dx, dy, scale = 1) {\r\n    let added = addImageToRow(elem, img, w, h);\r\n    added.style.position = \"relative\";\r\n    added.style.left = dx.toString() + \"px\";\r\n    added.style.top = dy.toString() + \"px\";\r\n    //if (img.startsWith(\"geothermal\"))\r\n    //\tscale *= 2;\r\n    if (img != null && typeof (img) != \"undefined\" && img.startsWith(\"oil\"))\r\n        scale *= 1.5;\r\n    added.style.transformOrigin = \"top left\";\r\n    added.style.transform = \"scale(\" + scale + \")\";\r\n    if (img == \"spawner\")\r\n        added.style.transform = added.style.transform + \" translate(-16px)\";\r\n    return added;\r\n}\r\nfunction buildLooseImage(elem, rows, cols, grid, size, scale = 1, fuzzX = 0, fuzzY = 0) {\r\n    var x = 0;\r\n    var y = 0;\r\n    for (var k = 0; k < rows; k++) {\r\n        x = 0;\r\n        for (var i = 0; i < cols; i++) {\r\n            let idx = getArrayIndex(cols, i, k);\r\n            let img = grid[idx];\r\n            img = modifyImageLocational(grid, rows, cols, i, k, idx, img);\r\n            if (img != \"air\") {\r\n                let dx = x;\r\n                if (fuzzX > 0) {\r\n                    dx += (Math.random() - 0.5) * fuzzX * 2;\r\n                }\r\n                let dy = y;\r\n                if (fuzzY > 0) {\r\n                    dy += (Math.random() - 0.5) * fuzzY * 2;\r\n                }\r\n                addPositionedImage(elem, img, size, size, dx, dy, scale);\r\n            }\r\n            x += size;\r\n        }\r\n        y += size;\r\n    }\r\n    fitBCG(elem, SCALE);\r\n}\r\nfunction buildImage(elem, rows, cols, grid, scaleFactor) {\r\n    var w = 32 * SCALE * scaleFactor;\r\n    var h = 32 * SCALE * scaleFactor;\r\n    var x = 0;\r\n    var y = 0;\r\n    for (var k = 0; k < rows; k++) {\r\n        x = 0;\r\n        let row = document.createElement(\"div\");\r\n        for (var i = 0; i < cols; i++) {\r\n            let idx = getArrayIndex(cols, i, k);\r\n            let img = grid[idx];\r\n            img = modifyImageLocational(grid, rows, cols, i, k, idx, img);\r\n            //if (img != \"air\")\r\n            addImageToRow(row, img, w, h);\r\n            x += w;\r\n        }\r\n        elem.appendChild(row);\r\n        y += h;\r\n    }\r\n    fitBCG(elem, SCALE);\r\n}\r\nfunction isTransparent(img) {\r\n    switch (img) {\r\n        case \"air\":\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction tryCorrectBeltJunctions(blocks, rows, cols, x, y, idx, img) {\r\n    var idxl = getArrayIndex(cols, x - 1, y);\r\n    var idxr = getArrayIndex(cols, x + 1, y);\r\n    var idxu = getArrayIndex(cols, x, y - 1);\r\n    var idxd = getArrayIndex(cols, x, y + 1);\r\n    if (blocks[idxl] == blocks[idxr] && (blocks[idxl] == \"belt-left\" || blocks[idxl] == \"belt-right\")) {\r\n        return blocks[idxl];\r\n    }\r\n    if ((blocks[idxl] == \"belt-dr\" || blocks[idxl] == \"belt-ur\") && blocks[idxr] == \"belt-right\") {\r\n        return \"belt-right\";\r\n    }\r\n    if ((blocks[idxr] == \"belt-dl\" || blocks[idxr] == \"belt-ul\") && blocks[idxl] == \"belt-left\") {\r\n        return \"belt-left\";\r\n    }\r\n    if ((blocks[idxl] == \"belt-dr\" || blocks[idxl] == \"belt-ur\" || blocks[idxl] == \"belt-right\") && (blocks[idxr] == \"belt-left\" || blocks[idxr] == \"belt-dl\" || blocks[idxr] == \"belt-ul\")) {\r\n        //console.log(\"Belt @ \"+x+\", \"+y+\" has left with right exit and vice versa.\");\r\n        return img == \"belt-down\" || img == \"belt-ld\" || img == \"belt-rd\" ? \"belt-down\" : \"belt-up\";\r\n    }\r\n    if (blocks[idxu] == blocks[idxd] && (blocks[idxd] == \"belt-up\" || blocks[idxd] == \"belt-down\")) {\r\n        return blocks[idxd];\r\n    }\r\n    if ((blocks[idxd] == \"belt-lu\" || blocks[idxd] == \"belt-ru\") && blocks[idxu] == \"belt-up\") {\r\n        return \"belt-up\";\r\n    }\r\n    if ((blocks[idxu] == \"belt-ld\" || blocks[idxu] == \"belt-rd\") && blocks[idxd] == \"belt-down\") {\r\n        return \"belt-down\";\r\n    }\r\n    if ((blocks[idxu] == \"belt-down\" || blocks[idxu] == \"belt-rd\" || blocks[idxu] == \"belt-ld\") && (blocks[idxd] == \"belt-up\" || blocks[idxd] == \"belt-ru\" || blocks[idxd] == \"belt-lu\")) {\r\n        //console.log(\"Belt @ \"+x+\", \"+y+\" has up with down exit and vice versa.\");\r\n        return img == \"belt-right\" || img == \"belt-dr\" || img == \"belt-ur\" ? \"belt-right\" : \"belt-left\";\r\n    }\r\n    return img;\r\n}\r\nfunction modifyImageLocational(blocks, rows, cols, x, y, idx, img) {\r\n    if (img != null && typeof (img) != \"undefined\" && img.startsWith(\"belt\") && img.length == 7) { //corner\r\n        img = tryCorrectBeltJunctions(blocks, rows, cols, x, y, idx, img);\r\n    }\r\n    else if (img == \"blocker\") {\r\n        return \"air\";\r\n    }\r\n    return img;\r\n}\r\n/*\r\nfunction getGroundAt(rows, cols, x, y) {\r\n    return \"grass\"+getRandomBetween(0, 15);\r\n}*/\r\nfunction genBelt(rows, cols, blocks) {\r\n    var side1 = getRandomBetween(0, 3); /*\r\n    //var side2 = getRandomBetween(0, 3);\r\n    var y1 = side1 == 0 || side1 == 2 ? (Math.random() < 0.5 ? 0 : rows) : getRandomBetween(0, rows);\r\n    var x1 = side1 == 1 || side1 == 3 ? (Math.random() < 0.5 ? 0 : cols) : getRandomBetween(0, cols);\r\n    //var y2 = side2 == 0 || side2 == 2 ? 0 : getRandomBetween(0, rows);\r\n    //var x2 = side2 == 1 || side2 == 3 ? 0 : getRandomBetween(0, cols);\r\n    var dx = side1 == 1 || side1 == 3 ? 0 : (side1 == );*/\r\n    var x1 = 0;\r\n    var y1 = 0;\r\n    var dx = 0;\r\n    var dy = 0;\r\n    var dir = \"\";\r\n    switch (side1) {\r\n        case 0:\r\n            x1 = getRandomBetween(0, cols - 1);\r\n            y1 = rows - 1;\r\n            dy = -1;\r\n            dir = \"up\";\r\n            break;\r\n        case 1:\r\n            x1 = 0;\r\n            y1 = getRandomBetween(0, rows - 1);\r\n            dx = 1;\r\n            dir = \"right\";\r\n            break;\r\n        case 2:\r\n            x1 = getRandomBetween(0, cols - 1);\r\n            y1 = 0;\r\n            dy = 1;\r\n            dir = \"down\";\r\n            break;\r\n        case 3:\r\n            x1 = cols - 1;\r\n            y1 = getRandomBetween(0, rows - 1);\r\n            dx = -1;\r\n            dir = \"left\";\r\n            break;\r\n    }\r\n    var flag = true;\r\n    var x = x1;\r\n    var y = y1;\r\n    var turns = 0;\r\n    while (flag) {\r\n        var dprev = dir;\r\n        var dirp = dir;\r\n        var idx = getArrayIndex(cols, x, y);\r\n        if (blocks[idx] != \"air\")\r\n            break;\r\n        var randd = Math.random();\r\n        var ch = Math.min(0.35, turns * 0.066);\r\n        var wall = !canBeltMoveFrom(blocks, cols, rows, x, y, dx, dy);\r\n        if (randd < ch || wall) {\r\n            turns = 0;\r\n            var v1 = randd < (wall ? 0.5 : 0.15);\r\n            var down = dy != -1 && canBeltMoveFrom(blocks, cols, rows, x, y, 0, 1);\r\n            var up = dy != 1 && canBeltMoveFrom(blocks, cols, rows, x, y, 0, -1);\r\n            var left = dx != 1 && canBeltMoveFrom(blocks, cols, rows, x, y, -1, 0);\r\n            var right = dx != -1 && canBeltMoveFrom(blocks, cols, rows, x, y, 1, 0);\r\n            var list = [];\r\n            if (down)\r\n                list.push(\"down\");\r\n            if (up)\r\n                list.push(\"up\");\r\n            if (left)\r\n                list.push(\"left\");\r\n            if (right)\r\n                list.push(\"right\");\r\n            if (list.length > 1)\r\n                list = list.filter(item => item != dprev);\r\n            if (list.length > 0) {\r\n                var newdir = list[Math.floor(Math.random() * list.length)];\r\n                switch (newdir) {\r\n                    case \"left\":\r\n                        dx = -1;\r\n                        dir = \"left\";\r\n                        dirp = dy == 1 ? \"dl\" : \"ul\";\r\n                        dy = 0;\r\n                        break;\r\n                    case \"right\":\r\n                        dx = 1;\r\n                        dir = \"right\";\r\n                        dirp = dy == 1 ? \"dr\" : \"ur\";\r\n                        dy = 0;\r\n                        break;\r\n                    case \"up\":\r\n                        dy = -1;\r\n                        dir = \"up\";\r\n                        dirp = dx == 1 ? \"ru\" : \"lu\";\r\n                        dx = 0;\r\n                        break;\r\n                    case \"down\":\r\n                        dy = 1;\r\n                        dir = \"down\";\r\n                        dirp = dx == 1 ? \"rd\" : \"ld\";\r\n                        dx = 0;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                dx = 0;\r\n                dy = 0;\r\n            }\r\n        }\r\n        else {\r\n            turns++;\r\n        }\r\n        var flag2 = dx == 0 && dy == 0;\r\n        if (flag2) {\r\n            //console.log(\"Belt from \"+dprev+\" @ \"+x+\", \"+y+\" had nowhere to go\");\r\n            //dirp = dir;\r\n        }\r\n        blocks[idx] = \"belt-\" + dirp;\r\n        x += dx;\r\n        y += dy;\r\n        flag = x >= 0 && x < cols && y >= 0 && y < rows && !flag2;\r\n    }\r\n}\r\nfunction canBeltMoveFrom(blocks, cols, rows, x, y, dx, dy) {\r\n    var x2 = x + dx;\r\n    var y2 = y + dy;\r\n    var idx = getArrayIndex(cols, x2, y2);\r\n    return x2 < 0 || x2 >= cols || y2 < 0 || y2 >= rows || blocks[idx] == \"air\" || (blocks[idx].startsWith(\"belt\") && Math.random() < 0.5);\r\n}\r\nfunction generateDecorations(rows, cols, ground, blocks, tw, th, w, h) {\r\n    var list = [];\r\n    for (var n = 0; n < Math.floor(rows / 4); n++) {\r\n        //var posX = getRandomBetween(6, cols-6);\r\n        //var posY = getRandomBetween(6, rows-6);\r\n        var type = \"rock\" + getRandomBetween(1, 4);\r\n        var sz = type == \"rock1\" ? 128 : 64;\r\n        var posX = getRandomBetween(sz / 2, tw - sz / 2);\r\n        var posY = getRandomBetween(sz / 2, th - sz / 2);\r\n        var minX = Math.floor(posX / w);\r\n        var minY = Math.floor(posY / h);\r\n        var maxX = Math.ceil((posX + sz / 2) / w);\r\n        var maxY = Math.ceil((posY + sz / 2) / h);\r\n        var canPlace = true;\r\n        for (var i = minX; i <= maxX && canPlace; i++) {\r\n            for (var k = minY; k <= maxY && canPlace; k++) {\r\n                var idx = getArrayIndex(cols, i, k);\r\n                if (blocks[idx] != \"air\") {\r\n                    canPlace = false;\r\n                }\r\n            }\r\n        }\r\n        if (canPlace) {\r\n            for (var i = minX; i <= maxX; i++) {\r\n                for (var k = minY; k <= maxY; k++) {\r\n                    var idx = getArrayIndex(cols, i, k);\r\n                    blocks[idx] = \"blocker\";\r\n                }\r\n            }\r\n            var entry = { image: type, x: posX, y: posY, size: sz, scale: 0.5 };\r\n            //console.log(\"Placing \"+entry.image+\" @ \"+entry.x+\", \"+entry.y);\r\n            list.push(entry);\r\n        }\r\n    }\r\n    for (var n = 0; n < Math.max(5, Math.floor(rows / 15)); n++) {\r\n        var rootX = getRandomBetween(256, tw - 256);\r\n        var rootY = getRandomBetween(256, th - 256);\r\n        for (var n2 = 0; n2 < 3; n2++) {\r\n            var building = getRandomBuilding();\r\n            var sz = (building == \"turret\" || building == \"plasma\") ? 64 : 128;\r\n            if (building == \"well\")\r\n                sz = 256;\r\n            var posX = getRandomBetween(rootX - sz, rootX + sz);\r\n            var posY = getRandomBetween(rootY - sz, rootY + sz);\r\n            var minX = Math.floor(posX / w);\r\n            var minY = Math.floor(posY / h);\r\n            var maxX = Math.ceil((posX + sz / 2) / w);\r\n            var maxY = Math.ceil((posY + sz / 2) / h);\r\n            var canPlace = true;\r\n            for (var i = minX; i <= maxX && canPlace; i++) {\r\n                for (var k = minY; k <= maxY && canPlace; k++) {\r\n                    var idx = getArrayIndex(cols, i, k);\r\n                    if (blocks[idx] != \"air\") {\r\n                        canPlace = false;\r\n                    }\r\n                }\r\n            }\r\n            if (canPlace) {\r\n                for (var i = minX; i <= maxX; i++) {\r\n                    for (var k = minY; k <= maxY; k++) {\r\n                        var idx = getArrayIndex(cols, i, k);\r\n                        blocks[idx] = \"blocker\";\r\n                    }\r\n                }\r\n                var entry = { image: building, x: posX, y: posY, size: sz, scale: 0.5 };\r\n                //console.log(\"Placing \"+entry.image+\" @ \"+entry.x+\", \"+entry.y);\r\n                list.push(entry);\r\n            }\r\n        }\r\n    }\r\n    for (var n = 0; n < Math.floor(rows / 16); n++) {\r\n        var sz = 192;\r\n        var posX = getRandomBetween(sz / 2, tw - sz / 2);\r\n        var posY = getRandomBetween(sz / 2, th - sz / 2);\r\n        var minX = Math.floor(posX / w);\r\n        var minY = Math.floor(posY / h);\r\n        var maxX = Math.ceil((posX + sz / 2) / w);\r\n        var maxY = Math.ceil((posY + sz / 2) / h);\r\n        var canPlace = true;\r\n        for (var i = minX; i <= maxX && canPlace; i++) {\r\n            for (var k = minY; k <= maxY && canPlace; k++) {\r\n                var idx = getArrayIndex(cols, i, k);\r\n                if (blocks[idx] != \"air\") {\r\n                    canPlace = false;\r\n                }\r\n            }\r\n        }\r\n        if (canPlace) {\r\n            for (var i = minX; i <= maxX; i++) {\r\n                for (var k = minY; k <= maxY; k++) {\r\n                    var idx = getArrayIndex(cols, i, k);\r\n                    blocks[idx] = \"blocker\";\r\n                }\r\n            }\r\n            var entry = { image: \"spawner\", x: posX, y: posY, size: sz, scale: 0.75 };\r\n            //console.log(\"Placing \"+entry.image+\" @ \"+entry.x+\", \"+entry.y);\r\n            list.push(entry);\r\n            for (var n2 = 0; n2 < 3; n2++) {\r\n                //posX = getRandomBetween(entry.x-sz, entry.x+sz);\r\n                //posY = getRandomBetween(entry.y-sz, entry.y+sz);\r\n                var ang = getRandomBetween(0, 360) * Math.PI / 180;\r\n                var dr = getRandomDecimalBetween(sz / 3, sz);\r\n                posX = entry.x + sz / 2 + Math.cos(ang) * dr;\r\n                posY = entry.y + sz / 2 + Math.sin(ang) * dr;\r\n                var minX = Math.floor(posX / w);\r\n                var minY = Math.floor(posY / h);\r\n                var maxX = Math.ceil((posX + sz / 2) / w);\r\n                var maxY = Math.ceil((posY + sz / 2) / h);\r\n                var canPlace = true;\r\n                for (var i = minX; i <= maxX && canPlace; i++) {\r\n                    for (var k = minY; k <= maxY && canPlace; k++) {\r\n                        var idx = getArrayIndex(cols, i, k);\r\n                        if (blocks[idx] != \"air\") {\r\n                            canPlace = false;\r\n                        }\r\n                    }\r\n                }\r\n                if (canPlace) {\r\n                    for (var i = minX; i <= maxX; i++) {\r\n                        for (var k = minY; k <= maxY; k++) {\r\n                            var idx = getArrayIndex(cols, i, k);\r\n                            blocks[idx] = \"blocker\";\r\n                        }\r\n                    }\r\n                    list.push({ image: \"worm\", x: posX, y: posY, size: 96, scale: 0.75 });\r\n                }\r\n            }\r\n            for (var n2 = 0; n2 < 9; n2++) {\r\n                //posX = getRandomBetween(entry.x-sz, entry.x+sz);\r\n                //posY = getRandomBetween(entry.y-sz, entry.y+sz);\r\n                var ang = getRandomBetween(0, 360) * Math.PI / 180;\r\n                var dr = getRandomDecimalBetween(sz / 3, sz);\r\n                posX = entry.x + sz / 2 + Math.cos(ang) * dr;\r\n                posY = entry.y + sz / 2 + Math.sin(ang) * dr;\r\n                var mob = \"biter\" + getRandomBetween(1, 4);\r\n                if (Math.random() < 0.1)\r\n                    mob = \"fly\";\r\n                list.push({ image: mob, x: posX, y: posY, size: 64, scale: 1 });\r\n            }\r\n        }\r\n    }\r\n    for (var n = 0; n < Math.floor(rows * cols / 12); n++) {\r\n        var sz = 128;\r\n        var posX = getRandomBetween(sz / 2, tw - sz / 2);\r\n        var posY = getRandomBetween(sz / 2, th - sz / 2);\r\n        var blockX = Math.floor((posX + sz / 2) / w);\r\n        var blockY = Math.floor((posY + sz / 2) / h);\r\n        var idx = getArrayIndex(cols, blockX, blockY);\r\n        var canPlace = blocks[idx] == \"air\";\r\n        if (canPlace) {\r\n            var idx2 = getArrayIndex(Math.floor(cols / 2), Math.floor(blockX / 2), Math.floor(blockY / 2));\r\n            //console.log(\"Placing \"+entry.image+\" @ \"+entry.x+\", \"+entry.y+\" on tile index \"+idx2+\" = \"+gr\tound[idx2]);\r\n            var sand = ground[idx2].startsWith(\"dirt\") || ground[idx2].startsWith(\"ice\");\r\n            if (sand && xmas)\r\n                continue;\r\n            var entry = { image: \"tree\" + getRandomBetween(sand ? 1 : 3, sand ? 2 : 5), x: posX, y: posY, size: sz, scale: 1 };\r\n            if (xmas) {\r\n                entry.image = \"snowtree\" + getRandomBetween(1, 3);\r\n                entry.scale *= 1.5;\r\n            }\r\n            list.push(entry);\r\n        }\r\n    }\r\n    return list;\r\n}\r\nfunction getRandomBuilding() {\r\n    var types = [\"turret\", \"plasma\", \"well\", \"dome\"];\r\n    return types[getRandomBetween(0, types.length - 1)];\r\n}\r\nfunction genDirt(rows, cols, ground) {\r\n    var x = getRandomBetween(4, cols - 4);\r\n    var y = getRandomBetween(4, rows - 4);\r\n    //console.log(\"Genning dirt @ \"+x+\", \"+y);\r\n    var s = [2, 5];\r\n    //s[0] = 1;\r\n    //s[1] = 9;\r\n    var rx = getRandomDecimalBetween(s[0], s[1]);\r\n    var ry = getRandomDecimalBetween(s[0], s[1]);\r\n    var mx = Math.max(0, Math.floor(x - rx));\r\n    var my = Math.max(0, Math.floor(y - ry));\r\n    var px = Math.min(cols - 1, Math.floor(x + rx));\r\n    var py = Math.min(rows - 1, Math.floor(y + ry));\r\n    var ms = 0.75;\r\n    var slopeX = getRandomDecimalBetween(-ms, ms);\r\n    var slopeY = getRandomDecimalBetween(-ms, ms);\r\n    for (var i = mx; i <= px; i++) {\r\n        for (var k = my; k <= py; k++) {\r\n            var di = i - x;\r\n            var dk = k - y;\r\n            if (di * di + dk * dk <= rx * ry + 0.5) {\r\n                var dx = i + Math.floor(slopeX * dk);\r\n                var dy = k + Math.floor(slopeY * di);\r\n                var idx = getArrayIndex(cols, dx, dy);\r\n                ground[idx] = xmas ? (\"ice\" + getRandomBetween(0, 15)) : (\"dirt\" + getRandomBetween(0, 20));\r\n                //console.log(\"Placing dirt @ \"+dx+\", \"+dy+\" (idx = \"+idx);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction generateOre(rows, cols, ore) {\r\n    var ret = [];\r\n    for (var n = 0; n < rows * cols / 200; n++) {\r\n        var r = getRandomBetween(2, 9);\r\n        var x = getRandomBetween(r + 2, cols - r - 2);\r\n        var y = getRandomBetween(r + 2, rows - r - 2);\r\n        var mx = Math.max(0, Math.floor(x - r));\r\n        var my = Math.max(0, Math.floor(y - r));\r\n        var px = Math.min(cols - 1, Math.floor(x + r));\r\n        var py = Math.min(rows - 1, Math.floor(y + r));\r\n        var maxtype = 7;\r\n        var f = Math.random();\r\n        var type = \"coal\";\r\n        if (f < 0.1)\r\n            type = \"oil\";\r\n        else if (f < 0.4)\r\n            type = \"copper\";\r\n        else if (f < 0.7)\r\n            type = \"iron\";\r\n        if (Math.random() < 0.2)\r\n            type = \"geothermal_\";\r\n        if (type == \"oil\" || type == \"geothermal_\") {\r\n            maxtype = type == \"oil\" ? 3 : 5;\r\n            for (var m = 0; m < r * 2; m++) {\r\n                var dx = getRandomBetween(mx, px);\r\n                var dy = getRandomBetween(my, py);\r\n                var idx = getArrayIndex(cols, dx, dy);\r\n                if (ore[idx] == \"air\") {\r\n                    ore[idx] = type + getRandomBetween(0, maxtype);\r\n                    if (type == \"geothermal_\") {\r\n                        ret.push({ x: dx, y: dy });\r\n                        if (dx > 0)\r\n                            ore[getArrayIndex(cols, dx - 1, dy)] = \"blocker\";\r\n                        if (dx < cols)\r\n                            ore[getArrayIndex(cols, dx + 1, dy)] = \"blocker\";\r\n                        if (dy > 0)\r\n                            ore[getArrayIndex(cols, dx, dy - 1)] = \"blocker\";\r\n                        if (dy < rows)\r\n                            ore[getArrayIndex(cols, dx, dy + 1)] = \"blocker\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (var i = mx; i <= px; i++) {\r\n                for (var k = my; k <= py; k++) {\r\n                    var di = i - x;\r\n                    var dk = k - y;\r\n                    if (di * di + dk * dk <= r * r + 0.5) {\r\n                        var idx = getArrayIndex(cols, i, k);\r\n                        if (ore[idx] == \"air\")\r\n                            ore[idx] = type + getRandomBetween(0, maxtype);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nexport default function setPageBackground() {\r\n    if (isPhone)\r\n        return;\r\n    let tail = '</svg>';\r\n    let w = 32 * SCALE;\r\n    let h = 32 * SCALE;\r\n    let x = 0;\r\n    let y = 0;\r\n    //var height = findHighestNode(0, document.documentElement.childNodes);\r\n    let body = document.body;\r\n    let html = document.documentElement;\r\n    var rh = body.scrollHeight; //document.body.offsetHeight;//Math.max(body.offsetHeight, html.clientHeight, html.offsetHeight, window.innerHeight, document.body.clientHeight);\r\n    var rw = Math.max(window.innerWidth, body.scrollWidth); //Math.max(window.innerWidth, document.body.clientWidth);\r\n    //console.log(rw+\" x \"+rh);\r\n    let rows = Math.ceil(rh / h);\r\n    let cols = Math.ceil(rw / w);\r\n    let tw = cols * w;\r\n    let th = rows * h;\r\n    console.log(\"Generating Factorio tileset with \" + cols + \" columns and \" + rows + \" rows\");\r\n    var ground = new Array(Math.ceil(cols * rows / 4));\r\n    var ore = new Array(cols * rows);\r\n    var blocks = new Array(cols * rows);\r\n    for (var i = 0; i < cols; i++) {\r\n        for (var k = 0; k < rows; k++) {\r\n            let idx = getArrayIndex(cols, i, k);\r\n            let img = \"air\";\r\n            blocks[idx] = img;\r\n            ore[idx] = img;\r\n            if (i < Math.ceil(cols / 2) && k < Math.ceil(rows / 2)) {\r\n                let max = xmas ? 15 : (Math.random() < 0.125 ? 15 : 3);\r\n                ground[getArrayIndex(Math.ceil(cols / 2), i, k)] = (xmas ? \"snow\" : \"grass\") + getRandomBetween(0, max);\r\n            }\r\n        }\r\n    }\r\n    for (var i = 0; i < Math.floor(rows / 6); i++)\r\n        genDirt(rows / 2, cols / 2, ground);\r\n    var geo = generateOre(rows, cols, ore);\r\n    let deco = generateDecorations(rows, cols, ground, blocks, tw, th, w, h);\r\n    for (var i = 0; i < Math.floor(rows / 1.5); i++)\r\n        genBelt(rows, cols, blocks);\r\n    let tag = \"background-content\";\r\n    let container = document.getElementById(tag);\r\n    if (container == null) {\r\n        container = document.createElement(\"div\");\r\n        container.id = tag;\r\n        console.log(\"Injecting background element.\");\r\n        document.body.prepend(container);\r\n    }\r\n    while (container.firstChild) {\r\n        container.removeChild(container.firstChild);\r\n    }\r\n    //console.log(elem);\r\n    let tiles = document.createElement(\"div\");\r\n    let ores = document.createElement(\"div\");\r\n    let entities = document.createElement(\"div\");\r\n    let decoration = document.createElement(\"div\");\r\n    let glows = document.createElement(\"div\");\r\n    let dark = document.createElement(\"div\");\r\n    container.appendChild(tiles);\r\n    container.appendChild(ores);\r\n    container.appendChild(entities);\r\n    container.appendChild(decoration);\r\n    if (isDarkModeEnabled()) {\r\n        container.appendChild(dark);\r\n    }\r\n    container.appendChild(glows);\r\n    tiles.style.width = rw.toString() + \"px\";\r\n    tiles.style.height = rh.toString() + \"px\";\r\n    tiles.style.position = \"relative\";\r\n    tiles.style.left = \"0px\";\r\n    tiles.style.top = \"0px\";\r\n    ores.style.width = rw.toString() + \"px\";\r\n    ores.style.height = rh.toString() + \"px\";\r\n    ores.style.position = \"relative\";\r\n    ores.style.left = \"0px\";\r\n    ores.style.top = \"0px\";\r\n    ores.classList.add(\"entity-layer\");\r\n    entities.style.width = rw.toString() + \"px\";\r\n    entities.style.height = rh.toString() + \"px\";\r\n    entities.classList.add(\"tile-layer\");\r\n    decoration.style.width = rw.toString() + \"px\";\r\n    decoration.style.height = rh.toString() + \"px\";\r\n    decoration.style.position = \"relative\";\r\n    decoration.style.left = \"0px\";\r\n    decoration.style.top = \"0px\";\r\n    decoration.classList.add(\"entity-layer\");\r\n    glows.style.width = rw.toString() + \"px\";\r\n    glows.style.height = rh.toString() + \"px\";\r\n    glows.style.position = \"relative\";\r\n    glows.style.left = \"0px\";\r\n    glows.style.top = \"0px\";\r\n    glows.style.setProperty(\"mix-blend-mode\", \"screen\");\r\n    glows.classList.add(\"entity-layer\");\r\n    tiles.classList.add(\"tile-layer\");\r\n    //\tores.className = \"tile-layer\";\r\n    //entities.className = \"tile-layer\";\r\n    buildImage(tiles, Math.ceil(rows / 2), Math.ceil(cols / 2), ground, 2);\r\n    buildLooseImage(ores, rows, cols, ore, 32, 0.75, 4, 4);\r\n    buildImage(entities, rows, cols, blocks, 1);\r\n    //container.style.width = rw.toString()+\"px\";\r\n    //container.style.height = rh.toString()+\"px\";\r\n    try {\r\n        for (let [type, rgb] of Object.entries(treeColors)) {\r\n            let selector = \".tile-factorio-glowcolor_\" + type + \"::after\";\r\n            let sz = 512;\r\n            let offset = 0; //-sz/2+32;\r\n            document.styleSheets[0].addRule(selector, \"width: \" + sz + \"px;\");\r\n            document.styleSheets[0].addRule(selector, \"height: \" + sz + \"px;\");\r\n            document.styleSheets[0].addRule(selector, \"top: \" + offset + \"px;\");\r\n            document.styleSheets[0].addRule(selector, \"left: \" + offset + \"px;\");\r\n            document.styleSheets[0].addRule(selector, \"background: radial-gradient(rgba(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",255) 0%, rgba(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",0) 70%);\");\r\n            document.styleSheets[0].addRule(selector, \"mix-blend-mode: screen;\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        console.log(\"Could not access ruleset: \" + e);\r\n    }\r\n    let domes = [];\r\n    let biters = [];\r\n    for (var i = 0; i < deco.length; i++) {\r\n        var dx = deco[i].x - w / 2;\r\n        var dy = deco[i].y - h / 2;\r\n        var ds = deco[i].size * SCALE;\r\n        if (deco[i].image == \"dome\") {\r\n            domes.push({ image: \"domeglow\", x: dx - SCALE * 192, y: dy - SCALE * 160, size: ds * 4 });\r\n            deco[i].scale = 1;\r\n        }\r\n        else if (deco[i].image == \"fly\" || deco[i].image.startsWith(\"biter\")) {\r\n            biters.push({ x: deco[i].x - deco[i].size / 2, y: deco[i].y - deco[i].size / 2, size: deco[i].size });\r\n        }\r\n        addPositionedImage(decoration, deco[i].image, ds, ds, dx, dy, deco[i].scale);\r\n    }\r\n    for (var i = 0; i < domes.length; i++) {\r\n        addPositionedImage(glows, domes[i].image, domes[i].size, domes[i].size, domes[i].x, domes[i].y);\r\n    }\r\n    let bushes = [];\r\n    for (var n = 0; n < Math.floor(rows / 2); n++) {\r\n        let idx = getRandomBetween(0, 10);\r\n        var bush = \"biolumbush\" + idx;\r\n        let color = bushColors[idx];\r\n        var dx = getRandomBetween(64, rw - 64);\r\n        var dy = getRandomBetween(64, rh - 64);\r\n        addPositionedImage(decoration, bush, 64, 64, dx, dy, 0.75);\r\n        bushes.push({ color: color, x: dx, y: dy });\r\n    }\r\n    if (isDarkModeEnabled()) {\r\n        dark.style.width = rw.toString() + \"px\";\r\n        dark.style.height = rh.toString() + \"px\";\r\n        dark.classList.add(\"entity-layer\");\r\n        // dark.style.position = \"absolute\";\r\n        dark.style.backgroundColor = \"#395060\";\r\n        dark.style.setProperty(\"mix-blend-mode\", \"multiply\");\r\n        for (var i = 0; i < geo.length; i++) {\r\n            addPositionedImage(dark, \"light\", 256, 256, geo[i].x * 32 - 48, geo[i].y * 32 - 45, 0.33);\r\n        }\r\n        for (var i = 0; i < biters.length; i++) {\r\n            addPositionedImage(dark, \"light\", 256, 256, biters[i].x - 16, biters[i].y - 16, 0.25);\r\n        }\r\n        //console.log(bushes);\r\n        for (var n = 0; n < bushes.length; n++) {\r\n            let bush = bushes[n];\r\n            for (var i = 0; i < 2; i++) {\r\n                let glow = addPositionedImage(dark, \"glowcolor_\" + bush.color, 512, 512, bush.x - 22, bush.y - 22, 0.175);\r\n                glow.style.width = \"512px\";\r\n                glow.style.height = \"512px\";\r\n            }\r\n        }\r\n        for (var n = 0; n < Math.floor(rows / 3); n++) {\r\n            var plant = \"biolumtree\" + getRandomBetween(0, 1);\r\n            let color = getRandomMapKey(treeColors);\r\n            var dx = getRandomBetween(64, rw - 64);\r\n            var dy = getRandomBetween(64, rh - 64);\r\n            addPositionedImage(decoration, plant, 64, 64, dx, dy, 1);\r\n            for (var k = -1; k <= 1; k++) {\r\n                for (var i = 0; i < 2; i++) {\r\n                    let glow = addPositionedImage(dark, \"glowcolor_\" + color, 512, 512, dx + 2, dy + 32 * k, 0.25);\r\n                    glow.style.width = \"512px\";\r\n                    glow.style.height = \"512px\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n    fitBCG(decoration, SCALE);\r\n}\r\n//window.addEventListener('resize', debounce(setPageBackground, 100));\r\n"],"sourceRoot":""}
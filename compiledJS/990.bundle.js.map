{"version":3,"sources":["webpack://sitecore/./node_modules/ts-debounce/dist/src/index.esm.js","webpack://sitecore/./factorio/backgroundgen.ts"],"names":["r","e","n","i","t","o","a","isImmediate","u","callback","c","maxWait","v","Date","now","l","f","d","slice","call","arguments","this","Promise","clearTimeout","setTimeout","apply","forEach","resolve","push","reject","cancel","treeColors","red","orange","yellow","green","cyan","argon","blue","purple","magenta","white","bushColors","addImageToRow","elem","img","w","h","tile","document","createElement","className","style","width","toString","height","appendChild","addPositionedImage","dx","dy","scale","added","position","left","top","startsWith","transformOrigin","transform","buildImage","rows","cols","grid","scaleFactor","k","row","idx","modifyImageLocational","blocks","x","y","length","idxl","idxr","idxu","idxd","tryCorrectBeltJunctions","genBelt","x1","y1","dir","flag","turns","dprev","dirp","randd","Math","random","ch","min","wall","canBeltMoveFrom","down","up","right","list","filter","item","floor","flag2","x2","y2","genDirt","ground","s","rx","ry","mx","max","my","px","py","ms","slopeX","slopeY","di","dk","setPageBackground","body","html","documentElement","rh","offsetHeight","clientHeight","window","innerHeight","rw","innerWidth","clientWidth","ceil","tw","th","console","log","Array","ore","geo","ret","maxtype","type","m","generateOre","deco","sz","posX","posY","minX","minY","maxX","maxY","canPlace","entry","image","size","rootX","rootY","n2","building","ang","PI","dr","cos","sin","mob","blockX","blockY","idx2","sand","generateDecorations","tag","container","getElementById","id","prepend","firstChild","removeChild","tiles","ores","entities","decoration","glows","dark","setProperty","fuzzX","fuzzY","buildLooseImage","rgb","Object","entries","selector","offset","styleSheets","addRule","g","b","domes","biters","ds","SCALE","bushes","color","backgroundColor","bush","glow","plant","addEventListener"],"mappings":"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","file":"990.bundle.js","sourcesContent":["function r(r,e,n){var i,t,o;void 0===e&&(e=50),void 0===n&&(n={});var a=null!=(i=n.isImmediate)&&i,u=null!=(t=n.callback)&&t,c=n.maxWait,v=Date.now(),l=[];function f(){if(void 0!==c){var r=Date.now()-v;if(r+e>=c)return c-r}return e}var d=function(){var e=[].slice.call(arguments),n=this;return new Promise(function(i,t){var c=a&&void 0===o;if(void 0!==o&&clearTimeout(o),o=setTimeout(function(){if(o=void 0,v=Date.now(),!a){var i=r.apply(n,e);u&&u(i),l.forEach(function(r){return(0,r.resolve)(i)}),l=[]}},f()),c){var d=r.apply(n,e);return u&&u(d),i(d)}l.push({resolve:i,reject:t})})};return d.cancel=function(r){void 0!==o&&clearTimeout(o),l.forEach(function(e){return(0,e.reject)(r)}),l=[]},d}export{r as debounce};\n//# sourceMappingURL=index.esm.js.map\n","//import * as browser from '../browser.js'\r\n//import * as library from '../library.js'\r\nimport { debounce } from \"ts-debounce\";\r\nimport { xmas, getRandomBetween, getRandomDecimalBetween, getArrayIndex, fitBCG, isDarkModeEnabled, hexToRGB, getRandomMapKey } from '../library';\r\nimport { isPhone } from '../browser';\r\nconst treeColors = { red: hexToRGB(\"ff0000\"), orange: hexToRGB(\"FF7F00\"), yellow: hexToRGB(\"ffD800\"), green: hexToRGB(\"00ff00\"), cyan: hexToRGB(\"00ffff\"), argon: hexToRGB(\"4CCCFF\"), blue: hexToRGB(\"0045ff\"), purple: hexToRGB(\"A426FF\"), magenta: hexToRGB(\"FF00FF\"), white: hexToRGB(\"ffffff\") };\r\nconst bushColors = [\"argon\", \"argon\", \"purple\", \"red\", \"yellow\", \"yellow\", \"orange\", \"purple\", \"green\", \"magenta\", \"blue\"];\r\nconst SCALE = 1;\r\n/*\r\nfunction addImage(elem:HTMLElement, img:string, ix:number, iy:number, iw:number, ih:number) {\r\n    //var pre = '<image x=\"'+ix+'\" y=\"'+iy+'\" width=\"'+iw+'\" height=\"'+ih+'\" xlink:href=\"'+getImageRoot();\r\n    //var post = '.png\" />';\r\n    //return pre+img+post;\r\n    if (img.startsWith(\"snowtree\")) {\r\n        iw = iw*1.5;\r\n        ih = ih*1.5;\r\n    }\r\n    if (img.startsWith(\"geothermal\")) {\r\n        iw = iw*2;\r\n        ih = ih*2;\r\n        ix = Math.max(0, ix-1);\r\n        iy = Math.max(0, iy-1);\r\n        //console.log(\"Geo @ \"+ix+\", \"+iy);\r\n    }\r\n    let svgimg = document.createElementNS('http://www.w3.org/2000/svg', 'image');\r\n    svgimg.setAttributeNS(null, wkey, getTileWidth(iw));\r\n    svgimg.setAttributeNS(null, hkey, getTileHeight(ih));\r\n    svgimg.setAttributeNS('http://www.w3.org/1999/xlink', 'href', getOrCreateImgPath(img, \"factiles\"));\r\n    svgimg.setAttributeNS(null, xkey, ix.toString());\r\n    svgimg.setAttributeNS(null, ykey, iy.toString());\r\n    svgimg.setAttributeNS(null, viskey, visval);\r\n    if (img == \"domeglow\")\r\n        svgimg.setAttributeNS(null, \"style\", \"mix-blend-mode: screen;\");\r\n    elem.appendChild(svgimg);\r\n}\r\n*/\r\nfunction addImageToRow(elem, img, w, h) {\r\n    let tile = document.createElement('div');\r\n    tile.className = \"tile-factorio-\" + img;\r\n    if (img == \"air\" || img == null) {\r\n        tile.style.width = w.toString() + \"px\";\r\n        tile.style.height = h.toString() + \"px\";\r\n    }\r\n    elem.appendChild(tile);\r\n    return tile;\r\n}\r\nfunction addPositionedImage(elem, img, w, h, dx, dy, scale = 1) {\r\n    let added = addImageToRow(elem, img, w, h);\r\n    added.style.position = \"absolute\";\r\n    added.style.left = dx.toString() + \"px\";\r\n    added.style.top = dy.toString() + \"px\";\r\n    //if (img.startsWith(\"geothermal\"))\r\n    //\tscale *= 2;\r\n    if (img != null && typeof (img) != \"undefined\" && img.startsWith(\"oil\"))\r\n        scale *= 1.5;\r\n    added.style.transformOrigin = \"top left\";\r\n    added.style.transform = \"scale(\" + scale + \")\";\r\n    if (img == \"spawner\")\r\n        added.style.transform = added.style.transform + \" translate(-16px)\";\r\n    return added;\r\n}\r\nfunction buildLooseImage(elem, rows, cols, grid, size, scale = 1, fuzzX = 0, fuzzY = 0) {\r\n    var x = 0;\r\n    var y = 0;\r\n    for (var k = 0; k < rows; k++) {\r\n        x = 0;\r\n        for (var i = 0; i < cols; i++) {\r\n            let idx = getArrayIndex(cols, i, k);\r\n            let img = grid[idx];\r\n            img = modifyImageLocational(grid, rows, cols, i, k, idx, img);\r\n            if (img != \"air\") {\r\n                let dx = x;\r\n                if (fuzzX > 0) {\r\n                    dx += (Math.random() - 0.5) * fuzzX * 2;\r\n                }\r\n                let dy = y;\r\n                if (fuzzY > 0) {\r\n                    dy += (Math.random() - 0.5) * fuzzY * 2;\r\n                }\r\n                addPositionedImage(elem, img, size, size, dx, dy, scale);\r\n            }\r\n            x += size;\r\n        }\r\n        y += size;\r\n    }\r\n    fitBCG(elem, SCALE);\r\n}\r\nfunction buildImage(elem, rows, cols, grid, scaleFactor) {\r\n    var w = 32 * SCALE * scaleFactor;\r\n    var h = 32 * SCALE * scaleFactor;\r\n    var x = 0;\r\n    var y = 0;\r\n    for (var k = 0; k < rows; k++) {\r\n        x = 0;\r\n        let row = document.createElement(\"div\");\r\n        for (var i = 0; i < cols; i++) {\r\n            let idx = getArrayIndex(cols, i, k);\r\n            let img = grid[idx];\r\n            img = modifyImageLocational(grid, rows, cols, i, k, idx, img);\r\n            //if (img != \"air\")\r\n            addImageToRow(row, img, w, h);\r\n            x += w;\r\n        }\r\n        elem.appendChild(row);\r\n        y += h;\r\n    }\r\n    fitBCG(elem, SCALE);\r\n}\r\nfunction isTransparent(img) {\r\n    switch (img) {\r\n        case \"air\":\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction tryCorrectBeltJunctions(blocks, rows, cols, x, y, idx, img) {\r\n    var idxl = getArrayIndex(cols, x - 1, y);\r\n    var idxr = getArrayIndex(cols, x + 1, y);\r\n    var idxu = getArrayIndex(cols, x, y - 1);\r\n    var idxd = getArrayIndex(cols, x, y + 1);\r\n    if (blocks[idxl] == blocks[idxr] && (blocks[idxl] == \"belt-left\" || blocks[idxl] == \"belt-right\")) {\r\n        return blocks[idxl];\r\n    }\r\n    if ((blocks[idxl] == \"belt-dr\" || blocks[idxl] == \"belt-ur\") && blocks[idxr] == \"belt-right\") {\r\n        return \"belt-right\";\r\n    }\r\n    if ((blocks[idxr] == \"belt-dl\" || blocks[idxr] == \"belt-ul\") && blocks[idxl] == \"belt-left\") {\r\n        return \"belt-left\";\r\n    }\r\n    if ((blocks[idxl] == \"belt-dr\" || blocks[idxl] == \"belt-ur\" || blocks[idxl] == \"belt-right\") && (blocks[idxr] == \"belt-left\" || blocks[idxr] == \"belt-dl\" || blocks[idxr] == \"belt-ul\")) {\r\n        //console.log(\"Belt @ \"+x+\", \"+y+\" has left with right exit and vice versa.\");\r\n        return img == \"belt-down\" || img == \"belt-ld\" || img == \"belt-rd\" ? \"belt-down\" : \"belt-up\";\r\n    }\r\n    if (blocks[idxu] == blocks[idxd] && (blocks[idxd] == \"belt-up\" || blocks[idxd] == \"belt-down\")) {\r\n        return blocks[idxd];\r\n    }\r\n    if ((blocks[idxd] == \"belt-lu\" || blocks[idxd] == \"belt-ru\") && blocks[idxu] == \"belt-up\") {\r\n        return \"belt-up\";\r\n    }\r\n    if ((blocks[idxu] == \"belt-ld\" || blocks[idxu] == \"belt-rd\") && blocks[idxd] == \"belt-down\") {\r\n        return \"belt-down\";\r\n    }\r\n    if ((blocks[idxu] == \"belt-down\" || blocks[idxu] == \"belt-rd\" || blocks[idxu] == \"belt-ld\") && (blocks[idxd] == \"belt-up\" || blocks[idxd] == \"belt-ru\" || blocks[idxd] == \"belt-lu\")) {\r\n        //console.log(\"Belt @ \"+x+\", \"+y+\" has up with down exit and vice versa.\");\r\n        return img == \"belt-right\" || img == \"belt-dr\" || img == \"belt-ur\" ? \"belt-right\" : \"belt-left\";\r\n    }\r\n    return img;\r\n}\r\nfunction modifyImageLocational(blocks, rows, cols, x, y, idx, img) {\r\n    if (img != null && typeof (img) != \"undefined\" && img.startsWith(\"belt\") && img.length == 7) { //corner\r\n        img = tryCorrectBeltJunctions(blocks, rows, cols, x, y, idx, img);\r\n    }\r\n    else if (img == \"blocker\") {\r\n        return \"air\";\r\n    }\r\n    return img;\r\n}\r\n/*\r\nfunction getGroundAt(rows, cols, x, y) {\r\n    return \"grass\"+getRandomBetween(0, 15);\r\n}*/\r\nfunction genBelt(rows, cols, blocks) {\r\n    var side1 = getRandomBetween(0, 3); /*\r\n    //var side2 = getRandomBetween(0, 3);\r\n    var y1 = side1 == 0 || side1 == 2 ? (Math.random() < 0.5 ? 0 : rows) : getRandomBetween(0, rows);\r\n    var x1 = side1 == 1 || side1 == 3 ? (Math.random() < 0.5 ? 0 : cols) : getRandomBetween(0, cols);\r\n    //var y2 = side2 == 0 || side2 == 2 ? 0 : getRandomBetween(0, rows);\r\n    //var x2 = side2 == 1 || side2 == 3 ? 0 : getRandomBetween(0, cols);\r\n    var dx = side1 == 1 || side1 == 3 ? 0 : (side1 == );*/\r\n    var x1 = 0;\r\n    var y1 = 0;\r\n    var dx = 0;\r\n    var dy = 0;\r\n    var dir = \"\";\r\n    switch (side1) {\r\n        case 0:\r\n            x1 = getRandomBetween(0, cols - 1);\r\n            y1 = rows - 1;\r\n            dy = -1;\r\n            dir = \"up\";\r\n            break;\r\n        case 1:\r\n            x1 = 0;\r\n            y1 = getRandomBetween(0, rows - 1);\r\n            dx = 1;\r\n            dir = \"right\";\r\n            break;\r\n        case 2:\r\n            x1 = getRandomBetween(0, cols - 1);\r\n            y1 = 0;\r\n            dy = 1;\r\n            dir = \"down\";\r\n            break;\r\n        case 3:\r\n            x1 = cols - 1;\r\n            y1 = getRandomBetween(0, rows - 1);\r\n            dx = -1;\r\n            dir = \"left\";\r\n            break;\r\n    }\r\n    var flag = true;\r\n    var x = x1;\r\n    var y = y1;\r\n    var turns = 0;\r\n    while (flag) {\r\n        var dprev = dir;\r\n        var dirp = dir;\r\n        var idx = getArrayIndex(cols, x, y);\r\n        if (blocks[idx] != \"air\")\r\n            break;\r\n        var randd = Math.random();\r\n        var ch = Math.min(0.35, turns * 0.066);\r\n        var wall = !canBeltMoveFrom(blocks, cols, rows, x, y, dx, dy);\r\n        if (randd < ch || wall) {\r\n            turns = 0;\r\n            var v1 = randd < (wall ? 0.5 : 0.15);\r\n            var down = dy != -1 && canBeltMoveFrom(blocks, cols, rows, x, y, 0, 1);\r\n            var up = dy != 1 && canBeltMoveFrom(blocks, cols, rows, x, y, 0, -1);\r\n            var left = dx != 1 && canBeltMoveFrom(blocks, cols, rows, x, y, -1, 0);\r\n            var right = dx != -1 && canBeltMoveFrom(blocks, cols, rows, x, y, 1, 0);\r\n            var list = [];\r\n            if (down)\r\n                list.push(\"down\");\r\n            if (up)\r\n                list.push(\"up\");\r\n            if (left)\r\n                list.push(\"left\");\r\n            if (right)\r\n                list.push(\"right\");\r\n            if (list.length > 1)\r\n                list = list.filter(item => item != dprev);\r\n            if (list.length > 0) {\r\n                var newdir = list[Math.floor(Math.random() * list.length)];\r\n                switch (newdir) {\r\n                    case \"left\":\r\n                        dx = -1;\r\n                        dir = \"left\";\r\n                        dirp = dy == 1 ? \"dl\" : \"ul\";\r\n                        dy = 0;\r\n                        break;\r\n                    case \"right\":\r\n                        dx = 1;\r\n                        dir = \"right\";\r\n                        dirp = dy == 1 ? \"dr\" : \"ur\";\r\n                        dy = 0;\r\n                        break;\r\n                    case \"up\":\r\n                        dy = -1;\r\n                        dir = \"up\";\r\n                        dirp = dx == 1 ? \"ru\" : \"lu\";\r\n                        dx = 0;\r\n                        break;\r\n                    case \"down\":\r\n                        dy = 1;\r\n                        dir = \"down\";\r\n                        dirp = dx == 1 ? \"rd\" : \"ld\";\r\n                        dx = 0;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                dx = 0;\r\n                dy = 0;\r\n            }\r\n        }\r\n        else {\r\n            turns++;\r\n        }\r\n        var flag2 = dx == 0 && dy == 0;\r\n        if (flag2) {\r\n            //console.log(\"Belt from \"+dprev+\" @ \"+x+\", \"+y+\" had nowhere to go\");\r\n            //dirp = dir;\r\n        }\r\n        blocks[idx] = \"belt-\" + dirp;\r\n        x += dx;\r\n        y += dy;\r\n        flag = x >= 0 && x < cols && y >= 0 && y < rows && !flag2;\r\n    }\r\n}\r\nfunction canBeltMoveFrom(blocks, cols, rows, x, y, dx, dy) {\r\n    var x2 = x + dx;\r\n    var y2 = y + dy;\r\n    var idx = getArrayIndex(cols, x2, y2);\r\n    return x2 < 0 || x2 >= cols || y2 < 0 || y2 >= rows || blocks[idx] == \"air\" || (blocks[idx].startsWith(\"belt\") && Math.random() < 0.5);\r\n}\r\nfunction generateDecorations(rows, cols, ground, blocks, tw, th, w, h) {\r\n    var list = [];\r\n    for (var n = 0; n < Math.floor(rows / 4); n++) {\r\n        //var posX = getRandomBetween(6, cols-6);\r\n        //var posY = getRandomBetween(6, rows-6);\r\n        var type = \"rock\" + getRandomBetween(1, 4);\r\n        var sz = type == \"rock1\" ? 128 : 64;\r\n        var posX = getRandomBetween(sz / 2, tw - sz / 2);\r\n        var posY = getRandomBetween(sz / 2, th - sz / 2);\r\n        var minX = Math.floor(posX / w);\r\n        var minY = Math.floor(posY / h);\r\n        var maxX = Math.ceil((posX + sz / 2) / w);\r\n        var maxY = Math.ceil((posY + sz / 2) / h);\r\n        var canPlace = true;\r\n        for (var i = minX; i <= maxX && canPlace; i++) {\r\n            for (var k = minY; k <= maxY && canPlace; k++) {\r\n                var idx = getArrayIndex(cols, i, k);\r\n                if (blocks[idx] != \"air\") {\r\n                    canPlace = false;\r\n                }\r\n            }\r\n        }\r\n        if (canPlace) {\r\n            for (var i = minX; i <= maxX; i++) {\r\n                for (var k = minY; k <= maxY; k++) {\r\n                    var idx = getArrayIndex(cols, i, k);\r\n                    blocks[idx] = \"blocker\";\r\n                }\r\n            }\r\n            var entry = { image: type, x: posX, y: posY, size: sz, scale: 0.5 };\r\n            //console.log(\"Placing \"+entry.image+\" @ \"+entry.x+\", \"+entry.y);\r\n            list.push(entry);\r\n        }\r\n    }\r\n    for (var n = 0; n < Math.max(5, Math.floor(rows / 15)); n++) {\r\n        var rootX = getRandomBetween(256, tw - 256);\r\n        var rootY = getRandomBetween(256, th - 256);\r\n        for (var n2 = 0; n2 < 3; n2++) {\r\n            var building = getRandomBuilding();\r\n            var sz = (building == \"turret\" || building == \"plasma\") ? 64 : 128;\r\n            var posX = getRandomBetween(rootX - sz, rootX + sz);\r\n            var posY = getRandomBetween(rootY - sz, rootY + sz);\r\n            var minX = Math.floor(posX / w);\r\n            var minY = Math.floor(posY / h);\r\n            var maxX = Math.ceil((posX + sz / 2) / w);\r\n            var maxY = Math.ceil((posY + sz / 2) / h);\r\n            var canPlace = true;\r\n            for (var i = minX; i <= maxX && canPlace; i++) {\r\n                for (var k = minY; k <= maxY && canPlace; k++) {\r\n                    var idx = getArrayIndex(cols, i, k);\r\n                    if (blocks[idx] != \"air\") {\r\n                        canPlace = false;\r\n                    }\r\n                }\r\n            }\r\n            if (canPlace) {\r\n                for (var i = minX; i <= maxX; i++) {\r\n                    for (var k = minY; k <= maxY; k++) {\r\n                        var idx = getArrayIndex(cols, i, k);\r\n                        blocks[idx] = \"blocker\";\r\n                    }\r\n                }\r\n                var entry = { image: building, x: posX, y: posY, size: sz, scale: 0.5 };\r\n                //console.log(\"Placing \"+entry.image+\" @ \"+entry.x+\", \"+entry.y);\r\n                list.push(entry);\r\n            }\r\n        }\r\n    }\r\n    for (var n = 0; n < Math.floor(rows / 16); n++) {\r\n        var sz = 192;\r\n        var posX = getRandomBetween(sz / 2, tw - sz / 2);\r\n        var posY = getRandomBetween(sz / 2, th - sz / 2);\r\n        var minX = Math.floor(posX / w);\r\n        var minY = Math.floor(posY / h);\r\n        var maxX = Math.ceil((posX + sz / 2) / w);\r\n        var maxY = Math.ceil((posY + sz / 2) / h);\r\n        var canPlace = true;\r\n        for (var i = minX; i <= maxX && canPlace; i++) {\r\n            for (var k = minY; k <= maxY && canPlace; k++) {\r\n                var idx = getArrayIndex(cols, i, k);\r\n                if (blocks[idx] != \"air\") {\r\n                    canPlace = false;\r\n                }\r\n            }\r\n        }\r\n        if (canPlace) {\r\n            for (var i = minX; i <= maxX; i++) {\r\n                for (var k = minY; k <= maxY; k++) {\r\n                    var idx = getArrayIndex(cols, i, k);\r\n                    blocks[idx] = \"blocker\";\r\n                }\r\n            }\r\n            var entry = { image: \"spawner\", x: posX, y: posY, size: sz, scale: 0.75 };\r\n            //console.log(\"Placing \"+entry.image+\" @ \"+entry.x+\", \"+entry.y);\r\n            list.push(entry);\r\n            for (var n2 = 0; n2 < 3; n2++) {\r\n                //posX = getRandomBetween(entry.x-sz, entry.x+sz);\r\n                //posY = getRandomBetween(entry.y-sz, entry.y+sz);\r\n                var ang = getRandomBetween(0, 360) * Math.PI / 180;\r\n                var dr = getRandomDecimalBetween(sz / 3, sz);\r\n                posX = entry.x + sz / 2 + Math.cos(ang) * dr;\r\n                posY = entry.y + sz / 2 + Math.sin(ang) * dr;\r\n                var minX = Math.floor(posX / w);\r\n                var minY = Math.floor(posY / h);\r\n                var maxX = Math.ceil((posX + sz / 2) / w);\r\n                var maxY = Math.ceil((posY + sz / 2) / h);\r\n                var canPlace = true;\r\n                for (var i = minX; i <= maxX && canPlace; i++) {\r\n                    for (var k = minY; k <= maxY && canPlace; k++) {\r\n                        var idx = getArrayIndex(cols, i, k);\r\n                        if (blocks[idx] != \"air\") {\r\n                            canPlace = false;\r\n                        }\r\n                    }\r\n                }\r\n                if (canPlace) {\r\n                    for (var i = minX; i <= maxX; i++) {\r\n                        for (var k = minY; k <= maxY; k++) {\r\n                            var idx = getArrayIndex(cols, i, k);\r\n                            blocks[idx] = \"blocker\";\r\n                        }\r\n                    }\r\n                    list.push({ image: \"worm\", x: posX, y: posY, size: 96, scale: 0.75 });\r\n                }\r\n            }\r\n            for (var n2 = 0; n2 < 9; n2++) {\r\n                //posX = getRandomBetween(entry.x-sz, entry.x+sz);\r\n                //posY = getRandomBetween(entry.y-sz, entry.y+sz);\r\n                var ang = getRandomBetween(0, 360) * Math.PI / 180;\r\n                var dr = getRandomDecimalBetween(sz / 3, sz);\r\n                posX = entry.x + sz / 2 + Math.cos(ang) * dr;\r\n                posY = entry.y + sz / 2 + Math.sin(ang) * dr;\r\n                var mob = \"biter\" + getRandomBetween(1, 4);\r\n                if (Math.random() < 0.1)\r\n                    mob = \"fly\";\r\n                list.push({ image: mob, x: posX, y: posY, size: 64, scale: 1 });\r\n            }\r\n        }\r\n    }\r\n    for (var n = 0; n < Math.floor(rows * cols / 12); n++) {\r\n        var sz = 128;\r\n        var posX = getRandomBetween(sz / 2, tw - sz / 2);\r\n        var posY = getRandomBetween(sz / 2, th - sz / 2);\r\n        var blockX = Math.floor((posX + sz / 2) / w);\r\n        var blockY = Math.floor((posY + sz / 2) / h);\r\n        var idx = getArrayIndex(cols, blockX, blockY);\r\n        var canPlace = blocks[idx] == \"air\";\r\n        if (canPlace) {\r\n            var idx2 = getArrayIndex(Math.floor(cols / 2), Math.floor(blockX / 2), Math.floor(blockY / 2));\r\n            //console.log(\"Placing \"+entry.image+\" @ \"+entry.x+\", \"+entry.y+\" on tile index \"+idx2+\" = \"+gr\tound[idx2]);\r\n            var sand = ground[idx2].startsWith(\"dirt\") || ground[idx2].startsWith(\"ice\");\r\n            if (sand && xmas)\r\n                continue;\r\n            var entry = { image: \"tree\" + getRandomBetween(sand ? 1 : 3, sand ? 2 : 5), x: posX, y: posY, size: sz, scale: 1 };\r\n            if (xmas) {\r\n                entry.image = \"snowtree\" + getRandomBetween(1, 3);\r\n                entry.scale *= 1.5;\r\n            }\r\n            list.push(entry);\r\n        }\r\n    }\r\n    return list;\r\n}\r\nfunction getRandomBuilding() {\r\n    if (true)\r\n        return \"dome\";\r\n    var types = [\"turret\", \"plasma\", \"well\", \"dome\"];\r\n    return types[getRandomBetween(0, types.length - 1)];\r\n}\r\nfunction genDirt(rows, cols, ground) {\r\n    var x = getRandomBetween(4, cols - 4);\r\n    var y = getRandomBetween(4, rows - 4);\r\n    //console.log(\"Genning dirt @ \"+x+\", \"+y);\r\n    var s = [2, 5];\r\n    //s[0] = 1;\r\n    //s[1] = 9;\r\n    var rx = getRandomDecimalBetween(s[0], s[1]);\r\n    var ry = getRandomDecimalBetween(s[0], s[1]);\r\n    var mx = Math.max(0, Math.floor(x - rx));\r\n    var my = Math.max(0, Math.floor(y - ry));\r\n    var px = Math.min(cols - 1, Math.floor(x + rx));\r\n    var py = Math.min(rows - 1, Math.floor(y + ry));\r\n    var ms = 0.75;\r\n    var slopeX = getRandomDecimalBetween(-ms, ms);\r\n    var slopeY = getRandomDecimalBetween(-ms, ms);\r\n    for (var i = mx; i <= px; i++) {\r\n        for (var k = my; k <= py; k++) {\r\n            var di = i - x;\r\n            var dk = k - y;\r\n            if (di * di + dk * dk <= rx * ry + 0.5) {\r\n                var dx = i + Math.floor(slopeX * dk);\r\n                var dy = k + Math.floor(slopeY * di);\r\n                var idx = getArrayIndex(cols, dx, dy);\r\n                ground[idx] = xmas ? (\"ice\" + getRandomBetween(0, 15)) : (\"dirt\" + getRandomBetween(0, 20));\r\n                //console.log(\"Placing dirt @ \"+dx+\", \"+dy+\" (idx = \"+idx);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction generateOre(rows, cols, ore) {\r\n    var ret = [];\r\n    for (var n = 0; n < rows * cols / 200; n++) {\r\n        var r = getRandomBetween(2, 9);\r\n        var x = getRandomBetween(r + 2, cols - r - 2);\r\n        var y = getRandomBetween(r + 2, rows - r - 2);\r\n        var mx = Math.max(0, Math.floor(x - r));\r\n        var my = Math.max(0, Math.floor(y - r));\r\n        var px = Math.min(cols - 1, Math.floor(x + r));\r\n        var py = Math.min(rows - 1, Math.floor(y + r));\r\n        var maxtype = 7;\r\n        var f = Math.random();\r\n        var type = \"coal\";\r\n        if (f < 0.1)\r\n            type = \"oil\";\r\n        else if (f < 0.4)\r\n            type = \"copper\";\r\n        else if (f < 0.7)\r\n            type = \"iron\";\r\n        if (Math.random() < 0.2)\r\n            type = \"geothermal_\";\r\n        if (type == \"oil\" || type == \"geothermal_\") {\r\n            maxtype = type == \"oil\" ? 3 : 5;\r\n            for (var m = 0; m < r * 2; m++) {\r\n                var dx = getRandomBetween(mx, px);\r\n                var dy = getRandomBetween(my, py);\r\n                var idx = getArrayIndex(cols, dx, dy);\r\n                if (ore[idx] == \"air\") {\r\n                    ore[idx] = type + getRandomBetween(0, maxtype);\r\n                    if (type == \"geothermal_\") {\r\n                        ret.push({ x: dx, y: dy });\r\n                        if (dx > 0)\r\n                            ore[getArrayIndex(cols, dx - 1, dy)] = \"blocker\";\r\n                        if (dx < cols)\r\n                            ore[getArrayIndex(cols, dx + 1, dy)] = \"blocker\";\r\n                        if (dy > 0)\r\n                            ore[getArrayIndex(cols, dx, dy - 1)] = \"blocker\";\r\n                        if (dy < rows)\r\n                            ore[getArrayIndex(cols, dx, dy + 1)] = \"blocker\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (var i = mx; i <= px; i++) {\r\n                for (var k = my; k <= py; k++) {\r\n                    var di = i - x;\r\n                    var dk = k - y;\r\n                    if (di * di + dk * dk <= r * r + 0.5) {\r\n                        var idx = getArrayIndex(cols, i, k);\r\n                        if (ore[idx] == \"air\")\r\n                            ore[idx] = type + getRandomBetween(0, maxtype);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nexport default function setPageBackground() {\r\n    if (isPhone)\r\n        return;\r\n    let tail = '</svg>';\r\n    let w = 32 * SCALE;\r\n    let h = 32 * SCALE;\r\n    let x = 0;\r\n    let y = 0;\r\n    //var height = findHighestNode(0, document.documentElement.childNodes);\r\n    let body = document.body;\r\n    let html = document.documentElement;\r\n    var rh = Math.max(body.offsetHeight, html.clientHeight, html.offsetHeight, window.innerHeight, document.body.clientHeight);\r\n    var rw = Math.max(window.innerWidth, document.body.clientWidth);\r\n    //console.log(rw+\" x \"+rh);\r\n    let rows = Math.ceil(rh / h);\r\n    let cols = Math.ceil(rw / w);\r\n    let tw = cols * w;\r\n    let th = rows * h;\r\n    console.log(\"Generating Factorio tileset with \" + cols + \" columns and \" + rows + \" rows\");\r\n    var ground = new Array(Math.ceil(cols * rows / 4));\r\n    var ore = new Array(cols * rows);\r\n    var blocks = new Array(cols * rows);\r\n    for (var i = 0; i < cols; i++) {\r\n        for (var k = 0; k < rows; k++) {\r\n            let idx = getArrayIndex(cols, i, k);\r\n            let img = \"air\";\r\n            blocks[idx] = img;\r\n            ore[idx] = img;\r\n            if (i < cols / 2 && k < rows / 2) {\r\n                let max = xmas ? 15 : (Math.random() < 0.125 ? 15 : 3);\r\n                ground[getArrayIndex(cols / 2, i, k)] = (xmas ? \"snow\" : \"grass\") + getRandomBetween(0, max);\r\n            }\r\n        }\r\n    }\r\n    for (var i = 0; i < Math.floor(rows / 6); i++)\r\n        genDirt(rows / 2, cols / 2, ground);\r\n    var geo = generateOre(rows, cols, ore);\r\n    let deco = generateDecorations(rows, cols, ground, blocks, tw, th, w, h);\r\n    for (var i = 0; i < Math.floor(rows / 1.5); i++)\r\n        genBelt(rows, cols, blocks);\r\n    let tag = \"background-content\";\r\n    let container = document.getElementById(tag);\r\n    if (container == null) {\r\n        container = document.createElement(\"div\");\r\n        container.id = tag;\r\n        console.log(\"Injecting background element.\");\r\n        document.body.prepend(container);\r\n    }\r\n    while (container.firstChild) {\r\n        container.removeChild(container.firstChild);\r\n    }\r\n    //console.log(elem);\r\n    let tiles = document.createElement(\"div\");\r\n    let ores = document.createElement(\"div\");\r\n    let entities = document.createElement(\"div\");\r\n    let decoration = document.createElement(\"div\");\r\n    let glows = document.createElement(\"div\");\r\n    let dark = document.createElement(\"div\");\r\n    container.appendChild(tiles);\r\n    container.appendChild(ores);\r\n    container.appendChild(entities);\r\n    container.appendChild(decoration);\r\n    if (isDarkModeEnabled()) {\r\n        container.appendChild(dark);\r\n    }\r\n    container.appendChild(glows);\r\n    tiles.style.width = rw.toString() + \"px\";\r\n    tiles.style.height = rh.toString() + \"px\";\r\n    //tiles.style.position = \"static\";\r\n    ores.style.width = rw.toString() + \"px\";\r\n    ores.style.height = rh.toString() + \"px\";\r\n    ores.style.position = \"absolute\";\r\n    entities.style.width = rw.toString() + \"px\";\r\n    entities.style.height = rh.toString() + \"px\";\r\n    decoration.style.width = rw.toString() + \"px\";\r\n    decoration.style.height = rh.toString() + \"px\";\r\n    decoration.style.position = \"absolute\";\r\n    glows.style.width = rw.toString() + \"px\";\r\n    glows.style.height = rh.toString() + \"px\";\r\n    glows.style.position = \"absolute\";\r\n    glows.style.setProperty(\"mix-blend-mode\", \"screen\");\r\n    tiles.className = \"tile-layer\";\r\n    //\tores.className = \"tile-layer\";\r\n    entities.className = \"tile-layer\";\r\n    buildImage(tiles, rows / 2, cols / 2, ground, 2);\r\n    buildLooseImage(ores, rows, cols, ore, 32, 0.75, 4, 4);\r\n    buildImage(entities, rows, cols, blocks, 1);\r\n    container.style.width = rw.toString() + \"px\";\r\n    container.style.height = rh.toString() + \"px\";\r\n    try {\r\n        for (let [type, rgb] of Object.entries(treeColors)) {\r\n            let selector = \".tile-factorio-glowcolor_\" + type + \"::after\";\r\n            let sz = 512;\r\n            let offset = 0; //-sz/2+32;\r\n            document.styleSheets[0].addRule(selector, \"width: \" + sz + \"px;\");\r\n            document.styleSheets[0].addRule(selector, \"height: \" + sz + \"px;\");\r\n            document.styleSheets[0].addRule(selector, \"top: \" + offset + \"px;\");\r\n            document.styleSheets[0].addRule(selector, \"left: \" + offset + \"px;\");\r\n            document.styleSheets[0].addRule(selector, \"background: radial-gradient(rgba(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",255) 0%, rgba(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \",0) 70%);\");\r\n            document.styleSheets[0].addRule(selector, \"mix-blend-mode: screen;\");\r\n        }\r\n    }\r\n    catch (e) {\r\n        console.log(\"Could not access ruleset: \" + e);\r\n    }\r\n    let domes = [];\r\n    let biters = [];\r\n    for (var i = 0; i < deco.length; i++) {\r\n        var dx = deco[i].x - w / 2;\r\n        var dy = deco[i].y - h / 2;\r\n        var ds = deco[i].size * SCALE;\r\n        if (deco[i].image == \"dome\") {\r\n            domes.push({ image: \"domeglow\", x: dx - SCALE * 192, y: dy - SCALE * 160, size: ds * 4 });\r\n            deco[i].scale = 1;\r\n        }\r\n        else if (deco[i].image == \"fly\" || deco[i].image.startsWith(\"biter\")) {\r\n            biters.push({ x: deco[i].x - deco[i].size / 2, y: deco[i].y - deco[i].size / 2, size: deco[i].size });\r\n        }\r\n        addPositionedImage(decoration, deco[i].image, ds, ds, dx, dy, deco[i].scale);\r\n    }\r\n    for (var i = 0; i < domes.length; i++) {\r\n        addPositionedImage(glows, domes[i].image, domes[i].size, domes[i].size, domes[i].x, domes[i].y);\r\n    }\r\n    let bushes = [];\r\n    for (var n = 0; n < Math.floor(rows / 2); n++) {\r\n        let idx = getRandomBetween(0, 10);\r\n        var bush = \"biolumbush\" + idx;\r\n        let color = bushColors[idx];\r\n        var dx = getRandomBetween(64, rw - 64);\r\n        var dy = getRandomBetween(64, rh - 64);\r\n        addPositionedImage(decoration, bush, 64, 64, dx, dy, 0.75);\r\n        bushes.push({ color: color, x: dx, y: dy });\r\n    }\r\n    if (isDarkModeEnabled()) {\r\n        dark.style.width = rw.toString() + \"px\";\r\n        dark.style.height = rh.toString() + \"px\";\r\n        dark.style.position = \"absolute\";\r\n        dark.style.backgroundColor = \"#395060\";\r\n        dark.style.setProperty(\"mix-blend-mode\", \"multiply\");\r\n        for (var i = 0; i < geo.length; i++) {\r\n            addPositionedImage(dark, \"light\", 256, 256, geo[i].x * 32 - 48, geo[i].y * 32 - 45, 0.33);\r\n        }\r\n        for (var i = 0; i < biters.length; i++) {\r\n            addPositionedImage(dark, \"light\", 256, 256, biters[i].x - 16, biters[i].y - 16, 0.25);\r\n        }\r\n        console.log(bushes);\r\n        for (var n = 0; n < bushes.length; n++) {\r\n            let bush = bushes[n];\r\n            for (var i = 0; i < 2; i++) {\r\n                let glow = addPositionedImage(dark, \"glowcolor_\" + bush.color, 512, 512, bush.x - 22, bush.y - 22, 0.175);\r\n                glow.style.width = \"512px\";\r\n                glow.style.height = \"512px\";\r\n            }\r\n        }\r\n        for (var n = 0; n < Math.floor(rows / 3); n++) {\r\n            var plant = \"biolumtree\" + getRandomBetween(0, 1);\r\n            let color = getRandomMapKey(treeColors);\r\n            var dx = getRandomBetween(64, rw - 64);\r\n            var dy = getRandomBetween(64, rh - 64);\r\n            addPositionedImage(decoration, plant, 64, 64, dx, dy, 1);\r\n            for (var k = -1; k <= 1; k++) {\r\n                for (var i = 0; i < 2; i++) {\r\n                    let glow = addPositionedImage(dark, \"glowcolor_\" + color, 512, 512, dx + 2, dy + 32 * k, 0.25);\r\n                    glow.style.width = \"512px\";\r\n                    glow.style.height = \"512px\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n    fitBCG(decoration, SCALE);\r\n}\r\nwindow.addEventListener('resize', debounce(setPageBackground, 100));\r\n"],"sourceRoot":""}
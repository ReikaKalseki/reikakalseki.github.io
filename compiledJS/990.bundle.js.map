{"version":3,"sources":["webpack://sitecore/./browser.ts","webpack://sitecore/./factorio/backgroundgen.ts","webpack://sitecore/./library.ts"],"names":["isPhone","document","addEventListener","imgs","getElementsByClassName","length","img","par","parentNode","tagName","put","createElement","innerHTML","src","replaceChild","className","url","replace","console","log","text","i","style","width","header","navbar","getElementById","insertBefore","nextSibling","toc","removeChild","collapseOnPhone","addImage","elem","ix","iy","iw","ih","startsWith","Math","max","svgimg","createElementNS","setAttributeNS","toString","appendChild","modifyImageLocational","blocks","rows","cols","x","y","idx","idxl","idxr","idxu","idxd","tryCorrectBeltJunctions","genBelt","x1","y1","dx","dy","dir","flag","turns","dprev","dirp","randd","random","ch","min","wall","canBeltMoveFrom","down","up","left","right","list","push","filter","item","floor","flag2","x2","y2","genDirt","ground","s","rx","ry","mx","my","px","py","ms","slopeX","slopeY","k","di","dk","setPageBackground","body","html","documentElement","height","scrollHeight","offsetHeight","clientHeight","titleImg","window","location","href","rh","innerHeight","rw","innerWidth","clientWidth","ceil","tw","th","Array","ore","n","r","maxtype","f","type","m","generateOre","deco","w","h","sz","posX","posY","minX","minY","maxX","maxY","canPlace","entry","image","size","rootX","rootY","n2","building","ang","PI","dr","cos","sin","mob","blockX","blockY","idx2","sand","generateDecorations","gnd","buildImage","domes","ds","SCALE","tag","container","id","prepend","firstChild","root","date","Date","time","getSeconds","month","getMonth","day","getDate","xmas","hallow","viskey","visval","xkey","ykey","hkey","wkey","tileWidth","tileHeight","tileWidthNum","tileHeightNum","imagePaths","getRandomBetween","getRandomDecimalBetween","getOrCreateImgPath","folder","folderName","ret","indexOf","levels","substring","split","getImageRoot","getTileWidth","getTileHeight","getArrayIndex"],"mappings":"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","file":"990.bundle.js","sourcesContent":["export const isPhone = checkMobile();\r\nfunction checkMobile() {\r\n    return false;\r\n}\r\nfunction collapseOnPhone() {\r\n    if (isPhone) {\r\n        var imgs = document.getElementsByClassName(\"deembed-media\");\r\n        while (imgs.length > 0) {\r\n            let img = imgs[0];\r\n            let par = img.parentNode;\r\n            //console.log(img.src+\" @ \"+par.tagName);\r\n            if (par.tagName == \"VIDEO\") {\r\n                let put = document.createElement(\"div\");\r\n                put.innerHTML = '<a href = \"' + img.src + '\">' + img.src + \"</a>\";\r\n                par.parentNode.replaceChild(put, par);\r\n            }\r\n            else {\r\n                //par.replaceChild(put, img);\r\n                if (par.className == \"video\") {\r\n                    var url = img.src.replace(\"embed/\", \"watch?v=\");\r\n                    par.innerHTML = '<a href = \"' + url + '\">' + url + \"</a>\";\r\n                }\r\n                else if (par.className != \"header-image\")\r\n                    par.innerHTML = img.src + \"<br>\";\r\n                else\r\n                    par.innerHTML = \"\";\r\n            }\r\n            console.log(\"Hiding media '\" + img.src + \"'\");\r\n        }\r\n        var text = document.getElementsByClassName(\"textarea\");\r\n        for (var i = 0; i < text.length; i++) {\r\n            text[i].style.width = \"33%\";\r\n        }\r\n        let header = document.createElement(\"div\");\r\n        header.innerHTML = \"<div style = 'text-align: center; width: 33%; margin: auto; border: 3px solid red;'><h2 style = 'color: red; margin: 12px;'>This site is not designed for use on phones and other handheld devices, nor is any of its content relevant on such platforms. You may continue to browse it this way if you wish, but it is recommended that you visit the site with a proper computer.</h2></div>\";\r\n        let navbar = document.getElementById(\"navbar\");\r\n        navbar.parentNode.insertBefore(header, navbar.nextSibling);\r\n        let toc = document.getElementById(\"toc_container\");\r\n        toc.parentNode.removeChild(toc);\r\n    }\r\n}\r\nfunction interceptDOM() {\r\n    collapseOnPhone();\r\n}\r\ndocument.addEventListener(\"DOMContentLoaded\", interceptDOM);\r\n","//import * as browser from '../browser.js'\r\n//import * as library from '../library.js'\r\nimport { xmas, viskey, visval, xkey, ykey, hkey, wkey, getRandomBetween, getRandomDecimalBetween, getOrCreateImgPath, getTileWidth, getTileHeight, getArrayIndex } from '../library';\r\nimport { isPhone } from '../browser';\r\nconst SCALE = 1;\r\nfunction addImage(elem, img, ix, iy, iw, ih) {\r\n    //var pre = '<image x=\"'+ix+'\" y=\"'+iy+'\" width=\"'+iw+'\" height=\"'+ih+'\" xlink:href=\"'+getImageRoot();\r\n    //var post = '.png\" />';\r\n    //return pre+img+post;\r\n    if (img.startsWith(\"snowtree\")) {\r\n        iw = iw * 1.5;\r\n        ih = ih * 1.5;\r\n    }\r\n    if (img.startsWith(\"geothermal\")) {\r\n        iw = iw * 2;\r\n        ih = ih * 2;\r\n        ix = Math.max(0, ix - 1);\r\n        iy = Math.max(0, iy - 1);\r\n        //console.log(\"Geo @ \"+ix+\", \"+iy);\r\n    }\r\n    let svgimg = document.createElementNS('http://www.w3.org/2000/svg', 'image');\r\n    svgimg.setAttributeNS(null, wkey, getTileWidth(iw));\r\n    svgimg.setAttributeNS(null, hkey, getTileHeight(ih));\r\n    svgimg.setAttributeNS('http://www.w3.org/1999/xlink', 'href', getOrCreateImgPath(img, \"factiles\"));\r\n    svgimg.setAttributeNS(null, xkey, ix.toString());\r\n    svgimg.setAttributeNS(null, ykey, iy.toString());\r\n    svgimg.setAttributeNS(null, viskey, visval);\r\n    if (img == \"domeglow\")\r\n        svgimg.setAttributeNS(null, \"style\", \"mix-blend-mode: screen;\");\r\n    elem.appendChild(svgimg);\r\n}\r\nfunction buildImage(elem, rows, cols, ground, ore, blocks) {\r\n    var w = 32 * SCALE;\r\n    var h = 32 * SCALE;\r\n    var x = 0;\r\n    var y = 0;\r\n    for (var k = 0; k < rows; k++) {\r\n        x = 0;\r\n        for (var i = 0; i < cols; i++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            if (k < rows / 2 && i < cols / 2) {\r\n                var gnd = ground[getArrayIndex(cols / 2, i, k)];\r\n                gnd = modifyImageLocational(ground, rows / 2, cols / 2, i, k, idx, gnd);\r\n                addImage(elem, gnd, x * 2, y * 2, w * 2, h * 2);\r\n            }\r\n            var img = ore[idx];\r\n            //console.log(\"Got \"+img+\" @ \"+i+\", \"+k);\r\n            img = modifyImageLocational(ore, rows, cols, i, k, idx, img);\r\n            if (img != \"air\")\r\n                addImage(elem, img, x, y, w, h);\r\n            img = blocks[idx];\r\n            //console.log(\"Got \"+img+\" @ \"+i+\", \"+k);\r\n            img = modifyImageLocational(blocks, rows, cols, i, k, idx, img);\r\n            if (img != \"air\") {\r\n                addImage(elem, img, x, y, w, h);\r\n            }\r\n            x += w;\r\n        }\r\n        y += h;\r\n    }\r\n}\r\nfunction isTransparent(img) {\r\n    switch (img) {\r\n        case \"air\":\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction tryCorrectBeltJunctions(blocks, rows, cols, x, y, idx, img) {\r\n    var idxl = getArrayIndex(cols, x - 1, y);\r\n    var idxr = getArrayIndex(cols, x + 1, y);\r\n    var idxu = getArrayIndex(cols, x, y - 1);\r\n    var idxd = getArrayIndex(cols, x, y + 1);\r\n    if (blocks[idxl] == blocks[idxr] && (blocks[idxl] == \"belt-left\" || blocks[idxl] == \"belt-right\")) {\r\n        return blocks[idxl];\r\n    }\r\n    if ((blocks[idxl] == \"belt-dr\" || blocks[idxl] == \"belt-ur\") && blocks[idxr] == \"belt-right\") {\r\n        return \"belt-right\";\r\n    }\r\n    if ((blocks[idxr] == \"belt-dl\" || blocks[idxr] == \"belt-ul\") && blocks[idxl] == \"belt-left\") {\r\n        return \"belt-left\";\r\n    }\r\n    if ((blocks[idxl] == \"belt-dr\" || blocks[idxl] == \"belt-ur\" || blocks[idxl] == \"belt-right\") && (blocks[idxr] == \"belt-left\" || blocks[idxr] == \"belt-dl\" || blocks[idxr] == \"belt-ul\")) {\r\n        //console.log(\"Belt @ \"+x+\", \"+y+\" has left with right exit and vice versa.\");\r\n        return img == \"belt-down\" || img == \"belt-ld\" || img == \"belt-rd\" ? \"belt-down\" : \"belt-up\";\r\n    }\r\n    if (blocks[idxu] == blocks[idxd] && (blocks[idxd] == \"belt-up\" || blocks[idxd] == \"belt-down\")) {\r\n        return blocks[idxd];\r\n    }\r\n    if ((blocks[idxd] == \"belt-lu\" || blocks[idxd] == \"belt-ru\") && blocks[idxu] == \"belt-up\") {\r\n        return \"belt-up\";\r\n    }\r\n    if ((blocks[idxu] == \"belt-ld\" || blocks[idxu] == \"belt-rd\") && blocks[idxd] == \"belt-down\") {\r\n        return \"belt-down\";\r\n    }\r\n    if ((blocks[idxu] == \"belt-down\" || blocks[idxu] == \"belt-rd\" || blocks[idxu] == \"belt-ld\") && (blocks[idxd] == \"belt-up\" || blocks[idxd] == \"belt-ru\" || blocks[idxd] == \"belt-lu\")) {\r\n        //console.log(\"Belt @ \"+x+\", \"+y+\" has up with down exit and vice versa.\");\r\n        return img == \"belt-right\" || img == \"belt-dr\" || img == \"belt-ur\" ? \"belt-right\" : \"belt-left\";\r\n    }\r\n    return img;\r\n}\r\nfunction modifyImageLocational(blocks, rows, cols, x, y, idx, img) {\r\n    if (img.startsWith(\"belt\") && img.length == 7) { //corner\r\n        img = tryCorrectBeltJunctions(blocks, rows, cols, x, y, idx, img);\r\n    }\r\n    else if (img == \"blocker\") {\r\n        return \"air\";\r\n    }\r\n    return img;\r\n}\r\n/*\r\nfunction getGroundAt(rows, cols, x, y) {\r\n    return \"grass\"+getRandomBetween(0, 15);\r\n}*/\r\nfunction genBelt(rows, cols, blocks) {\r\n    var side1 = getRandomBetween(0, 3); /*\r\n    //var side2 = getRandomBetween(0, 3);\r\n    var y1 = side1 == 0 || side1 == 2 ? (Math.random() < 0.5 ? 0 : rows) : getRandomBetween(0, rows);\r\n    var x1 = side1 == 1 || side1 == 3 ? (Math.random() < 0.5 ? 0 : cols) : getRandomBetween(0, cols);\r\n    //var y2 = side2 == 0 || side2 == 2 ? 0 : getRandomBetween(0, rows);\r\n    //var x2 = side2 == 1 || side2 == 3 ? 0 : getRandomBetween(0, cols);\r\n    var dx = side1 == 1 || side1 == 3 ? 0 : (side1 == );*/\r\n    var x1 = 0;\r\n    var y1 = 0;\r\n    var dx = 0;\r\n    var dy = 0;\r\n    var dir = \"\";\r\n    switch (side1) {\r\n        case 0:\r\n            x1 = getRandomBetween(0, cols - 1);\r\n            y1 = rows - 1;\r\n            dy = -1;\r\n            dir = \"up\";\r\n            break;\r\n        case 1:\r\n            x1 = 0;\r\n            y1 = getRandomBetween(0, rows - 1);\r\n            dx = 1;\r\n            dir = \"right\";\r\n            break;\r\n        case 2:\r\n            x1 = getRandomBetween(0, cols - 1);\r\n            y1 = 0;\r\n            dy = 1;\r\n            dir = \"down\";\r\n            break;\r\n        case 3:\r\n            x1 = cols - 1;\r\n            y1 = getRandomBetween(0, rows - 1);\r\n            dx = -1;\r\n            dir = \"left\";\r\n            break;\r\n    }\r\n    var flag = true;\r\n    var x = x1;\r\n    var y = y1;\r\n    var turns = 0;\r\n    while (flag) {\r\n        var dprev = dir;\r\n        var dirp = dir;\r\n        var idx = getArrayIndex(cols, x, y);\r\n        if (blocks[idx] != \"air\")\r\n            break;\r\n        var randd = Math.random();\r\n        var ch = Math.min(0.35, turns * 0.066);\r\n        var wall = !canBeltMoveFrom(blocks, cols, rows, x, y, dx, dy);\r\n        if (randd < ch || wall) {\r\n            turns = 0;\r\n            var v1 = randd < (wall ? 0.5 : 0.15);\r\n            var down = dy != -1 && canBeltMoveFrom(blocks, cols, rows, x, y, 0, 1);\r\n            var up = dy != 1 && canBeltMoveFrom(blocks, cols, rows, x, y, 0, -1);\r\n            var left = dx != 1 && canBeltMoveFrom(blocks, cols, rows, x, y, -1, 0);\r\n            var right = dx != -1 && canBeltMoveFrom(blocks, cols, rows, x, y, 1, 0);\r\n            var list = [];\r\n            if (down)\r\n                list.push(\"down\");\r\n            if (up)\r\n                list.push(\"up\");\r\n            if (left)\r\n                list.push(\"left\");\r\n            if (right)\r\n                list.push(\"right\");\r\n            if (list.length > 1)\r\n                list = list.filter(item => item != dprev);\r\n            if (list.length > 0) {\r\n                var newdir = list[Math.floor(Math.random() * list.length)];\r\n                switch (newdir) {\r\n                    case \"left\":\r\n                        dx = -1;\r\n                        dir = \"left\";\r\n                        dirp = dy == 1 ? \"dl\" : \"ul\";\r\n                        dy = 0;\r\n                        break;\r\n                    case \"right\":\r\n                        dx = 1;\r\n                        dir = \"right\";\r\n                        dirp = dy == 1 ? \"dr\" : \"ur\";\r\n                        dy = 0;\r\n                        break;\r\n                    case \"up\":\r\n                        dy = -1;\r\n                        dir = \"up\";\r\n                        dirp = dx == 1 ? \"ru\" : \"lu\";\r\n                        dx = 0;\r\n                        break;\r\n                    case \"down\":\r\n                        dy = 1;\r\n                        dir = \"down\";\r\n                        dirp = dx == 1 ? \"rd\" : \"ld\";\r\n                        dx = 0;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                dx = 0;\r\n                dy = 0;\r\n            }\r\n        }\r\n        else {\r\n            turns++;\r\n        }\r\n        var flag2 = dx == 0 && dy == 0;\r\n        if (flag2) {\r\n            //console.log(\"Belt from \"+dprev+\" @ \"+x+\", \"+y+\" had nowhere to go\");\r\n            //dirp = dir;\r\n        }\r\n        blocks[idx] = \"belt-\" + dirp;\r\n        x += dx;\r\n        y += dy;\r\n        flag = x >= 0 && x < cols && y >= 0 && y < rows && !flag2;\r\n    }\r\n}\r\nfunction canBeltMoveFrom(blocks, cols, rows, x, y, dx, dy) {\r\n    var x2 = x + dx;\r\n    var y2 = y + dy;\r\n    var idx = getArrayIndex(cols, x2, y2);\r\n    return x2 < 0 || x2 >= cols || y2 < 0 || y2 >= rows || blocks[idx] == \"air\" || (blocks[idx].startsWith(\"belt\") && Math.random() < 0.5);\r\n}\r\nfunction generateDecorations(rows, cols, ground, blocks, tw, th, w, h) {\r\n    var list = [];\r\n    for (var n = 0; n < Math.floor(rows / 4); n++) {\r\n        //var posX = getRandomBetween(6, cols-6);\r\n        //var posY = getRandomBetween(6, rows-6);\r\n        var type = \"rock\" + getRandomBetween(1, 4);\r\n        var sz = type == \"rock1\" ? 128 : 64;\r\n        var posX = getRandomBetween(sz / 2, tw - sz / 2);\r\n        var posY = getRandomBetween(sz / 2, th - sz / 2);\r\n        var minX = Math.floor(posX / w);\r\n        var minY = Math.floor(posY / h);\r\n        var maxX = Math.ceil((posX + sz / 2) / w);\r\n        var maxY = Math.ceil((posY + sz / 2) / h);\r\n        var canPlace = true;\r\n        for (var i = minX; i <= maxX && canPlace; i++) {\r\n            for (var k = minY; k <= maxY && canPlace; k++) {\r\n                var idx = getArrayIndex(cols, i, k);\r\n                if (blocks[idx] != \"air\") {\r\n                    canPlace = false;\r\n                }\r\n            }\r\n        }\r\n        if (canPlace) {\r\n            for (var i = minX; i <= maxX; i++) {\r\n                for (var k = minY; k <= maxY; k++) {\r\n                    var idx = getArrayIndex(cols, i, k);\r\n                    blocks[idx] = \"blocker\";\r\n                }\r\n            }\r\n            var entry = { image: type, x: posX, y: posY, size: sz };\r\n            //console.log(\"Placing \"+entry.image+\" @ \"+entry.x+\", \"+entry.y);\r\n            list.push(entry);\r\n        }\r\n    }\r\n    for (var n = 0; n < Math.max(5, Math.floor(rows / 15)); n++) {\r\n        var rootX = getRandomBetween(256, tw - 256);\r\n        var rootY = getRandomBetween(256, th - 256);\r\n        for (var n2 = 0; n2 < 3; n2++) {\r\n            var building = getRandomBuilding();\r\n            var sz = (building == \"turret\" || building == \"plasma\") ? 64 : 128;\r\n            var posX = getRandomBetween(rootX - sz, rootX + sz);\r\n            var posY = getRandomBetween(rootY - sz, rootY + sz);\r\n            var minX = Math.floor(posX / w);\r\n            var minY = Math.floor(posY / h);\r\n            var maxX = Math.ceil((posX + sz / 2) / w);\r\n            var maxY = Math.ceil((posY + sz / 2) / h);\r\n            var canPlace = true;\r\n            for (var i = minX; i <= maxX && canPlace; i++) {\r\n                for (var k = minY; k <= maxY && canPlace; k++) {\r\n                    var idx = getArrayIndex(cols, i, k);\r\n                    if (blocks[idx] != \"air\") {\r\n                        canPlace = false;\r\n                    }\r\n                }\r\n            }\r\n            if (canPlace) {\r\n                for (var i = minX; i <= maxX; i++) {\r\n                    for (var k = minY; k <= maxY; k++) {\r\n                        var idx = getArrayIndex(cols, i, k);\r\n                        blocks[idx] = \"blocker\";\r\n                    }\r\n                }\r\n                var entry = { image: building, x: posX, y: posY, size: sz };\r\n                //console.log(\"Placing \"+entry.image+\" @ \"+entry.x+\", \"+entry.y);\r\n                list.push(entry);\r\n            }\r\n        }\r\n    }\r\n    for (var n = 0; n < Math.floor(rows / 16); n++) {\r\n        var sz = 192;\r\n        var posX = getRandomBetween(sz / 2, tw - sz / 2);\r\n        var posY = getRandomBetween(sz / 2, th - sz / 2);\r\n        var minX = Math.floor(posX / w);\r\n        var minY = Math.floor(posY / h);\r\n        var maxX = Math.ceil((posX + sz / 2) / w);\r\n        var maxY = Math.ceil((posY + sz / 2) / h);\r\n        var canPlace = true;\r\n        for (var i = minX; i <= maxX && canPlace; i++) {\r\n            for (var k = minY; k <= maxY && canPlace; k++) {\r\n                var idx = getArrayIndex(cols, i, k);\r\n                if (blocks[idx] != \"air\") {\r\n                    canPlace = false;\r\n                }\r\n            }\r\n        }\r\n        if (canPlace) {\r\n            for (var i = minX; i <= maxX; i++) {\r\n                for (var k = minY; k <= maxY; k++) {\r\n                    var idx = getArrayIndex(cols, i, k);\r\n                    blocks[idx] = \"blocker\";\r\n                }\r\n            }\r\n            var entry = { image: \"spawner\", x: posX, y: posY, size: sz };\r\n            //console.log(\"Placing \"+entry.image+\" @ \"+entry.x+\", \"+entry.y);\r\n            list.push(entry);\r\n            for (var n2 = 0; n2 < 3; n2++) {\r\n                //posX = getRandomBetween(entry.x-sz, entry.x+sz);\r\n                //posY = getRandomBetween(entry.y-sz, entry.y+sz);\r\n                var ang = getRandomBetween(0, 360) * Math.PI / 180;\r\n                var dr = getRandomDecimalBetween(sz / 3, sz);\r\n                posX = entry.x + sz / 2 + Math.cos(ang) * dr;\r\n                posY = entry.y + sz / 2 + Math.sin(ang) * dr;\r\n                list.push({ image: \"worm\", x: posX, y: posY, size: 96 });\r\n            }\r\n            for (var n2 = 0; n2 < 9; n2++) {\r\n                //posX = getRandomBetween(entry.x-sz, entry.x+sz);\r\n                //posY = getRandomBetween(entry.y-sz, entry.y+sz);\r\n                var ang = getRandomBetween(0, 360) * Math.PI / 180;\r\n                var dr = getRandomDecimalBetween(sz / 3, sz);\r\n                posX = entry.x + sz / 2 + Math.cos(ang) * dr;\r\n                posY = entry.y + sz / 2 + Math.sin(ang) * dr;\r\n                var mob = \"biter\" + getRandomBetween(1, 4);\r\n                if (Math.random() < 0.1)\r\n                    mob = \"fly\";\r\n                list.push({ image: mob, x: posX, y: posY, size: 64 });\r\n            }\r\n        }\r\n    }\r\n    for (var n = 0; n < Math.floor(rows * cols / 12); n++) {\r\n        var sz = 128;\r\n        var posX = getRandomBetween(sz / 2, tw - sz / 2);\r\n        var posY = getRandomBetween(sz / 2, th - sz / 2);\r\n        var blockX = Math.floor((posX + sz / 2) / w);\r\n        var blockY = Math.floor((posY + sz / 2) / h);\r\n        var idx = getArrayIndex(cols, blockX, blockY);\r\n        var canPlace = blocks[idx] == \"air\";\r\n        if (canPlace) {\r\n            var idx2 = getArrayIndex(Math.floor(cols / 2), Math.floor(blockX / 2), Math.floor(blockY / 2));\r\n            //console.log(\"Placing \"+entry.image+\" @ \"+entry.x+\", \"+entry.y+\" on tile index \"+idx2+\" = \"+gr\tound[idx2]);\r\n            var sand = ground[idx2].startsWith(\"dirt\") || ground[idx2].startsWith(\"ice\");\r\n            if (sand && xmas)\r\n                continue;\r\n            var entry = { image: \"tree\" + getRandomBetween(sand ? 1 : 3, sand ? 2 : 5), x: posX, y: posY, size: sz };\r\n            if (xmas)\r\n                entry.image = \"snowtree\" + getRandomBetween(1, 3);\r\n            list.push(entry);\r\n        }\r\n    }\r\n    return list;\r\n}\r\nfunction getRandomBuilding() {\r\n    if (true)\r\n        return \"dome\";\r\n    var types = [\"turret\", \"plasma\", \"well\", \"dome\"];\r\n    return types[getRandomBetween(0, types.length - 1)];\r\n}\r\nfunction genDirt(rows, cols, ground) {\r\n    var x = getRandomBetween(4, cols - 4);\r\n    var y = getRandomBetween(4, rows - 4);\r\n    //console.log(\"Genning dirt @ \"+x+\", \"+y);\r\n    var s = [2, 5];\r\n    //s[0] = 1;\r\n    //s[1] = 9;\r\n    var rx = getRandomDecimalBetween(s[0], s[1]);\r\n    var ry = getRandomDecimalBetween(s[0], s[1]);\r\n    var mx = Math.max(0, Math.floor(x - rx));\r\n    var my = Math.max(0, Math.floor(y - ry));\r\n    var px = Math.min(cols - 1, Math.floor(x + rx));\r\n    var py = Math.min(rows - 1, Math.floor(y + ry));\r\n    var ms = 0.75;\r\n    var slopeX = getRandomDecimalBetween(-ms, ms);\r\n    var slopeY = getRandomDecimalBetween(-ms, ms);\r\n    for (var i = mx; i <= px; i++) {\r\n        for (var k = my; k <= py; k++) {\r\n            var di = i - x;\r\n            var dk = k - y;\r\n            if (di * di + dk * dk <= rx * ry + 0.5) {\r\n                var dx = i + Math.floor(slopeX * dk);\r\n                var dy = k + Math.floor(slopeY * di);\r\n                var idx = getArrayIndex(cols, dx, dy);\r\n                ground[idx] = xmas ? (\"ice\" + getRandomBetween(0, 15)) : (\"dirt\" + getRandomBetween(0, 20));\r\n                //console.log(\"Placing dirt @ \"+dx+\", \"+dy+\" (idx = \"+idx);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction generateOre(rows, cols, ore) {\r\n    for (var n = 0; n < rows * cols / 200; n++) {\r\n        var r = getRandomBetween(2, 9);\r\n        var x = getRandomBetween(r + 2, cols - r - 2);\r\n        var y = getRandomBetween(r + 2, rows - r - 2);\r\n        var mx = Math.max(0, Math.floor(x - r));\r\n        var my = Math.max(0, Math.floor(y - r));\r\n        var px = Math.min(cols - 1, Math.floor(x + r));\r\n        var py = Math.min(rows - 1, Math.floor(y + r));\r\n        var maxtype = 7;\r\n        var f = Math.random();\r\n        var type = \"coal\";\r\n        if (f < 0.1)\r\n            type = \"oil\";\r\n        else if (f < 0.4)\r\n            type = \"copper\";\r\n        else if (f < 0.7)\r\n            type = \"iron\";\r\n        if (Math.random() < 0.2)\r\n            type = \"geothermal_\";\r\n        if (type == \"oil\" || type == \"geothermal_\") {\r\n            maxtype = type == \"oil\" ? 3 : 5;\r\n            for (var m = 0; m < r * 2; m++) {\r\n                var dx = getRandomBetween(mx, px);\r\n                var dy = getRandomBetween(my, py);\r\n                var idx = getArrayIndex(cols, dx, dy);\r\n                if (ore[idx] == \"air\") {\r\n                    ore[idx] = type + getRandomBetween(0, maxtype);\r\n                    if (type == \"geothermal_\") {\r\n                        if (dx > 0)\r\n                            ore[getArrayIndex(cols, dx - 1, dy)] = \"air\";\r\n                        if (dx < cols)\r\n                            ore[getArrayIndex(cols, dx + 1, dy)] = \"air\";\r\n                        if (dy > 0)\r\n                            ore[getArrayIndex(cols, dx, dy - 1)] = \"air\";\r\n                        if (dy < rows)\r\n                            ore[getArrayIndex(cols, dx, dy + 1)] = \"air\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (var i = mx; i <= px; i++) {\r\n                for (var k = my; k <= py; k++) {\r\n                    var di = i - x;\r\n                    var dk = k - y;\r\n                    if (di * di + dk * dk <= r * r + 0.5) {\r\n                        var idx = getArrayIndex(cols, i, k);\r\n                        if (ore[idx] == \"air\")\r\n                            ore[idx] = type + getRandomBetween(0, maxtype);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nexport default function setPageBackground() {\r\n    if (isPhone)\r\n        return;\r\n    let tail = '</svg>';\r\n    let w = 32 * SCALE;\r\n    let h = 32 * SCALE;\r\n    let x = 0;\r\n    let y = 0;\r\n    //var height = findHighestNode(0, document.documentElement.childNodes);\r\n    let body = document.body;\r\n    let html = document.documentElement;\r\n    let height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight) - 64;\r\n    let titleImg = document.getElementsByClassName(\"title-image\")[0];\r\n    if (titleImg == null || titleImg.src == null || titleImg.src == \"\" || titleImg.src == window.location.href) {\r\n        height += 72;\r\n    }\r\n    else {\r\n        height += 48;\r\n    }\r\n    //console.log(\"Total height is \"+height+\", document content is: \"+document.documentElement.innerHTML);\r\n    var rh = Math.max(height, window.innerHeight, document.body.clientHeight);\r\n    var rw = Math.max(window.innerWidth, document.body.clientWidth);\r\n    //console.log(rw+\" x \"+rh);\r\n    let rows = Math.ceil(rh / h);\r\n    let cols = Math.ceil(rw / w);\r\n    let tw = cols * w;\r\n    let th = rows * h;\r\n    console.log(\"Generating Factorio tileset with \" + cols + \" columns and \" + rows + \" rows\");\r\n    let xmlns = \"http://www.w3.org/2000/svg\";\r\n    let elem = document.createElementNS(xmlns, \"svg\");\r\n    elem.setAttributeNS(null, \"width\", tw.toString());\r\n    elem.setAttributeNS(null, \"height\", th.toString());\r\n    var ground = new Array(Math.ceil(cols * rows / 4));\r\n    var ore = new Array(cols * rows);\r\n    var blocks = new Array(cols * rows);\r\n    for (var i = 0; i < cols; i++) {\r\n        for (var k = 0; k < rows; k++) {\r\n            let idx = getArrayIndex(cols, i, k);\r\n            let img = \"air\";\r\n            blocks[idx] = img;\r\n            ore[idx] = img;\r\n            if (i < cols / 2 && k < rows / 2) {\r\n                let max = xmas ? 15 : (Math.random() < 0.125 ? 15 : 3);\r\n                ground[getArrayIndex(cols / 2, i, k)] = (xmas ? \"snow\" : \"grass\") + getRandomBetween(0, max);\r\n            }\r\n        }\r\n    }\r\n    for (var i = 0; i < Math.floor(rows / 6); i++)\r\n        genDirt(rows / 2, cols / 2, ground);\r\n    generateOre(rows, cols, ore);\r\n    let deco = generateDecorations(rows, cols, ground, blocks, tw, th, w, h);\r\n    for (var i = 0; i < Math.floor(rows / 1.5); i++)\r\n        genBelt(rows, cols, blocks);\r\n    buildImage(elem, rows, cols, ground, ore, blocks);\r\n    let domes = [];\r\n    for (var i = 0; i < deco.length; i++) {\r\n        var dx = deco[i].x - w / 2;\r\n        var dy = deco[i].y - h / 2;\r\n        var ds = deco[i].size * SCALE;\r\n        addImage(elem, deco[i].image, dx, dy, ds, ds);\r\n        if (deco[i].image == \"dome\") {\r\n            domes.push({ image: \"domeglow\", x: dx - SCALE * 192, y: dy - SCALE * 160, size: ds * 4 });\r\n        }\r\n    }\r\n    for (var i = 0; i < domes.length; i++) {\r\n        addImage(elem, domes[i].image, domes[i].x, domes[i].y, domes[i].size, domes[i].size);\r\n    }\r\n    let tag = \"background-content\";\r\n    let container = document.getElementById(tag);\r\n    if (container == null) {\r\n        container = document.createElement(\"div\");\r\n        container.id = tag;\r\n        console.log(\"Injecting background element.\");\r\n        document.body.prepend(container);\r\n    }\r\n    while (container.firstChild) {\r\n        container.removeChild(container.firstChild);\r\n    }\r\n    //console.log(elem);\r\n    container.appendChild(elem);\r\n}\r\n","let root = {};\r\nexport const date = new Date(); //new Date(\"December 16, 2016 11:13:00\");//\r\nexport const time = date.getSeconds();\r\nexport const month = date.getMonth();\r\nexport const day = date.getDate();\r\nexport const xmas = month == 11 || (month == 0 && day <= 10); //between dec 1 and jan 10\r\nexport const hallow = month == 9 && day >= 10; //between oct 10 and oct 31\t\r\nexport const viskey = 'visibility';\r\nexport const visval = 'visible';\r\nexport const xkey = 'x';\r\nexport const ykey = 'y';\r\nexport const hkey = 'height';\r\nexport const wkey = 'width';\r\nlet tileWidthNum = -1;\r\nlet tileHeightNum = -1;\r\nlet tileWidth;\r\nlet tileHeight;\r\nlet imagePaths = {};\r\nexport function absDiff(a, b) {\r\n    return Math.abs(Math.abs(a) - Math.abs(b));\r\n}\r\nexport function getImageRoot(folderName) {\r\n    if (root[folderName] == null || typeof (root[folderName]) == \"undefined\") {\r\n        var ret = \"images/\" + folderName + \"/\";\r\n        var url = window.location.href;\r\n        //console.log(url);\r\n        var idx = url.indexOf(\"sitecore\");\r\n        url = url.substring(idx + 9);\r\n        //console.log(url);\r\n        var levels = url.split(\"/\").length - 1;\r\n        for (var i = 0; i < levels; i++)\r\n            ret = \"../\" + ret;\r\n        root[folderName] = ret;\r\n        //console.log(\"Calculated root \"+root[folderName]);\r\n    }\r\n    return root[folderName];\r\n}\r\nexport function getRandomBetween(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\nexport function getRandomDecimalBetween(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\nexport function getOrCreateImgPath(img, folder) {\r\n    if (imagePaths[img] == null) {\r\n        imagePaths[img] = getImageRoot(folder) + img + \".png\";\r\n        //console.log(\"Computed image path '\"+imagePaths[img]+\"' for image '\"+img+\"'\");\r\n    }\r\n    return imagePaths[img];\r\n}\r\nexport function getTileWidth(iw) {\r\n    if (tileWidthNum != iw) {\r\n        tileWidthNum = iw;\r\n        tileWidth = tileWidthNum.toString();\r\n    }\r\n    return tileWidth;\r\n}\r\nexport function getTileHeight(ih) {\r\n    if (tileHeightNum != ih) {\r\n        tileHeightNum = ih;\r\n        tileHeight = tileHeightNum.toString();\r\n    }\r\n    return tileHeight;\r\n}\r\nexport function getArrayIndex(cols, x, y) {\r\n    return x + y * cols;\r\n}\r\n"],"sourceRoot":""}
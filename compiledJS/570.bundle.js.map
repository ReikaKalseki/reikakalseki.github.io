{"version":3,"sources":["webpack://sitecore/./browser.ts","webpack://sitecore/./fce/backgroundgen.ts","webpack://sitecore/./library.ts"],"names":["isPhone","document","addEventListener","imgs","getElementsByClassName","length","img","par","parentNode","tagName","put","createElement","innerHTML","src","replaceChild","className","url","replace","console","log","text","i","style","width","header","navbar","getElementById","insertBefore","nextSibling","toc","removeChild","collapseOnPhone","lavaCeilRow","lavaFloorRow","addImage","elem","ix","iy","iw","ih","svgimg","createElementNS","setAttributeNS","toString","appendChild","setBlock","terrain","idx","push","setBottomBlock","addBlock","getTopBlock","li","undefined","getBottomBlock","getRandomRawGenBlockAt","x","y","rows","cold","toxic","lava","f","coldCtr","toxicCtr","ret","deep1","Math","random","deep2","modifyImageLocational","cols","genOreVein","ore","s","getOreVeinSize","r","mx","max","floor","my","px","min","py","ms","slopeX","slopeY","l","d","k","di","dk","dx","dy","top","idx2","isValidRock","rock","startsWith","getRandomOreType","list","abs","getRandomCrystal","generateCrystalGlow","g","b","line","setPageBackground","body","html","documentElement","height","scrollHeight","offsetHeight","clientHeight","titleImg","window","location","href","rh","innerHeight","rw","innerWidth","clientWidth","ceil","tw","th","Array","lastColdCeil","lastColdFloor","lastToxicFloor","lastToxicCeil","lastLavaFloor","lastLavaCeil","crysw","magw","dd","coldCeil","coldFloor","toxicCeil","toxicFloor","lavaCeil","lavaFloor","gap1","gap2","blend","step","varr","flag","cm","cm2","generateLayers","veins","genOreVeins","generateCaves","generateResinBalls","t0","t","generateSurfaceResin","crys","placed","cry","top2","type","generateCrystals","imgsa","n","buildImage","tag","container","id","prepend","firstChild","root","date","Date","time","getSeconds","month","getMonth","day","getDate","xmas","hallow","viskey","visval","xkey","ykey","hkey","wkey","tileWidth","tileHeight","tileWidthNum","tileHeightNum","imagePaths","getRandomBetween","getRandomDecimalBetween","getOrCreateImgPath","folder","folderName","indexOf","levels","substring","split","getImageRoot","getTileWidth","getTileHeight","getArrayIndex"],"mappings":"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","file":"570.bundle.js","sourcesContent":["export const isPhone = checkMobile();\r\nfunction checkMobile() {\r\n    return false;\r\n}\r\nfunction collapseOnPhone() {\r\n    if (isPhone) {\r\n        var imgs = document.getElementsByClassName(\"deembed-media\");\r\n        while (imgs.length > 0) {\r\n            let img = imgs[0];\r\n            let par = img.parentNode;\r\n            //console.log(img.src+\" @ \"+par.tagName);\r\n            if (par.tagName == \"VIDEO\") {\r\n                let put = document.createElement(\"div\");\r\n                put.innerHTML = '<a href = \"' + img.src + '\">' + img.src + \"</a>\";\r\n                par.parentNode.replaceChild(put, par);\r\n            }\r\n            else {\r\n                //par.replaceChild(put, img);\r\n                if (par.className == \"video\") {\r\n                    var url = img.src.replace(\"embed/\", \"watch?v=\");\r\n                    par.innerHTML = '<a href = \"' + url + '\">' + url + \"</a>\";\r\n                }\r\n                else if (par.className != \"header-image\")\r\n                    par.innerHTML = img.src + \"<br>\";\r\n                else\r\n                    par.innerHTML = \"\";\r\n            }\r\n            console.log(\"Hiding media '\" + img.src + \"'\");\r\n        }\r\n        var text = document.getElementsByClassName(\"textarea\");\r\n        for (var i = 0; i < text.length; i++) {\r\n            text[i].style.width = \"33%\";\r\n        }\r\n        let header = document.createElement(\"div\");\r\n        header.innerHTML = \"<div style = 'text-align: center; width: 33%; margin: auto; border: 3px solid red;'><h2 style = 'color: red; margin: 12px;'>This site is not designed for use on phones and other handheld devices, nor is any of its content relevant on such platforms. You may continue to browse it this way if you wish, but it is recommended that you visit the site with a proper computer.</h2></div>\";\r\n        let navbar = document.getElementById(\"navbar\");\r\n        navbar.parentNode.insertBefore(header, navbar.nextSibling);\r\n        let toc = document.getElementById(\"toc_container\");\r\n        toc.parentNode.removeChild(toc);\r\n    }\r\n}\r\nfunction interceptDOM() {\r\n    collapseOnPhone();\r\n}\r\ndocument.addEventListener(\"DOMContentLoaded\", interceptDOM);\r\n","const SCALE = 2;\r\nconst coldMin = 0.22;\r\nconst coldMax = 0.28;\r\nconst toxicMin = 0.45;\r\nconst toxicMax = 0.55;\r\nconst lavaMin = 0.87;\r\nconst lavaMax = 0.95;\r\nconst coldVar = 0.02;\r\nconst toxicVar = 0.05;\r\nlet lavaCeilRow = 999;\r\nlet lavaFloorRow = 0;\r\nimport { xmas, viskey, visval, xkey, ykey, hkey, wkey, getRandomBetween, getRandomDecimalBetween, getOrCreateImgPath, getTileWidth, getTileHeight, getArrayIndex } from '../library';\r\nimport { isPhone } from '../browser';\r\nfunction addImage(elem, img, ix, iy, iw, ih) {\r\n    //var pre = '<image x=\"'+ix+'\" y=\"'+iy+'\" width=\"'+iw+'\" height=\"'+ih+'\" xlink:href=\"'+getImageRoot();\r\n    //var post = '.png\" />';\r\n    //return pre+img+post;\r\n    var svgimg = document.createElementNS('http://www.w3.org/2000/svg', 'image');\r\n    svgimg.setAttributeNS(null, wkey, getTileWidth(iw));\r\n    svgimg.setAttributeNS(null, hkey, getTileHeight(ih));\r\n    svgimg.setAttributeNS('http://www.w3.org/1999/xlink', 'href', getOrCreateImgPath(img, \"fceblocks\"));\r\n    svgimg.setAttributeNS(null, xkey, ix.toString());\r\n    svgimg.setAttributeNS(null, ykey, iy.toString());\r\n    svgimg.setAttributeNS(null, viskey, visval);\r\n    //if (img == \"bedrock\")\r\n    //svgimg.setAttributeNS(null, \"style\", \"color: #faa;\");\r\n    elem.appendChild(svgimg);\r\n}\r\nfunction buildImage(elem, rows, cols, terrain) {\r\n    var w = 16 * SCALE;\r\n    var h = 16 * SCALE;\r\n    var x = 0;\r\n    var y = 0;\r\n    for (var k = 0; k < rows; k++) {\r\n        x = 0;\r\n        for (var i = 0; i < cols; i++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            let imgs = terrain[idx];\r\n            //console.log(\"Got \"+img+\" @ \"+i+\", \"+k);\r\n            if (xmas && imgs.length > 0 && imgs[imgs.length - 1] != \"cave\" && !imgs[imgs.length - 1].startsWith(\"gem\") && imgs[imgs.length - 1] != \"lava\" && (k < lavaCeilRow || k > lavaFloorRow)) {\r\n                var imgsa = k == 0 ? [\"cave\"] : terrain[getArrayIndex(cols, i, k - 1)];\r\n                if (imgsa.length > 0 && imgsa[imgsa.length - 1] == \"cave\")\r\n                    imgs.push(\"snow\");\r\n            }\r\n            for (var n = 0; n < imgs.length; n++) {\r\n                var img = imgs[n];\r\n                img = modifyImageLocational(rows, cols, terrain, i, k, idx, img);\r\n                addImage(elem, img, x, y, w, h);\r\n            }\r\n            x += w;\r\n        }\r\n        y += h;\r\n    }\r\n}\r\nfunction isTransparent(img) {\r\n    switch (img) {\r\n        case \"air\":\r\n        case \"crystal\":\r\n        case \"lptbeam_v\":\r\n        case \"lptbeam_h\":\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction setBlock(terrain, idx, img) {\r\n    if (img == \"cave\")\r\n        console.log(\"ERROR: ADDED CAVE ON NULL\");\r\n    terrain[idx] = [];\r\n    terrain[idx].push(img);\r\n}\r\nfunction setBottomBlock(terrain, idx, img) {\r\n    if (terrain[idx] == null || terrain[idx].length == 0)\r\n        setBlock(terrain, idx, img);\r\n    else\r\n        terrain[idx][0] = img;\r\n}\r\nfunction addBlock(terrain, idx, img) {\r\n    //console.log(\"---\");\r\n    //console.log(terrain[idx]);\r\n    terrain[idx].push(img);\r\n    //console.log(terrain[idx]);\r\n    //console.log(\"---\");\r\n}\r\nfunction getTopBlock(terrain, idx) {\r\n    var li = terrain[idx];\r\n    var ret = li == undefined || li.length == 0 ? null : li[li.length - 1];\r\n    //if (ret == \"cave\")\r\n    //\tret = li.length >= 2 ? li[li.length-2] : null;\r\n    return ret;\r\n}\r\nfunction getBottomBlock(terrain, idx) {\r\n    var li = terrain[idx];\r\n    return li.length == 0 ? null : li[0];\r\n}\r\nfunction getRandomRawGenBlockAt(x, y, rows, cold, toxic, lava) {\r\n    var f = y / rows;\r\n    let coldCtr = cold[x];\r\n    var toxicCtr = toxic[x];\r\n    var lavaCtr = lava[x];\r\n    var ret = \"rock\";\r\n    var deep1 = f - (coldCtr - 0.1);\r\n    if (deep1 >= 0 && Math.random() * Math.random() * Math.random() * 0.8 < deep1) {\r\n        ret = \"bedrock\";\r\n    }\r\n    var deep2 = f - (toxicCtr - 0.1);\r\n    if (deep2 >= 0 && Math.random() * Math.random() * Math.random() * 0.8 < deep2) {\r\n        ret = \"deepstone\";\r\n    }\r\n    return ret;\r\n}\r\nfunction modifyImageLocational(rows, cols, terrain, x, y, idx, img) {\r\n    return img;\r\n}\r\nfunction getOreVeinSize(ore, y, rows) {\r\n    var f = y / rows;\r\n    var s = f < 0.2 ? 1 : 1 + (f - 0.2) * 0.75;\r\n    switch (ore) {\r\n        case \"hardresin\":\r\n            return [5, 5];\r\n        case \"cave\":\r\n            return [2 * s, 4 * s];\r\n        case \"biomass\":\r\n            return [1 * s, 1.5 * s];\r\n        case \"coal\":\r\n            return [1.5 * s, 2 * s];\r\n        default:\r\n            return [1.5 * s, 3 * s];\r\n    }\r\n}\r\nfunction genOreVein(rows, cols, terrain, x, y, ore, cold, toxic, lava) {\r\n    var s = getOreVeinSize(ore, y, rows);\r\n    //s[0] = 1;\r\n    //s[1] = 9;\r\n    var r = getRandomDecimalBetween(s[0], s[1]) * 0.675;\r\n    var mx = Math.max(0, Math.floor(x - r));\r\n    var my = Math.max(0, Math.floor(y - r));\r\n    var px = Math.min(cols - 1, Math.floor(x + r));\r\n    var py = Math.min(rows - 1, Math.floor(y + r));\r\n    var ms = 0.75;\r\n    var slopeX = getRandomDecimalBetween(-ms, ms);\r\n    var slopeY = getRandomDecimalBetween(-ms, ms);\r\n    //console.log(\"Generated ore type \"+ore+\" @ \"+x+\", \"+y+\" with sizes \"+rx+\", \"+ry+\" to range \"+mx+\"->\"+px+\"; \"+my+\"->\"+py+\"; slopes are \"+slopeX+\", \"+slopeY);\r\n    var l = ore == \"hardresin\" ? 0 : (ore == \"cave\" ? r * 3.5 : r * 2);\r\n    for (var d = 0; d <= l; d++) {\r\n        for (var i = mx; i <= px; i++) {\r\n            for (var k = my; k <= py; k++) {\r\n                var di = i - x;\r\n                var dk = k - y;\r\n                if (di * di + dk * dk <= r * r + 0.25) {\r\n                    var dx = Math.floor(i + d * slopeX);\r\n                    var dy = Math.floor(k + d * slopeY);\r\n                    let idx = getArrayIndex(cols, dx, dy);\r\n                    if (ore == \"hardresin\")\r\n                        setBlock(terrain, idx, ore);\r\n                    else if (ore == \"cave\") {\r\n                        if (terrain[idx] != null && terrain[idx].length > 0) {\r\n                            var top = getTopBlock(terrain, idx);\r\n                            if (top != \"cave\" && top != \"lava\" && top != \"crystal\" && top != \"magmarock\" && top != \"hardresin\") {\r\n                                var idx2 = dy == 0 ? -1 : getArrayIndex(cols, dx, dy - 1);\r\n                                if (idx2 < 0 || (terrain[idx2] != null && terrain[idx2].length > 0 && getTopBlock(terrain, idx2) != \"lava\"))\r\n                                    addBlock(terrain, idx, ore);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (terrain[idx] == null || isValidRock(ore, getBottomBlock(terrain, idx)))\r\n                        setBottomBlock(terrain, idx, ore);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction isValidRock(ore, rock) {\r\n    if (ore == \"hardresin\")\r\n        return true;\r\n    if (ore == \"biomass\")\r\n        return rock != null && rock.startsWith(\"deepstone_g\");\r\n    return rock == \"deepstone\" || rock == \"bedrock\" || rock == \"rock\";\r\n}\r\nfunction getRandomOreType(rows, x, y, cold, toxic, lava) {\r\n    var f = y / rows;\r\n    var list = [\"coal\", \"copper\", \"tin\"];\r\n    if (f > cold[x] - 0.12) {\r\n        list.push(\"iron\");\r\n    }\r\n    if (f > cold[x] - 0.06) {\r\n        list.push(\"lithium\");\r\n    }\r\n    if (f > cold[x] + 0.05) {\r\n        list.push(\"gold\");\r\n        list.push(\"nickel\");\r\n        list.push(\"titanium\");\r\n    }\r\n    if (Math.abs(f - toxic[x]) <= 0.1) {\r\n        list.push(\"biomass\");\r\n    }\r\n    if (f > toxic[x] + 0.05) {\r\n        //list.push(\"molybdenum\");\r\n        list.push(\"chromium\");\r\n    }\r\n    return list[Math.floor(Math.random() * list.length)];\r\n}\r\nfunction genOreVeins(rows, cols, terrain, cold, toxic, lava) {\r\n    var veins = rows * cols / 32;\r\n    //veins = 1;\r\n    for (var i = 0; i < veins; i++) {\r\n        var x = Math.floor(Math.random() * cols);\r\n        var y = Math.floor(Math.random() * rows);\r\n        var ore = getRandomOreType(rows, x, y, cold, toxic, lava);\r\n        genOreVein(rows, cols, terrain, x, y, ore, cold, toxic, lava);\r\n        //console.log(\"Generated \"+ore+\" at \"+x+\", \"+y);\r\n    }\r\n}\r\nfunction generateLayers(rows, cols, terrain, cold, toxic, lava) {\r\n    var lastColdCeil = -1;\r\n    var lastColdFloor = -1;\r\n    var lastToxicFloor = -1;\r\n    var lastToxicCeil = -1;\r\n    var lastLavaFloor = -1;\r\n    var lastLavaCeil = -1;\r\n    var crysw = getRandomBetween(-3, 4);\r\n    var magw = getRandomBetween(-3, 4);\r\n    var dd = Math.max(1, rows / 100);\r\n    for (var i = 0; i < cols; i++) {\r\n        var coldCeil = Math.floor(cold[i] * rows) - getRandomBetween(1, 4) * dd;\r\n        var coldFloor = Math.floor(cold[i] * rows) + getRandomBetween(0, 1) * dd;\r\n        var toxicCeil = Math.floor(toxic[i] * rows) - getRandomBetween(2, 4) * dd;\r\n        var toxicFloor = Math.floor(toxic[i] * rows) + getRandomBetween(2, 4) * dd;\r\n        var lavaCeil = Math.floor(lava[i] * rows) - getRandomBetween(2, 4) * dd;\r\n        var lavaFloor = Math.floor(lava[i] * rows) + getRandomBetween(1, 3) * dd;\r\n        if (i > 0) {\r\n            coldCeil = Math.max(Math.min(coldCeil, lastColdCeil + 0.5), lastColdCeil - 0.5);\r\n            coldFloor = Math.max(Math.min(coldFloor, lastColdFloor + 0.25), lastColdFloor - 0.25);\r\n            toxicCeil = Math.max(Math.min(toxicCeil, lastToxicCeil + 1), lastToxicCeil - 1);\r\n            toxicFloor = Math.max(Math.min(toxicFloor, lastToxicFloor + 0.5), lastToxicFloor - 0.5);\r\n            lavaCeil = Math.max(Math.min(lavaCeil, lastLavaCeil + 1), lastLavaCeil - 1);\r\n            lavaFloor = Math.max(Math.min(lavaFloor, lastLavaFloor + 0.25), lastLavaFloor - 0.25);\r\n        }\r\n        lavaCeilRow = Math.min(lavaCeilRow, Math.floor(lavaCeil));\r\n        lavaFloorRow = Math.max(lavaFloorRow, Math.ceil(lavaFloor));\r\n        for (var k = 0; k < rows; k++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            if (k >= coldCeil && k <= coldFloor) {\r\n                setBlock(terrain, idx, \"deepstone_b1\");\r\n                if (k != Math.ceil(coldCeil) && k != Math.floor(coldFloor))\r\n                    addBlock(terrain, idx, \"cave\");\r\n            }\r\n            if (k >= toxicCeil && k <= toxicFloor) {\r\n                setBlock(terrain, idx, \"deepstone_g1\");\r\n                if (k != Math.ceil(toxicCeil) && k != Math.floor(toxicFloor))\r\n                    addBlock(terrain, idx, \"cave\");\r\n            }\r\n            if (k >= lavaCeil && k <= lavaFloor) {\r\n                if (k != Math.floor(lavaFloor) && k >= Math.floor(lavaMax * rows) - 1 * dd) {\r\n                    setBlock(terrain, idx, \"lava\");\r\n                }\r\n                else {\r\n                    setBlock(terrain, idx, \"deepstone_o1\");\r\n                    if (k != Math.ceil(lavaCeil) && k != Math.floor(lavaFloor))\r\n                        addBlock(terrain, idx, \"cave\");\r\n                }\r\n            }\r\n        }\r\n        var gap1 = toxicCeil - coldFloor;\r\n        var gap2 = lavaCeil - toxicFloor;\r\n        var blend = Math.min(6, Math.max(1, Math.floor(Math.min(gap1, gap2) / 4)));\r\n        var step = Math.min(6, 6 / blend);\r\n        //console.log(\"Gaps \"+gap1+\", \"+gap2+\" -> \"+blend+\", \"+step);\r\n        for (var d = -blend; d < 0; d++) {\r\n            var varr = step == 6 ? 3 : Math.floor(((-d + 1) * step));\r\n            if (varr <= 6) {\r\n                setBlock(terrain, getArrayIndex(cols, i, d + Math.ceil(coldCeil)), \"deepstone_b\" + varr);\r\n                setBlock(terrain, getArrayIndex(cols, i, -d + Math.floor(coldFloor)), \"deepstone_b\" + varr);\r\n                setBlock(terrain, getArrayIndex(cols, i, d + Math.ceil(toxicCeil)), \"deepstone_g\" + varr);\r\n                setBlock(terrain, getArrayIndex(cols, i, -d + Math.floor(toxicFloor)), \"deepstone_g\" + varr);\r\n                setBlock(terrain, getArrayIndex(cols, i, d + Math.ceil(lavaCeil)), \"deepstone_o\" + varr);\r\n                setBlock(terrain, getArrayIndex(cols, i, -d + Math.floor(lavaFloor)), \"deepstone_o\" + varr);\r\n            }\r\n            //console.log(varr+\" @ \"+d);\r\n        }\r\n        lastColdFloor = coldFloor;\r\n        lastColdCeil = coldCeil;\r\n        lastToxicFloor = toxicFloor;\r\n        lastToxicCeil = toxicCeil;\r\n        lastLavaFloor = lavaFloor;\r\n        lastLavaCeil = lavaCeil;\r\n        var flag = false;\r\n        if (crysw <= -4) {\r\n            crysw = getRandomBetween(2, 4);\r\n            flag = true;\r\n        }\r\n        if (crysw > 0) {\r\n            var cm = coldCeil + 1;\r\n            var cm2 = coldFloor - 1;\r\n            if (flag || crysw == 1) {\r\n                cm = getRandomBetween(cm, cm + 1);\r\n                cm2 = Math.max(cm, getRandomBetween(cm2 - 3, cm2));\r\n            }\r\n            for (var k = cm; k <= cm2; k++) {\r\n                var idx = getArrayIndex(cols, i, k);\r\n                //if (getTopBlock(terrain, idx) == \"cave\")\r\n                setBlock(terrain, idx, \"crystal\");\r\n            }\r\n        }\r\n        crysw--;\r\n        if (magw <= -4) {\r\n            magw = getRandomBetween(1, 4);\r\n        }\r\n        if (magw > 0) {\r\n            var cm = lavaCeil + 1;\r\n            cm = getRandomBetween(cm, cm + 3);\r\n            var cm2 = lavaFloor - 1;\r\n            for (var k = cm; k <= cm2; k++) {\r\n                var idx = getArrayIndex(cols, i, k);\r\n                if (getTopBlock(terrain, idx) == \"cave\")\r\n                    setBlock(terrain, idx, \"magmarock\");\r\n            }\r\n        }\r\n        magw--;\r\n    }\r\n}\r\nfunction generateCaves(rows, cols, terrain, cold, toxic, lava) {\r\n    for (var i = 0; i < rows / 2.5; i++) {\r\n        var x = getRandomBetween(0, cols);\r\n        var y = getRandomBetween(0, rows);\r\n        genOreVein(rows, cols, terrain, x, y, \"cave\", cold, toxic, lava);\r\n    }\r\n}\r\nfunction generateResinBalls(rows, cols, terrain, cold, toxic, lava) {\r\n    for (var i = 0; i < rows / 40; i++) {\r\n        var x = getRandomBetween(6, cols - 6);\r\n        var y = getRandomBetween(Math.floor(cold[x] * rows / 2), Math.floor(lava[x] * rows - 12));\r\n        genOreVein(rows, cols, terrain, x, y, \"hardresin\", cold, toxic, lava);\r\n    }\r\n}\r\nfunction generateSurfaceResin(rows, cols, terrain) {\r\n    var t0 = getRandomBetween(0, 4);\r\n    for (var i = 0; i < cols; i++) {\r\n        var t = Math.max(t0 - 1, Math.min(t0 + 1, getRandomBetween(0, 4)));\r\n        for (var k = 0; k < t; k++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            setBlock(terrain, idx, \"resin\");\r\n        }\r\n        t0 = t;\r\n    }\r\n}\r\nfunction getRandomCrystal(y, rows, cold, toxic, lava) {\r\n    var f = y / rows;\r\n    var list = [];\r\n    if (f < cold / 2) {\r\n        list.push(\"diamond\");\r\n    }\r\n    if (f > cold / 2 && f < cold - 0.04) {\r\n        list.push(\"emerald\");\r\n    }\r\n    if (f > cold + 0.02 && f < (cold + toxic) / 2) {\r\n        list.push(\"ruby\");\r\n    }\r\n    if (f > (cold + toxic) / 2 && f < toxic - 0.04) {\r\n        list.push(\"sapphire\");\r\n    }\r\n    if (Math.abs(f - toxic) < 0.05) {\r\n        list.push(\"topaz\");\r\n    }\r\n    if (f > toxic + 0.07) {\r\n        list.push(\"sugalite\");\r\n    }\r\n    return list.length == 0 ? null : list[Math.floor(Math.random() * list.length)];\r\n}\r\nfunction generateCrystalGlow(elem, x, y, r, g, b) {\r\n    r *= 0.85;\r\n    g *= 0.85;\r\n    b *= 0.85;\r\n    var line = document.createElementNS('http://www.w3.org/2000/svg', 'ellipse');\r\n    line.setAttributeNS(null, \"cx\", ((x + 0.5) * 16 * SCALE).toString());\r\n    line.setAttributeNS(null, \"cy\", ((y + 0.5) * 16 * SCALE).toString());\r\n    line.setAttributeNS(null, \"rx\", (5 * 16 * SCALE).toString());\r\n    line.setAttributeNS(null, \"ry\", (5 * 16 * SCALE).toString());\r\n    line.setAttributeNS(null, \"fill\", \"rgb(\" + r + \", \" + g + \", \" + b + \")\");\r\n    line.setAttributeNS(null, \"style\", \"mix-blend-mode: screen; filter: blur(32px);\");\r\n    elem.appendChild(line);\r\n}\r\nfunction generateCrystals(rows, cols, terrain, cold, toxic, lava) {\r\n    var placed = [];\r\n    for (var i = 0; i < rows * 3; i++) {\r\n        var x = getRandomBetween(2, cols - 2);\r\n        var y = getRandomBetween(6, rows - 2);\r\n        var cry = getRandomCrystal(y, rows, cold[x], toxic[x], lava[x]);\r\n        if (cry == null)\r\n            continue;\r\n        var idx = getArrayIndex(cols, x, y);\r\n        var top = getTopBlock(terrain, idx);\r\n        var top2 = getTopBlock(terrain, getArrayIndex(cols, x, y + 1));\r\n        if (top == \"cave\" && top2 != \"cave\") {\r\n            addBlock(terrain, idx, \"gem_\" + cry);\r\n            //generateCrystalGlow(elem, rows, cols, terrain, x, y, idx);\r\n            placed.push({ x: x, y: y, type: cry });\r\n        }\r\n    }\r\n    return placed;\r\n}\r\nexport default function setPageBackground() {\r\n    if (isPhone)\r\n        return;\r\n    let tail = '</svg>';\r\n    let w = 16 * SCALE;\r\n    let h = 16 * SCALE;\r\n    let x = 0;\r\n    let y = 0;\r\n    //var height = findHighestNode(0, document.documentElement.childNodes);\r\n    let body = document.body;\r\n    let html = document.documentElement;\r\n    let height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight) - 64;\r\n    let titleImg = document.getElementsByClassName(\"title-image\")[0];\r\n    if (titleImg == null || titleImg.src == null || titleImg.src == \"\" || titleImg.src == window.location.href) {\r\n        height += 72;\r\n    }\r\n    else {\r\n        height += 48;\r\n    }\r\n    //console.log(\"Total height is \"+height+\", document content is: \"+document.documentElement.innerHTML);\r\n    let rh = Math.max(height, window.innerHeight, document.body.clientHeight);\r\n    let rw = Math.max(window.innerWidth, document.body.clientWidth);\r\n    //console.log(rw+\" x \"+rh);\r\n    let rows = Math.ceil(rh / h) + 1;\r\n    let cols = Math.ceil(rw / w);\r\n    let tw = cols * w;\r\n    let th = rows * h;\r\n    console.log(\"Generating FCE chunk slice tileset with \" + cols + \" columns and \" + rows + \" rows\");\r\n    let xmlns = \"http://www.w3.org/2000/svg\";\r\n    let elem = document.createElementNS(xmlns, \"svg\");\r\n    elem.setAttributeNS(null, \"width\", tw.toString());\r\n    elem.setAttributeNS(null, \"height\", th.toString());\r\n    let terrain = new Array(cols * rows);\r\n    let cold = new Array(cols);\r\n    let toxic = new Array(cols);\r\n    let lava = new Array(cols);\r\n    for (var i = 0; i < cols; i++) {\r\n        cold[i] = getRandomDecimalBetween(coldMin, coldMax);\r\n        toxic[i] = getRandomDecimalBetween(toxicMin, toxicMax);\r\n        lava[i] = getRandomDecimalBetween(lavaMin, lavaMax);\r\n        if (i > 0) {\r\n            cold[i] = Math.max(Math.min(cold[i], cold[i - 1] + 1), cold[i - 1] - 1);\r\n            toxic[i] = Math.max(Math.min(toxic[i], toxic[i - 1] + 2), toxic[i - 1] - 2);\r\n            lava[i] = Math.max(Math.min(lava[i], lava[i - 1] + 1), lava[i - 1] - 1);\r\n        }\r\n    }\r\n    for (var i = 0; i < cols; i++) {\r\n        for (var k = 0; k < rows; k++) {\r\n            let img = getRandomRawGenBlockAt(i, k, rows, cold, toxic, lava);\r\n            let idx = getArrayIndex(cols, i, k);\r\n            terrain[idx] = null;\r\n            setBlock(terrain, idx, img);\r\n        }\r\n    }\r\n    generateLayers(rows, cols, terrain, cold, toxic, lava);\r\n    genOreVeins(rows, cols, terrain, cold, toxic, lava);\r\n    generateCaves(rows, cols, terrain, cold, toxic, lava);\r\n    generateResinBalls(rows, cols, terrain, cold, toxic, lava);\r\n    generateSurfaceResin(rows, cols, terrain);\r\n    let crys = generateCrystals(rows, cols, terrain, cold, toxic, lava);\r\n    //generateLPTs(rows, cols, terrain);\r\n    buildImage(elem, rows, cols, terrain);\r\n    for (var i = 0; i < crys.length; i++) {\r\n        let cry = crys[i];\r\n        let r = 0;\r\n        let g = 0;\r\n        let b = 0;\r\n        switch (cry.type) {\r\n            case \"diamond\":\r\n                r = 224;\r\n                g = 234;\r\n                b = 240;\r\n                break;\r\n            case \"emerald\":\r\n                r = 78;\r\n                g = 221;\r\n                break;\r\n            case \"ruby\":\r\n                r = 229;\r\n                g = 19;\r\n                break;\r\n            case \"sapphire\":\r\n                r = 36;\r\n                g = 87;\r\n                b = 242;\r\n                break;\r\n            case \"topaz\":\r\n                r = 245;\r\n                g = 195;\r\n                b = 67;\r\n                break;\r\n            case \"sugalite\":\r\n                r = 195;\r\n                g = 22;\r\n                b = 229;\r\n                break;\r\n        }\r\n        generateCrystalGlow(elem, cry.x, cry.y, r, g, b);\r\n    }\r\n    let tag = \"background-content\";\r\n    let container = document.getElementById(tag);\r\n    if (container == null) {\r\n        container = document.createElement(\"div\");\r\n        container.id = tag;\r\n        console.log(\"Injecting background element.\");\r\n        document.body.prepend(container);\r\n    }\r\n    while (container.firstChild) {\r\n        container.removeChild(container.firstChild);\r\n    }\r\n    //console.log(elem);\r\n    container.appendChild(elem);\r\n}\r\n","let root = {};\r\nexport const date = new Date(); //new Date(\"December 16, 2016 11:13:00\");//\r\nexport const time = date.getSeconds();\r\nexport const month = date.getMonth();\r\nexport const day = date.getDate();\r\nexport const xmas = month == 11 || (month == 0 && day <= 10); //between dec 1 and jan 10\r\nexport const hallow = month == 9 && day >= 10; //between oct 10 and oct 31\t\r\nexport const viskey = 'visibility';\r\nexport const visval = 'visible';\r\nexport const xkey = 'x';\r\nexport const ykey = 'y';\r\nexport const hkey = 'height';\r\nexport const wkey = 'width';\r\nlet tileWidthNum = -1;\r\nlet tileHeightNum = -1;\r\nlet tileWidth;\r\nlet tileHeight;\r\nlet imagePaths = {};\r\nexport function absDiff(a, b) {\r\n    return Math.abs(Math.abs(a) - Math.abs(b));\r\n}\r\nexport function getImageRoot(folderName) {\r\n    if (root[folderName] == null || typeof (root[folderName]) == \"undefined\") {\r\n        var ret = \"images/\" + folderName + \"/\";\r\n        var url = window.location.href;\r\n        //console.log(url);\r\n        var idx = url.indexOf(\"sitecore\");\r\n        url = url.substring(idx + 9);\r\n        //console.log(url);\r\n        var levels = url.split(\"/\").length - 1;\r\n        for (var i = 0; i < levels; i++)\r\n            ret = \"../\" + ret;\r\n        root[folderName] = ret;\r\n        //console.log(\"Calculated root \"+root[folderName]);\r\n    }\r\n    return root[folderName];\r\n}\r\nexport function getRandomBetween(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\nexport function getRandomDecimalBetween(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\nexport function getOrCreateImgPath(img, folder) {\r\n    if (imagePaths[img] == null) {\r\n        imagePaths[img] = getImageRoot(folder) + img + \".png\";\r\n        //console.log(\"Computed image path '\"+imagePaths[img]+\"' for image '\"+img+\"'\");\r\n    }\r\n    return imagePaths[img];\r\n}\r\nexport function getTileWidth(iw) {\r\n    if (tileWidthNum != iw) {\r\n        tileWidthNum = iw;\r\n        tileWidth = tileWidthNum.toString();\r\n    }\r\n    return tileWidth;\r\n}\r\nexport function getTileHeight(ih) {\r\n    if (tileHeightNum != ih) {\r\n        tileHeightNum = ih;\r\n        tileHeight = tileHeightNum.toString();\r\n    }\r\n    return tileHeight;\r\n}\r\nexport function getArrayIndex(cols, x, y) {\r\n    return x + y * cols;\r\n}\r\n"],"sourceRoot":""}
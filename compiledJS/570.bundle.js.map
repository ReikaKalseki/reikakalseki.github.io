{"version":3,"sources":["webpack://sitecore/./node_modules/ts-debounce/dist/src/index.esm.js","webpack://sitecore/./browser.ts","webpack://sitecore/./fce/backgroundgen.ts","webpack://sitecore/./library.ts"],"names":["r","e","n","i","t","o","a","isImmediate","u","callback","c","maxWait","v","Date","now","l","f","d","slice","call","arguments","this","Promise","clearTimeout","setTimeout","apply","forEach","resolve","push","reject","cancel","isPhone","document","addEventListener","console","log","imgs","getElementsByClassName","length","img","par","parentNode","tagName","put","createElement","innerHTML","src","replaceChild","className","url","replace","text","style","width","header","navbar","getElementById","insertBefore","nextSibling","toc","removeChild","collapseOnPhone","lavaCeilRow","lavaFloorRow","addImage","elem","ix","iy","iw","ih","svgimg","createElementNS","setAttributeNS","toString","appendChild","setBlock","terrain","idx","setBottomBlock","addBlock","getTopBlock","li","undefined","getBottomBlock","getRandomRawGenBlockAt","x","y","rows","cold","toxic","lava","coldCtr","toxicCtr","ret","deep1","Math","random","deep2","modifyImageLocational","cols","genOreVein","ore","s","getOreVeinSize","mx","max","floor","my","px","min","py","ms","slopeX","slopeY","k","di","dk","dx","dy","top","idx2","isValidRock","rock","startsWith","getRandomOreType","list","abs","getRandomCrystal","generateCrystalGlow","g","b","line","setPageBackground","body","html","documentElement","height","scrollHeight","offsetHeight","clientHeight","titleImg","window","location","href","rh","innerHeight","rw","innerWidth","clientWidth","ceil","tw","th","Array","lastColdCeil","lastColdFloor","lastToxicFloor","lastToxicCeil","lastLavaFloor","lastLavaCeil","crysw","magw","dd","coldCeil","coldFloor","toxicCeil","toxicFloor","lavaCeil","lavaFloor","gap1","gap2","blend","step","varr","flag","cm","cm2","generateLayers","veins","genOreVeins","generateCaves","generateResinBalls","t0","generateSurfaceResin","crys","placed","cry","top2","type","generateCrystals","imgsa","buildImage","tag","container","id","prepend","firstChild","root","date","time","getSeconds","month","getMonth","day","getDate","xmas","hallow","viskey","visval","xkey","ykey","hkey","wkey","tileWidth","tileHeight","tileWidthNum","tileHeightNum","imagePaths","getRandomBetween","getRandomDecimalBetween","getOrCreateImgPath","folder","folderName","indexOf","levels","substring","split","getImageRoot","getTileWidth","getTileHeight","getArrayIndex"],"mappings":"kGAAA,SAASA,EAAEA,EAAEC,EAAEC,GAAG,IAAIC,EAAEC,EAAEC,OAAE,IAASJ,IAAIA,EAAE,SAAI,IAASC,IAAIA,EAAE,IAAI,IAAII,EAAE,OAAOH,EAAED,EAAEK,cAAcJ,EAAEK,EAAE,OAAOJ,EAAEF,EAAEO,WAAWL,EAAEM,EAAER,EAAES,QAAQC,EAAEC,KAAKC,MAAMC,EAAE,GAAG,SAASC,IAAI,QAAG,IAASN,EAAE,CAAC,IAAIV,EAAEa,KAAKC,MAAMF,EAAE,GAAGZ,EAAEC,GAAGS,EAAE,OAAOA,EAAEV,EAAE,OAAOC,EAAE,IAAIgB,EAAE,WAAW,IAAIhB,EAAE,GAAGiB,MAAMC,KAAKC,WAAWlB,EAAEmB,KAAK,OAAO,IAAIC,SAAQ,SAASnB,EAAEC,GAAG,IAAIM,EAAEJ,QAAG,IAASD,EAAE,QAAG,IAASA,GAAGkB,aAAalB,GAAGA,EAAEmB,YAAW,WAAW,GAAGnB,OAAE,EAAOO,EAAEC,KAAKC,OAAOR,EAAE,CAAC,IAAIH,EAAEH,EAAEyB,MAAMvB,EAAED,GAAGO,GAAGA,EAAEL,GAAGY,EAAEW,SAAQ,SAAS1B,GAAG,OAAM,EAAGA,EAAE2B,SAASxB,MAAKY,EAAE,MAAKC,KAAKN,EAAE,CAAC,IAAIO,EAAEjB,EAAEyB,MAAMvB,EAAED,GAAG,OAAOO,GAAGA,EAAES,GAAGd,EAAEc,GAAGF,EAAEa,KAAK,CAACD,QAAQxB,EAAE0B,OAAOzB,QAAO,OAAOa,EAAEa,OAAO,SAAS9B,QAAG,IAASK,GAAGkB,aAAalB,GAAGU,EAAEW,SAAQ,SAASzB,GAAG,OAAM,EAAGA,EAAE4B,QAAQ7B,MAAKe,EAAE,IAAIE,E,8DCA7qB,MAAMc,GAEF,EA2CXC,SAASC,iBAAiB,oBAJ1B,WACIC,QAAQC,IAAI,2BAA6BJ,GAtC7C,WACI,GAAIA,EAAS,CAET,IADA,IAAIK,EAAOJ,SAASK,uBAAuB,iBACpCD,EAAKE,OAAS,GAAG,CACpB,IAAIC,EAAMH,EAAK,GACXI,EAAMD,EAAIE,WAEd,GAAmB,SAAfD,EAAIE,QAAoB,CACxB,IAAIC,EAAMX,SAASY,cAAc,OACjCD,EAAIE,UAAY,cAAgBN,EAAIO,IAAM,KAAOP,EAAIO,IAAM,OAC3DN,EAAIC,WAAWM,aAAaJ,EAAKH,QAIjC,GAAqB,SAAjBA,EAAIQ,UAAsB,CAC1B,IAAIC,EAAMV,EAAIO,IAAII,QAAQ,SAAU,YACpCV,EAAIK,UAAY,cAAgBI,EAAM,KAAOA,EAAM,WAE7B,gBAAjBT,EAAIQ,UACTR,EAAIK,UAAYN,EAAIO,IAAM,OAE1BN,EAAIK,UAAY,GAExBX,QAAQC,IAAI,iBAAmBI,EAAIO,IAAM,KAG7C,IADA,IAAIK,EAAOnB,SAASK,uBAAuB,YAClClC,EAAI,EAAGA,EAAIgD,EAAKb,OAAQnC,IAC7BgD,EAAKhD,GAAGiD,MAAMC,MAAQ,MAE1B,IAAIC,EAAStB,SAASY,cAAc,OACpCU,EAAOT,UAAY,iYACnB,IAAIU,EAASvB,SAASwB,eAAe,UACrCD,EAAOd,WAAWgB,aAAaH,EAAQC,EAAOG,aAC9C,IAAIC,EAAM3B,SAASwB,eAAe,iBAClCG,EAAIlB,WAAWmB,YAAYD,IAK/BE,O,wFClCJ,IAAIC,EAAc,IACdC,EAAe,EAInB,SAASC,EAASC,EAAM1B,EAAK2B,EAAIC,EAAIC,EAAIC,GAIrC,IAAIC,EAAStC,SAASuC,gBAAgB,6BAA8B,SACpED,EAAOE,eAAe,KAAM,MAAM,QAAaJ,IAC/CE,EAAOE,eAAe,KAAM,MAAM,QAAcH,IAChDC,EAAOE,eAAe,+BAAgC,QAAQ,QAAmBjC,EAAK,cACtF+B,EAAOE,eAAe,KAAM,KAAMN,EAAGO,YACrCH,EAAOE,eAAe,KAAM,KAAML,EAAGM,YACrCH,EAAOE,eAAe,KAAM,KAAQ,MAGpCP,EAAKS,YAAYJ,GAuCrB,SAASK,EAASC,EAASC,EAAKtC,GACjB,QAAPA,GACAL,QAAQC,IAAI,6BAChByC,EAAQC,GAAO,GACfD,EAAQC,GAAKjD,KAAKW,GAEtB,SAASuC,EAAeF,EAASC,EAAKtC,GACd,MAAhBqC,EAAQC,IAAuC,GAAvBD,EAAQC,GAAKvC,OACrCqC,EAASC,EAASC,EAAKtC,GAEvBqC,EAAQC,GAAK,GAAKtC,EAE1B,SAASwC,EAASH,EAASC,EAAKtC,GAG5BqC,EAAQC,GAAKjD,KAAKW,GAItB,SAASyC,EAAYJ,EAASC,GAC1B,IAAII,EAAKL,EAAQC,GAIjB,OAHgBK,MAAND,GAAgC,GAAbA,EAAG3C,OAAc,KAAO2C,EAAGA,EAAG3C,OAAS,GAKxE,SAAS6C,EAAeP,EAASC,GAC7B,IAAII,EAAKL,EAAQC,GACjB,OAAoB,GAAbI,EAAG3C,OAAc,KAAO2C,EAAG,GAEtC,SAASG,EAAuBC,EAAGC,EAAGC,EAAMC,EAAMC,EAAOC,GACrD,IAAI1E,EAAIsE,EAAIC,EACZ,IAAII,EAAUH,EAAKH,GACnB,IAAIO,EAAWH,EAAMJ,GAEjBQ,GADUH,EAAKL,GACT,QACNS,EAAQ9E,GAAK2E,EAAU,IACvBG,GAAS,GAAKC,KAAKC,SAAWD,KAAKC,SAAWD,KAAKC,SAAW,GAAMF,IACpED,EAAM,WAEV,IAAII,EAAQjF,GAAK4E,EAAW,IAI5B,OAHIK,GAAS,GAAKF,KAAKC,SAAWD,KAAKC,SAAWD,KAAKC,SAAW,GAAMC,IACpEJ,EAAM,aAEHA,EAEX,SAASK,EAAsBX,EAAMY,EAAMvB,EAASS,EAAGC,EAAGT,EAAKtC,GAC3D,OAAOA,EAkBX,SAAS6D,EAAWb,EAAMY,EAAMvB,EAASS,EAAGC,EAAGe,EAAKb,EAAMC,EAAOC,GAc7D,IAbA,IAAIY,EAjBR,SAAwBD,EAAKf,EAAGC,GAC5B,IAAIvE,EAAIsE,EAAIC,EACRe,EAAItF,EAAI,GAAM,EAAI,EAAgB,KAAXA,EAAI,IAC/B,OAAQqF,GACJ,IAAK,YACD,MAAO,CAAC,EAAG,GACf,IAAK,OACD,MAAO,CAAC,EAAIC,EAAG,EAAIA,GACvB,IAAK,UACD,MAAO,CAAC,EAAIA,EAAG,IAAMA,GACzB,IAAK,OACD,MAAO,CAAC,IAAMA,EAAG,EAAIA,GACzB,QACI,MAAO,CAAC,IAAMA,EAAG,EAAIA,IAIrBC,CAAeF,EAAKf,EAAGC,GAG3BvF,EAA0C,MAAtC,QAAwBsG,EAAE,GAAIA,EAAE,IACpCE,EAAKT,KAAKU,IAAI,EAAGV,KAAKW,MAAMrB,EAAIrF,IAChC2G,EAAKZ,KAAKU,IAAI,EAAGV,KAAKW,MAAMpB,EAAItF,IAChC4G,EAAKb,KAAKc,IAAIV,EAAO,EAAGJ,KAAKW,MAAMrB,EAAIrF,IACvC8G,EAAKf,KAAKc,IAAItB,EAAO,EAAGQ,KAAKW,MAAMpB,EAAItF,IACvC+G,EAAK,IACLC,GAAS,SAAyBD,EAAIA,GACtCE,GAAS,SAAyBF,EAAIA,GAEtChG,EAAW,aAAPsF,EAAqB,EAAY,QAAPA,EAAoB,IAAJrG,EAAc,EAAJA,EACnDiB,EAAI,EAAGA,GAAKF,EAAGE,IACpB,IAAK,IAAId,EAAIqG,EAAIrG,GAAKyG,EAAIzG,IACtB,IAAK,IAAI+G,EAAIP,EAAIO,GAAKJ,EAAII,IAAK,CAC3B,IAAIC,EAAKhH,EAAIkF,EACT+B,EAAKF,EAAI5B,EACb,GAAI6B,EAAKA,EAAKC,EAAKA,GAAMpH,EAAIA,EAAI,IAAM,CACnC,IAAIqH,EAAKtB,KAAKW,MAAMvG,EAAIc,EAAI+F,GACxBM,EAAKvB,KAAKW,MAAMQ,EAAIjG,EAAIgG,GAC5B,IAAIpC,GAAM,QAAcsB,EAAMkB,EAAIC,GAClC,GAAW,aAAPjB,EACA1B,EAASC,EAASC,EAAKwB,QACtB,GAAW,QAAPA,GACL,GAAoB,MAAhBzB,EAAQC,IAAgBD,EAAQC,GAAKvC,OAAS,EAAG,CACjD,IAAIiF,EAAMvC,EAAYJ,EAASC,GAC/B,GAAW,QAAP0C,GAAwB,QAAPA,GAAwB,WAAPA,GAA2B,aAAPA,GAA6B,aAAPA,EAAoB,CAChG,IAAIC,EAAa,GAANF,GAAW,GAAI,QAAcnB,EAAMkB,EAAIC,EAAK,IACnDE,EAAO,GAAuB,MAAjB5C,EAAQ4C,IAAiB5C,EAAQ4C,GAAMlF,OAAS,GAAmC,QAA9B0C,EAAYJ,EAAS4C,KACvFzC,EAASH,EAASC,EAAKwB,UAId,MAAhBzB,EAAQC,IAAgB4C,EAAYpB,EAAKlB,EAAeP,EAASC,MACtEC,EAAeF,EAASC,EAAKwB,KAMrD,SAASoB,EAAYpB,EAAKqB,GACtB,MAAW,aAAPrB,IAEO,WAAPA,EACe,MAARqB,GAAgBA,EAAKC,WAAW,eAC5B,aAARD,GAA+B,WAARA,GAA6B,QAARA,GAEvD,SAASE,EAAiBrC,EAAMF,EAAGC,EAAGE,EAAMC,EAAOC,GAC/C,IAAI1E,EAAIsE,EAAIC,EACRsC,EAAO,CAAC,OAAQ,SAAU,OAmB9B,OAlBI7G,EAAIwE,EAAKH,GAAK,KACdwC,EAAKjG,KAAK,QAEVZ,EAAIwE,EAAKH,GAAK,KACdwC,EAAKjG,KAAK,WAEVZ,EAAIwE,EAAKH,GAAK,MACdwC,EAAKjG,KAAK,QACViG,EAAKjG,KAAK,UACViG,EAAKjG,KAAK,aAEVmE,KAAK+B,IAAI9G,EAAIyE,EAAMJ,KAAO,IAC1BwC,EAAKjG,KAAK,WAEVZ,EAAIyE,EAAMJ,GAAK,KAEfwC,EAAKjG,KAAK,YAEPiG,EAAK9B,KAAKW,MAAMX,KAAKC,SAAW6B,EAAKvF,SAkJhD,SAASyF,EAAiBzC,EAAGC,EAAMC,EAAMC,EAAOC,GAC5C,IAAI1E,EAAIsE,EAAIC,EACRsC,EAAO,GAmBX,OAlBI7G,EAAIwE,EAAO,GACXqC,EAAKjG,KAAK,WAEVZ,EAAIwE,EAAO,GAAKxE,EAAIwE,EAAO,KAC3BqC,EAAKjG,KAAK,WAEVZ,EAAIwE,EAAO,KAAQxE,GAAKwE,EAAOC,GAAS,GACxCoC,EAAKjG,KAAK,QAEVZ,GAAKwE,EAAOC,GAAS,GAAKzE,EAAIyE,EAAQ,KACtCoC,EAAKjG,KAAK,YAEVmE,KAAK+B,IAAI9G,EAAIyE,GAAS,KACtBoC,EAAKjG,KAAK,SAEVZ,EAAIyE,EAAQ,KACZoC,EAAKjG,KAAK,YAEQ,GAAfiG,EAAKvF,OAAc,KAAOuF,EAAK9B,KAAKW,MAAMX,KAAKC,SAAW6B,EAAKvF,SAE1E,SAAS0F,EAAoB/D,EAAMoB,EAAGC,EAAGtF,EAAGiI,EAAGC,GAC3ClI,GAAK,IACLiI,GAAK,IACLC,GAAK,IACL,IAAIC,EAAOnG,SAASuC,gBAAgB,6BAA8B,WAClE4D,EAAK3D,eAAe,KAAM,MAAmB,IAAXa,EAAI,IAvX5B,GAuX+CZ,YACzD0D,EAAK3D,eAAe,KAAM,MAAmB,IAAXc,EAAI,IAxX5B,GAwX+Cb,YACzD0D,EAAK3D,eAAe,KAAM,KAAM,KAAiBC,YACjD0D,EAAK3D,eAAe,KAAM,KAAM,KAAiBC,YACjD0D,EAAK3D,eAAe,KAAM,OAAQ,OAASxE,EAAI,KAAOiI,EAAI,KAAOC,EAAI,KACrEC,EAAK3D,eAAe,KAAM,QAAS,+CACnCP,EAAKS,YAAYyD,GAqBN,SAASC,IACpB,GAAI,IACA,OACJ,IAMIC,EAAOrG,SAASqG,KAChBC,EAAOtG,SAASuG,gBAChBC,EAASzC,KAAKU,IAAI4B,EAAKI,aAAcJ,EAAKK,aAAcJ,EAAKK,aAAcL,EAAKG,aAAcH,EAAKI,cAAgB,GACnHE,EAAW5G,SAASK,uBAAuB,eAAe,GAC9C,MAAZuG,GAAoC,MAAhBA,EAAS9F,KAA+B,IAAhB8F,EAAS9F,KAAa8F,EAAS9F,KAAO+F,OAAOC,SAASC,KAClGP,GAAU,GAGVA,GAAU,GAGd,IAAIQ,EAAKjD,KAAKU,IAAI+B,EAAQK,OAAOI,YAAajH,SAASqG,KAAKM,cACxDO,EAAKnD,KAAKU,IAAIoC,OAAOM,WAAYnH,SAASqG,KAAKe,aAE/C7D,EAAOQ,KAAKsD,KAAKL,EAlBb,IAkBuB,EAC3B7C,EAAOJ,KAAKsD,KAAKH,EApBb,IAqBJI,EArBI,GAqBCnD,EACLoD,EArBI,GAqBChE,EACTrD,QAAQC,IAAI,2CAA6CgE,EAAO,gBAAkBZ,EAAO,SACzF,IACItB,EAAOjC,SAASuC,gBADR,6BAC+B,OAC3CN,EAAKO,eAAe,KAAM,QAAS8E,EAAG7E,YACtCR,EAAKO,eAAe,KAAM,SAAU+E,EAAG9E,YACvC,IAAIG,EAAU,IAAI4E,MAAMrD,EAAOZ,GAC3BC,EAAO,IAAIgE,MAAMrD,GACjBV,EAAQ,IAAI+D,MAAMrD,GAClBT,EAAO,IAAI8D,MAAMrD,GACrB,IAAK,IAAIhG,EAAI,EAAGA,EAAIgG,EAAMhG,IACtBqF,EAAKrF,IAAK,QAtbF,IACA,KAsbRsF,EAAMtF,IAAK,QArbF,IACA,KAqbTuF,EAAKvF,IAAK,QApbF,IACA,KAobJA,EAAI,IACJqF,EAAKrF,GAAK4F,KAAKU,IAAIV,KAAKc,IAAIrB,EAAKrF,GAAIqF,EAAKrF,EAAI,GAAK,GAAIqF,EAAKrF,EAAI,GAAK,GACrEsF,EAAMtF,GAAK4F,KAAKU,IAAIV,KAAKc,IAAIpB,EAAMtF,GAAIsF,EAAMtF,EAAI,GAAK,GAAIsF,EAAMtF,EAAI,GAAK,GACzEuF,EAAKvF,GAAK4F,KAAKU,IAAIV,KAAKc,IAAInB,EAAKvF,GAAIuF,EAAKvF,EAAI,GAAK,GAAIuF,EAAKvF,EAAI,GAAK,IAG7E,IAASA,EAAI,EAAGA,EAAIgG,EAAMhG,IACtB,IAAK,IAAI+G,EAAI,EAAGA,EAAI3B,EAAM2B,IAAK,CAC3B,IAAI3E,EAAM6C,EAAuBjF,EAAG+G,EAAG3B,EAAMC,EAAMC,EAAOC,GACtDb,GAAM,QAAcsB,EAAMhG,EAAG+G,GACjCtC,EAAQC,GAAO,KACfF,EAASC,EAASC,EAAKtC,IA/OnC,SAAwBgD,EAAMY,EAAMvB,EAASY,EAAMC,EAAOC,GAUtD,IATA,IAAI+D,GAAgB,EAChBC,GAAiB,EACjBC,GAAkB,EAClBC,GAAiB,EACjBC,GAAiB,EACjBC,GAAgB,EAChBC,GAAQ,SAAkB,EAAG,GAC7BC,GAAO,SAAkB,EAAG,GAC5BC,EAAKlE,KAAKU,IAAI,EAAGlB,EAAO,KACnBpF,EAAI,EAAGA,EAAIgG,EAAMhG,IAAK,CAC3B,IAAI+J,EAAWnE,KAAKW,MAAMlB,EAAKrF,GAAKoF,IAAQ,QAAiB,EAAG,GAAK0E,EACjEE,EAAYpE,KAAKW,MAAMlB,EAAKrF,GAAKoF,IAAQ,QAAiB,EAAG,GAAK0E,EAClEG,EAAYrE,KAAKW,MAAMjB,EAAMtF,GAAKoF,IAAQ,QAAiB,EAAG,GAAK0E,EACnEI,EAAatE,KAAKW,MAAMjB,EAAMtF,GAAKoF,IAAQ,QAAiB,EAAG,GAAK0E,EACpEK,EAAWvE,KAAKW,MAAMhB,EAAKvF,GAAKoF,IAAQ,QAAiB,EAAG,GAAK0E,EACjEM,EAAYxE,KAAKW,MAAMhB,EAAKvF,GAAKoF,IAAQ,QAAiB,EAAG,GAAK0E,EAClE9J,EAAI,IACJ+J,EAAWnE,KAAKU,IAAIV,KAAKc,IAAIqD,EAAUT,EAAe,IAAMA,EAAe,IAC3EU,EAAYpE,KAAKU,IAAIV,KAAKc,IAAIsD,EAAWT,EAAgB,KAAOA,EAAgB,KAChFU,EAAYrE,KAAKU,IAAIV,KAAKc,IAAIuD,EAAWR,EAAgB,GAAIA,EAAgB,GAC7ES,EAAatE,KAAKU,IAAIV,KAAKc,IAAIwD,EAAYV,EAAiB,IAAMA,EAAiB,IACnFW,EAAWvE,KAAKU,IAAIV,KAAKc,IAAIyD,EAAUR,EAAe,GAAIA,EAAe,GACzES,EAAYxE,KAAKU,IAAIV,KAAKc,IAAI0D,EAAWV,EAAgB,KAAOA,EAAgB,MAEpF/F,EAAciC,KAAKc,IAAI/C,EAAaiC,KAAKW,MAAM4D,IAC/CvG,EAAegC,KAAKU,IAAI1C,EAAcgC,KAAKsD,KAAKkB,IAChD,IAAK,IAAIrD,EAAI,EAAGA,EAAI3B,EAAM2B,IAAK,CAC3B,IAAIrC,GAAM,QAAcsB,EAAMhG,EAAG+G,GAC7BA,GAAKgD,GAAYhD,GAAKiD,IACtBxF,EAASC,EAASC,EAAK,gBACnBqC,GAAKnB,KAAKsD,KAAKa,IAAahD,GAAKnB,KAAKW,MAAMyD,IAC5CpF,EAASH,EAASC,EAAK,SAE3BqC,GAAKkD,GAAalD,GAAKmD,IACvB1F,EAASC,EAASC,EAAK,gBACnBqC,GAAKnB,KAAKsD,KAAKe,IAAclD,GAAKnB,KAAKW,MAAM2D,IAC7CtF,EAASH,EAASC,EAAK,SAE3BqC,GAAKoD,GAAYpD,GAAKqD,IAClBrD,GAAKnB,KAAKW,MAAM6D,IAAcrD,GAAKnB,KAAKW,MAxP5C,IAwP4DnB,GAAQ,EAAI0E,EACpEtF,EAASC,EAASC,EAAK,SAGvBF,EAASC,EAASC,EAAK,gBACnBqC,GAAKnB,KAAKsD,KAAKiB,IAAapD,GAAKnB,KAAKW,MAAM6D,IAC5CxF,EAASH,EAASC,EAAK,UASvC,IALA,IAAI2F,EAAOJ,EAAYD,EACnBM,EAAOH,EAAWD,EAClBK,EAAQ3E,KAAKc,IAAI,EAAGd,KAAKU,IAAI,EAAGV,KAAKW,MAAMX,KAAKc,IAAI2D,EAAMC,GAAQ,KAClEE,EAAO5E,KAAKc,IAAI,EAAG,EAAI6D,GAElBzJ,GAAKyJ,EAAOzJ,EAAI,EAAGA,IAAK,CAC7B,IAAI2J,EAAe,GAARD,EAAY,EAAI5E,KAAKW,OAAa,EAAJzF,GAAS0J,GAC9CC,GAAQ,IACRjG,EAASC,GAAS,QAAcuB,EAAMhG,EAAGc,EAAI8E,KAAKsD,KAAKa,IAAY,cAAgBU,GACnFjG,EAASC,GAAS,QAAcuB,EAAMhG,GAAIc,EAAI8E,KAAKW,MAAMyD,IAAa,cAAgBS,GACtFjG,EAASC,GAAS,QAAcuB,EAAMhG,EAAGc,EAAI8E,KAAKsD,KAAKe,IAAa,cAAgBQ,GACpFjG,EAASC,GAAS,QAAcuB,EAAMhG,GAAIc,EAAI8E,KAAKW,MAAM2D,IAAc,cAAgBO,GACvFjG,EAASC,GAAS,QAAcuB,EAAMhG,EAAGc,EAAI8E,KAAKsD,KAAKiB,IAAY,cAAgBM,GACnFjG,EAASC,GAAS,QAAcuB,EAAMhG,GAAIc,EAAI8E,KAAKW,MAAM6D,IAAa,cAAgBK,IAI9FlB,EAAgBS,EAChBV,EAAeS,EACfP,EAAiBU,EACjBT,EAAgBQ,EAChBP,EAAgBU,EAChBT,EAAeQ,EACf,IAAIO,GAAO,EAKX,GAJId,IAAU,IACVA,GAAQ,QAAiB,EAAG,GAC5Bc,GAAO,GAEPd,EAAQ,EAAG,CACX,IAAIe,EAAKZ,EAAW,EAChBa,EAAMZ,EAAY,EAKtB,KAJIU,GAAiB,GAATd,KACRe,GAAK,QAAiBA,EAAIA,EAAK,GAC/BC,EAAMhF,KAAKU,IAAIqE,GAAI,QAAiBC,EAAM,EAAGA,KAExC7D,EAAI4D,EAAI5D,GAAK6D,EAAK7D,IAGvBvC,EAASC,EAFLC,GAAM,QAAcsB,EAAMhG,EAAG+G,GAEV,WAO/B,GAJA6C,IACIC,IAAS,IACTA,GAAO,QAAiB,EAAG,IAE3BA,EAAO,EAIP,IAHIc,EAAKR,EAAW,EAEhBS,EAAMR,EAAY,EACbrD,EAFT4D,GAAK,QAAiBA,EAAIA,EAAK,GAEd5D,GAAK6D,EAAK7D,IAEU,QAA7BlC,EAAYJ,EADZC,GAAM,QAAcsB,EAAMhG,EAAG+G,KAE7BvC,EAASC,EAASC,EAAK,aAGnCmF,KAyIJgB,CAAezF,EAAMY,EAAMvB,EAASY,EAAMC,EAAOC,GA7PrD,SAAqBH,EAAMY,EAAMvB,EAASY,EAAMC,EAAOC,GAGnD,IAFA,IAAIuF,EAAQ1F,EAAOY,EAAO,GAEjBhG,EAAI,EAAGA,EAAI8K,EAAO9K,IAAK,CAC5B,IAAIkF,EAAIU,KAAKW,MAAMX,KAAKC,SAAWG,GAC/Bb,EAAIS,KAAKW,MAAMX,KAAKC,SAAWT,GAEnCa,EAAWb,EAAMY,EAAMvB,EAASS,EAAGC,EADzBsC,EAAiBrC,EAAMF,EAAGC,EAAGE,EAAMC,KAwPjDyF,CAAY3F,EAAMY,EAAMvB,EAASY,EAAMC,GAvI3C,SAAuBF,EAAMY,EAAMvB,EAASY,EAAMC,EAAOC,GACrD,IAAK,IAAIvF,EAAI,EAAGA,EAAIoF,EAAO,IAAKpF,IAG5BiG,EAAWb,EAAMY,EAAMvB,GAFf,QAAiB,EAAGuB,IACpB,QAAiB,EAAGZ,GACU,QAoI1C4F,CAAc5F,EAAMY,EAAMvB,GAjI9B,SAA4BW,EAAMY,EAAMvB,EAASY,EAAMC,EAAOC,GAC1D,IAAK,IAAIvF,EAAI,EAAGA,EAAIoF,EAAO,GAAIpF,IAAK,CAChC,IAAIkF,GAAI,QAAiB,EAAGc,EAAO,GAEnCC,EAAWb,EAAMY,EAAMvB,EAASS,GADxB,QAAiBU,KAAKW,MAAMlB,EAAKH,GAAKE,EAAO,GAAIQ,KAAKW,MAAMhB,EAAKL,GAAKE,EAAO,KAC/C,cA8H1C6F,CAAmB7F,EAAMY,EAAMvB,EAASY,EAAMC,EAAOC,GA3HzD,SAA8BH,EAAMY,EAAMvB,GAEtC,IADA,IAAIyG,GAAK,QAAiB,EAAG,GACpBlL,EAAI,EAAGA,EAAIgG,EAAMhG,IAAK,CAE3B,IADA,IAAIC,EAAI2F,KAAKU,IAAI4E,EAAK,EAAGtF,KAAKc,IAAIwE,EAAK,GAAG,QAAiB,EAAG,KACrDnE,EAAI,EAAGA,EAAI9G,EAAG8G,IAEnBvC,EAASC,GADC,QAAcuB,EAAMhG,EAAG+G,GACV,SAE3BmE,EAAKjL,GAoHTkL,CAAqB/F,EAAMY,EAAMvB,GACjC,IAAI2G,EA9ER,SAA0BhG,EAAMY,EAAMvB,EAASY,EAAMC,EAAOC,GAExD,IADA,IAAI8F,EAAS,GACJrL,EAAI,EAAGA,EAAW,EAAPoF,EAAUpF,IAAK,CAC/B,IAAIkF,GAAI,QAAiB,EAAGc,EAAO,GAC/Bb,GAAI,QAAiB,EAAGC,EAAO,GAC/BkG,EAAM1D,EAAiBzC,EAAGC,EAAMC,EAAKH,GAAII,EAAMJ,GAAIK,EAAKL,IAC5D,GAAW,MAAPoG,EAAJ,CAEA,IAAI5G,GAAM,QAAcsB,EAAMd,EAAGC,GAC7BiC,EAAMvC,EAAYJ,EAASC,GAC3B6G,EAAO1G,EAAYJ,GAAS,QAAcuB,EAAMd,EAAGC,EAAI,IAChD,QAAPiC,GAAyB,QAARmE,IACjB3G,EAASH,EAASC,EAAK,OAAS4G,GAEhCD,EAAO5J,KAAK,CAAEyD,EAAGA,EAAGC,EAAGA,EAAGqG,KAAMF,MAGxC,OAAOD,EA6DII,CAAiBrG,EAAMY,EAAMvB,EAASY,EAAMC,EAAOC,GAG9D,IAnbJ,SAAoBzB,EAAMsB,EAAMY,EAAMvB,GAKlC,IAJA,IAEIS,EAAI,EACJC,EAAI,EACC4B,EAAI,EAAGA,EAAI3B,EAAM2B,IAAK,CAC3B7B,EAAI,EACJ,IAAK,IAAIlF,EAAI,EAAGA,EAAIgG,EAAMhG,IAAK,CAE3B,IAAIiC,EAAOwC,GADD,QAAcuB,EAAMhG,EAAG+G,IAGjC,GAAI,MAAQ9E,EAAKE,OAAS,GAA8B,QAAzBF,EAAKA,EAAKE,OAAS,KAAiBF,EAAKA,EAAKE,OAAS,GAAGqF,WAAW,QAAmC,QAAzBvF,EAAKA,EAAKE,OAAS,KAAiB4E,EAAIpD,GAAeoD,EAAInD,GAAe,CACpL,IAAI8H,EAAa,GAAL3E,EAAS,CAAC,QAAUtC,GAAQ,QAAcuB,EAAMhG,EAAG+G,EAAI,IAC/D2E,EAAMvJ,OAAS,GAAgC,QAA3BuJ,EAAMA,EAAMvJ,OAAS,IACzCF,EAAKR,KAAK,QAElB,IAAK,IAAI1B,EAAI,EAAGA,EAAIkC,EAAKE,OAAQpC,IAAK,CAClC,IAAIqC,EAAMH,EAAKlC,GAEf8D,EAASC,EADT1B,EAAM2D,EAAsBX,EAAMY,EAAMvB,EAASzE,EAAG+G,EAAGrC,EAAKtC,GACxC8C,EAAGC,EAlB3B,GACA,IAmBAD,GApBA,GAsBJC,GArBI,IAgbRwG,CAAW7H,EAAMsB,EAAMY,EAAMvB,GACpBzE,EAAI,EAAGA,EAAIoL,EAAKjJ,OAAQnC,IAAK,CAClC,IAAIsL,EAAMF,EAAKpL,GACXH,EAAI,EACJiI,EAAI,EACJC,EAAI,EACR,OAAQuD,EAAIE,MACR,IAAK,UACD3L,EAAI,IACJiI,EAAI,IACJC,EAAI,IACJ,MACJ,IAAK,UACDlI,EAAI,GACJiI,EAAI,IACJ,MACJ,IAAK,OACDjI,EAAI,IACJiI,EAAI,GACJ,MACJ,IAAK,WACDjI,EAAI,GACJiI,EAAI,GACJC,EAAI,IACJ,MACJ,IAAK,QACDlI,EAAI,IACJiI,EAAI,IACJC,EAAI,GACJ,MACJ,IAAK,WACDlI,EAAI,IACJiI,EAAI,GACJC,EAAI,IAGZF,EAAoB/D,EAAMwH,EAAIpG,EAAGoG,EAAInG,EAAGtF,EAAGiI,EAAGC,GAElD,IAAI6D,EAAM,qBACNC,EAAYhK,SAASwB,eAAeuI,GAOxC,IANiB,MAAbC,IACAA,EAAYhK,SAASY,cAAc,OACnCoJ,EAAUC,GAAKF,EACf7J,QAAQC,IAAI,iCACZH,SAASqG,KAAK6D,QAAQF,IAEnBA,EAAUG,YACbH,EAAUpI,YAAYoI,EAAUG,YAGpCH,EAAUtH,YAAYT,GAE1B4E,OAAO5G,iBAAiB,UAAU,OAASmG,EAAmB,IAAK,CAAE7H,aAAa,M,2KCngBlF,IAAI6L,EAAO,GACJ,MAAMC,EAAO,IAAIxL,KACXyL,EAAOD,EAAKE,aACZC,EAAQH,EAAKI,WACbC,EAAML,EAAKM,UACXC,EAAgB,IAATJ,GAAyB,GAATA,GAAcE,GAAO,GAC5CG,EAAkB,GAATL,GAAcE,GAAO,GAC9BI,EAAS,aACTC,EAAS,UACTC,EAAO,IACPC,EAAO,IACPC,EAAO,SACPC,EAAO,QACpB,IAEIC,EACAC,EAHAC,GAAgB,EAChBC,GAAiB,EAGjBC,EAAa,GAoBV,SAASC,EAAiB5G,EAAKJ,GAClC,OAAOV,KAAKW,MAAMX,KAAKC,UAAYS,EAAMI,EAAM,GAAKA,GAEjD,SAAS6G,EAAwB7G,EAAKJ,GACzC,OAAOV,KAAKC,UAAYS,EAAMI,GAAOA,EAElC,SAAS8G,EAAmBpL,EAAKqL,GAKpC,OAJuB,MAAnBJ,EAAWjL,KACXiL,EAAWjL,GAxBZ,SAAsBsL,GACzB,GAAwB,MAApBzB,EAAKyB,SAAoD,IAArBzB,EAAKyB,GAA6B,CAQtE,IAPA,IAAIhI,EAAM,UAAYgI,EAAa,IAC/B5K,EAAM4F,OAAOC,SAASC,KAEtBlE,EAAM5B,EAAI6K,QAAQ,YAGlBC,GAFJ9K,EAAMA,EAAI+K,UAAUnJ,EAAM,IAEToJ,MAAM,KAAK3L,OAAS,EAC5BnC,EAAI,EAAGA,EAAI4N,EAAQ5N,IACxB0F,EAAM,MAAQA,EAClBuG,EAAKyB,GAAchI,EAGvB,OAAOuG,EAAKyB,GAUUK,CAAaN,GAAUrL,EAAM,QAG5CiL,EAAWjL,GAEf,SAAS4L,EAAa/J,GAKzB,OAJIkJ,GAAgBlJ,IAChBkJ,EAAelJ,EACfgJ,EAAYE,EAAa7I,YAEtB2I,EAEJ,SAASgB,EAAc/J,GAK1B,OAJIkJ,GAAiBlJ,IACjBkJ,EAAgBlJ,EAChBgJ,EAAaE,EAAc9I,YAExB4I,EAEJ,SAASgB,EAAclI,EAAMd,EAAGC,GACnC,OAAOD,EAAIC,EAAIa","file":"570.bundle.js","sourcesContent":["function r(r,e,n){var i,t,o;void 0===e&&(e=50),void 0===n&&(n={});var a=null!=(i=n.isImmediate)&&i,u=null!=(t=n.callback)&&t,c=n.maxWait,v=Date.now(),l=[];function f(){if(void 0!==c){var r=Date.now()-v;if(r+e>=c)return c-r}return e}var d=function(){var e=[].slice.call(arguments),n=this;return new Promise(function(i,t){var c=a&&void 0===o;if(void 0!==o&&clearTimeout(o),o=setTimeout(function(){if(o=void 0,v=Date.now(),!a){var i=r.apply(n,e);u&&u(i),l.forEach(function(r){return(0,r.resolve)(i)}),l=[]}},f()),c){var d=r.apply(n,e);return u&&u(d),i(d)}l.push({resolve:i,reject:t})})};return d.cancel=function(r){void 0!==o&&clearTimeout(o),l.forEach(function(e){return(0,e.reject)(r)}),l=[]},d}export{r as debounce};\n//# sourceMappingURL=index.esm.js.map\n","export const isPhone = checkMobile();\r\nfunction checkMobile() {\r\n    return false;\r\n}\r\nfunction collapseOnPhone() {\r\n    if (isPhone) {\r\n        var imgs = document.getElementsByClassName(\"deembed-media\");\r\n        while (imgs.length > 0) {\r\n            let img = imgs[0];\r\n            let par = img.parentNode;\r\n            //console.log(img.src+\" @ \"+par.tagName);\r\n            if (par.tagName == \"VIDEO\") {\r\n                let put = document.createElement(\"div\");\r\n                put.innerHTML = '<a href = \"' + img.src + '\">' + img.src + \"</a>\";\r\n                par.parentNode.replaceChild(put, par);\r\n            }\r\n            else {\r\n                //par.replaceChild(put, img);\r\n                if (par.className == \"video\") {\r\n                    var url = img.src.replace(\"embed/\", \"watch?v=\");\r\n                    par.innerHTML = '<a href = \"' + url + '\">' + url + \"</a>\";\r\n                }\r\n                else if (par.className != \"header-image\")\r\n                    par.innerHTML = img.src + \"<br>\";\r\n                else\r\n                    par.innerHTML = \"\";\r\n            }\r\n            console.log(\"Hiding media '\" + img.src + \"'\");\r\n        }\r\n        var text = document.getElementsByClassName(\"textarea\");\r\n        for (var i = 0; i < text.length; i++) {\r\n            text[i].style.width = \"33%\";\r\n        }\r\n        let header = document.createElement(\"div\");\r\n        header.innerHTML = \"<div style = 'text-align: center; width: 33%; margin: auto; border: 3px solid red;'><h2 style = 'color: red; margin: 12px;'>This site is not designed for use on phones and other handheld devices, nor is any of its content relevant on such platforms. You may continue to browse it this way if you wish, but it is recommended that you visit the site with a proper computer.</h2></div>\";\r\n        let navbar = document.getElementById(\"navbar\");\r\n        navbar.parentNode.insertBefore(header, navbar.nextSibling);\r\n        let toc = document.getElementById(\"toc_container\");\r\n        toc.parentNode.removeChild(toc);\r\n    }\r\n}\r\nfunction interceptDOM() {\r\n    console.log(\"Detected phone browser: \" + isPhone);\r\n    collapseOnPhone();\r\n}\r\ndocument.addEventListener(\"DOMContentLoaded\", interceptDOM);\r\n","const SCALE = 2;\r\nconst coldMin = 0.22;\r\nconst coldMax = 0.28;\r\nconst toxicMin = 0.45;\r\nconst toxicMax = 0.55;\r\nconst lavaMin = 0.87;\r\nconst lavaMax = 0.95;\r\nconst coldVar = 0.02;\r\nconst toxicVar = 0.05;\r\nlet lavaCeilRow = 999;\r\nlet lavaFloorRow = 0;\r\nimport { debounce } from \"ts-debounce\";\r\nimport { xmas, viskey, visval, xkey, ykey, hkey, wkey, getRandomBetween, getRandomDecimalBetween, getOrCreateImgPath, getTileWidth, getTileHeight, getArrayIndex } from '../library';\r\nimport { isPhone } from '../browser';\r\nfunction addImage(elem, img, ix, iy, iw, ih) {\r\n    //var pre = '<image x=\"'+ix+'\" y=\"'+iy+'\" width=\"'+iw+'\" height=\"'+ih+'\" xlink:href=\"'+getImageRoot();\r\n    //var post = '.png\" />';\r\n    //return pre+img+post;\r\n    var svgimg = document.createElementNS('http://www.w3.org/2000/svg', 'image');\r\n    svgimg.setAttributeNS(null, wkey, getTileWidth(iw));\r\n    svgimg.setAttributeNS(null, hkey, getTileHeight(ih));\r\n    svgimg.setAttributeNS('http://www.w3.org/1999/xlink', 'href', getOrCreateImgPath(img, \"fceblocks\"));\r\n    svgimg.setAttributeNS(null, xkey, ix.toString());\r\n    svgimg.setAttributeNS(null, ykey, iy.toString());\r\n    svgimg.setAttributeNS(null, viskey, visval);\r\n    //if (img == \"bedrock\")\r\n    //svgimg.setAttributeNS(null, \"style\", \"color: #faa;\");\r\n    elem.appendChild(svgimg);\r\n}\r\nfunction buildImage(elem, rows, cols, terrain) {\r\n    var w = 16 * SCALE;\r\n    var h = 16 * SCALE;\r\n    var x = 0;\r\n    var y = 0;\r\n    for (var k = 0; k < rows; k++) {\r\n        x = 0;\r\n        for (var i = 0; i < cols; i++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            let imgs = terrain[idx];\r\n            //console.log(\"Got \"+img+\" @ \"+i+\", \"+k);\r\n            if (xmas && imgs.length > 0 && imgs[imgs.length - 1] != \"cave\" && !imgs[imgs.length - 1].startsWith(\"gem\") && imgs[imgs.length - 1] != \"lava\" && (k < lavaCeilRow || k > lavaFloorRow)) {\r\n                var imgsa = k == 0 ? [\"cave\"] : terrain[getArrayIndex(cols, i, k - 1)];\r\n                if (imgsa.length > 0 && imgsa[imgsa.length - 1] == \"cave\")\r\n                    imgs.push(\"snow\");\r\n            }\r\n            for (var n = 0; n < imgs.length; n++) {\r\n                var img = imgs[n];\r\n                img = modifyImageLocational(rows, cols, terrain, i, k, idx, img);\r\n                addImage(elem, img, x, y, w, h);\r\n            }\r\n            x += w;\r\n        }\r\n        y += h;\r\n    }\r\n}\r\nfunction isTransparent(img) {\r\n    switch (img) {\r\n        case \"air\":\r\n        case \"crystal\":\r\n        case \"lptbeam_v\":\r\n        case \"lptbeam_h\":\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction setBlock(terrain, idx, img) {\r\n    if (img == \"cave\")\r\n        console.log(\"ERROR: ADDED CAVE ON NULL\");\r\n    terrain[idx] = [];\r\n    terrain[idx].push(img);\r\n}\r\nfunction setBottomBlock(terrain, idx, img) {\r\n    if (terrain[idx] == null || terrain[idx].length == 0)\r\n        setBlock(terrain, idx, img);\r\n    else\r\n        terrain[idx][0] = img;\r\n}\r\nfunction addBlock(terrain, idx, img) {\r\n    //console.log(\"---\");\r\n    //console.log(terrain[idx]);\r\n    terrain[idx].push(img);\r\n    //console.log(terrain[idx]);\r\n    //console.log(\"---\");\r\n}\r\nfunction getTopBlock(terrain, idx) {\r\n    var li = terrain[idx];\r\n    var ret = li == undefined || li.length == 0 ? null : li[li.length - 1];\r\n    //if (ret == \"cave\")\r\n    //\tret = li.length >= 2 ? li[li.length-2] : null;\r\n    return ret;\r\n}\r\nfunction getBottomBlock(terrain, idx) {\r\n    var li = terrain[idx];\r\n    return li.length == 0 ? null : li[0];\r\n}\r\nfunction getRandomRawGenBlockAt(x, y, rows, cold, toxic, lava) {\r\n    var f = y / rows;\r\n    let coldCtr = cold[x];\r\n    var toxicCtr = toxic[x];\r\n    var lavaCtr = lava[x];\r\n    var ret = \"rock\";\r\n    var deep1 = f - (coldCtr - 0.1);\r\n    if (deep1 >= 0 && Math.random() * Math.random() * Math.random() * 0.8 < deep1) {\r\n        ret = \"bedrock\";\r\n    }\r\n    var deep2 = f - (toxicCtr - 0.1);\r\n    if (deep2 >= 0 && Math.random() * Math.random() * Math.random() * 0.8 < deep2) {\r\n        ret = \"deepstone\";\r\n    }\r\n    return ret;\r\n}\r\nfunction modifyImageLocational(rows, cols, terrain, x, y, idx, img) {\r\n    return img;\r\n}\r\nfunction getOreVeinSize(ore, y, rows) {\r\n    var f = y / rows;\r\n    var s = f < 0.2 ? 1 : 1 + (f - 0.2) * 0.75;\r\n    switch (ore) {\r\n        case \"hardresin\":\r\n            return [5, 5];\r\n        case \"cave\":\r\n            return [2 * s, 4 * s];\r\n        case \"biomass\":\r\n            return [1 * s, 1.5 * s];\r\n        case \"coal\":\r\n            return [1.5 * s, 2 * s];\r\n        default:\r\n            return [1.5 * s, 3 * s];\r\n    }\r\n}\r\nfunction genOreVein(rows, cols, terrain, x, y, ore, cold, toxic, lava) {\r\n    var s = getOreVeinSize(ore, y, rows);\r\n    //s[0] = 1;\r\n    //s[1] = 9;\r\n    var r = getRandomDecimalBetween(s[0], s[1]) * 0.675;\r\n    var mx = Math.max(0, Math.floor(x - r));\r\n    var my = Math.max(0, Math.floor(y - r));\r\n    var px = Math.min(cols - 1, Math.floor(x + r));\r\n    var py = Math.min(rows - 1, Math.floor(y + r));\r\n    var ms = 0.75;\r\n    var slopeX = getRandomDecimalBetween(-ms, ms);\r\n    var slopeY = getRandomDecimalBetween(-ms, ms);\r\n    //console.log(\"Generated ore type \"+ore+\" @ \"+x+\", \"+y+\" with sizes \"+rx+\", \"+ry+\" to range \"+mx+\"->\"+px+\"; \"+my+\"->\"+py+\"; slopes are \"+slopeX+\", \"+slopeY);\r\n    var l = ore == \"hardresin\" ? 0 : (ore == \"cave\" ? r * 3.5 : r * 2);\r\n    for (var d = 0; d <= l; d++) {\r\n        for (var i = mx; i <= px; i++) {\r\n            for (var k = my; k <= py; k++) {\r\n                var di = i - x;\r\n                var dk = k - y;\r\n                if (di * di + dk * dk <= r * r + 0.25) {\r\n                    var dx = Math.floor(i + d * slopeX);\r\n                    var dy = Math.floor(k + d * slopeY);\r\n                    let idx = getArrayIndex(cols, dx, dy);\r\n                    if (ore == \"hardresin\")\r\n                        setBlock(terrain, idx, ore);\r\n                    else if (ore == \"cave\") {\r\n                        if (terrain[idx] != null && terrain[idx].length > 0) {\r\n                            var top = getTopBlock(terrain, idx);\r\n                            if (top != \"cave\" && top != \"lava\" && top != \"crystal\" && top != \"magmarock\" && top != \"hardresin\") {\r\n                                var idx2 = dy == 0 ? -1 : getArrayIndex(cols, dx, dy - 1);\r\n                                if (idx2 < 0 || (terrain[idx2] != null && terrain[idx2].length > 0 && getTopBlock(terrain, idx2) != \"lava\"))\r\n                                    addBlock(terrain, idx, ore);\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (terrain[idx] == null || isValidRock(ore, getBottomBlock(terrain, idx)))\r\n                        setBottomBlock(terrain, idx, ore);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction isValidRock(ore, rock) {\r\n    if (ore == \"hardresin\")\r\n        return true;\r\n    if (ore == \"biomass\")\r\n        return rock != null && rock.startsWith(\"deepstone_g\");\r\n    return rock == \"deepstone\" || rock == \"bedrock\" || rock == \"rock\";\r\n}\r\nfunction getRandomOreType(rows, x, y, cold, toxic, lava) {\r\n    var f = y / rows;\r\n    var list = [\"coal\", \"copper\", \"tin\"];\r\n    if (f > cold[x] - 0.12) {\r\n        list.push(\"iron\");\r\n    }\r\n    if (f > cold[x] - 0.06) {\r\n        list.push(\"lithium\");\r\n    }\r\n    if (f > cold[x] + 0.05) {\r\n        list.push(\"gold\");\r\n        list.push(\"nickel\");\r\n        list.push(\"titanium\");\r\n    }\r\n    if (Math.abs(f - toxic[x]) <= 0.1) {\r\n        list.push(\"biomass\");\r\n    }\r\n    if (f > toxic[x] + 0.05) {\r\n        //list.push(\"molybdenum\");\r\n        list.push(\"chromium\");\r\n    }\r\n    return list[Math.floor(Math.random() * list.length)];\r\n}\r\nfunction genOreVeins(rows, cols, terrain, cold, toxic, lava) {\r\n    var veins = rows * cols / 32;\r\n    //veins = 1;\r\n    for (var i = 0; i < veins; i++) {\r\n        var x = Math.floor(Math.random() * cols);\r\n        var y = Math.floor(Math.random() * rows);\r\n        var ore = getRandomOreType(rows, x, y, cold, toxic, lava);\r\n        genOreVein(rows, cols, terrain, x, y, ore, cold, toxic, lava);\r\n        //console.log(\"Generated \"+ore+\" at \"+x+\", \"+y);\r\n    }\r\n}\r\nfunction generateLayers(rows, cols, terrain, cold, toxic, lava) {\r\n    var lastColdCeil = -1;\r\n    var lastColdFloor = -1;\r\n    var lastToxicFloor = -1;\r\n    var lastToxicCeil = -1;\r\n    var lastLavaFloor = -1;\r\n    var lastLavaCeil = -1;\r\n    var crysw = getRandomBetween(-3, 4);\r\n    var magw = getRandomBetween(-3, 4);\r\n    var dd = Math.max(1, rows / 100);\r\n    for (var i = 0; i < cols; i++) {\r\n        var coldCeil = Math.floor(cold[i] * rows) - getRandomBetween(1, 4) * dd;\r\n        var coldFloor = Math.floor(cold[i] * rows) + getRandomBetween(0, 1) * dd;\r\n        var toxicCeil = Math.floor(toxic[i] * rows) - getRandomBetween(2, 4) * dd;\r\n        var toxicFloor = Math.floor(toxic[i] * rows) + getRandomBetween(2, 4) * dd;\r\n        var lavaCeil = Math.floor(lava[i] * rows) - getRandomBetween(2, 4) * dd;\r\n        var lavaFloor = Math.floor(lava[i] * rows) + getRandomBetween(1, 3) * dd;\r\n        if (i > 0) {\r\n            coldCeil = Math.max(Math.min(coldCeil, lastColdCeil + 0.5), lastColdCeil - 0.5);\r\n            coldFloor = Math.max(Math.min(coldFloor, lastColdFloor + 0.25), lastColdFloor - 0.25);\r\n            toxicCeil = Math.max(Math.min(toxicCeil, lastToxicCeil + 1), lastToxicCeil - 1);\r\n            toxicFloor = Math.max(Math.min(toxicFloor, lastToxicFloor + 0.5), lastToxicFloor - 0.5);\r\n            lavaCeil = Math.max(Math.min(lavaCeil, lastLavaCeil + 1), lastLavaCeil - 1);\r\n            lavaFloor = Math.max(Math.min(lavaFloor, lastLavaFloor + 0.25), lastLavaFloor - 0.25);\r\n        }\r\n        lavaCeilRow = Math.min(lavaCeilRow, Math.floor(lavaCeil));\r\n        lavaFloorRow = Math.max(lavaFloorRow, Math.ceil(lavaFloor));\r\n        for (var k = 0; k < rows; k++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            if (k >= coldCeil && k <= coldFloor) {\r\n                setBlock(terrain, idx, \"deepstone_b1\");\r\n                if (k != Math.ceil(coldCeil) && k != Math.floor(coldFloor))\r\n                    addBlock(terrain, idx, \"cave\");\r\n            }\r\n            if (k >= toxicCeil && k <= toxicFloor) {\r\n                setBlock(terrain, idx, \"deepstone_g1\");\r\n                if (k != Math.ceil(toxicCeil) && k != Math.floor(toxicFloor))\r\n                    addBlock(terrain, idx, \"cave\");\r\n            }\r\n            if (k >= lavaCeil && k <= lavaFloor) {\r\n                if (k != Math.floor(lavaFloor) && k >= Math.floor(lavaMax * rows) - 1 * dd) {\r\n                    setBlock(terrain, idx, \"lava\");\r\n                }\r\n                else {\r\n                    setBlock(terrain, idx, \"deepstone_o1\");\r\n                    if (k != Math.ceil(lavaCeil) && k != Math.floor(lavaFloor))\r\n                        addBlock(terrain, idx, \"cave\");\r\n                }\r\n            }\r\n        }\r\n        var gap1 = toxicCeil - coldFloor;\r\n        var gap2 = lavaCeil - toxicFloor;\r\n        var blend = Math.min(6, Math.max(1, Math.floor(Math.min(gap1, gap2) / 4)));\r\n        var step = Math.min(6, 6 / blend);\r\n        //console.log(\"Gaps \"+gap1+\", \"+gap2+\" -> \"+blend+\", \"+step);\r\n        for (var d = -blend; d < 0; d++) {\r\n            var varr = step == 6 ? 3 : Math.floor(((-d + 1) * step));\r\n            if (varr <= 6) {\r\n                setBlock(terrain, getArrayIndex(cols, i, d + Math.ceil(coldCeil)), \"deepstone_b\" + varr);\r\n                setBlock(terrain, getArrayIndex(cols, i, -d + Math.floor(coldFloor)), \"deepstone_b\" + varr);\r\n                setBlock(terrain, getArrayIndex(cols, i, d + Math.ceil(toxicCeil)), \"deepstone_g\" + varr);\r\n                setBlock(terrain, getArrayIndex(cols, i, -d + Math.floor(toxicFloor)), \"deepstone_g\" + varr);\r\n                setBlock(terrain, getArrayIndex(cols, i, d + Math.ceil(lavaCeil)), \"deepstone_o\" + varr);\r\n                setBlock(terrain, getArrayIndex(cols, i, -d + Math.floor(lavaFloor)), \"deepstone_o\" + varr);\r\n            }\r\n            //console.log(varr+\" @ \"+d);\r\n        }\r\n        lastColdFloor = coldFloor;\r\n        lastColdCeil = coldCeil;\r\n        lastToxicFloor = toxicFloor;\r\n        lastToxicCeil = toxicCeil;\r\n        lastLavaFloor = lavaFloor;\r\n        lastLavaCeil = lavaCeil;\r\n        var flag = false;\r\n        if (crysw <= -4) {\r\n            crysw = getRandomBetween(2, 4);\r\n            flag = true;\r\n        }\r\n        if (crysw > 0) {\r\n            var cm = coldCeil + 1;\r\n            var cm2 = coldFloor - 1;\r\n            if (flag || crysw == 1) {\r\n                cm = getRandomBetween(cm, cm + 1);\r\n                cm2 = Math.max(cm, getRandomBetween(cm2 - 3, cm2));\r\n            }\r\n            for (var k = cm; k <= cm2; k++) {\r\n                var idx = getArrayIndex(cols, i, k);\r\n                //if (getTopBlock(terrain, idx) == \"cave\")\r\n                setBlock(terrain, idx, \"crystal\");\r\n            }\r\n        }\r\n        crysw--;\r\n        if (magw <= -4) {\r\n            magw = getRandomBetween(1, 4);\r\n        }\r\n        if (magw > 0) {\r\n            var cm = lavaCeil + 1;\r\n            cm = getRandomBetween(cm, cm + 3);\r\n            var cm2 = lavaFloor - 1;\r\n            for (var k = cm; k <= cm2; k++) {\r\n                var idx = getArrayIndex(cols, i, k);\r\n                if (getTopBlock(terrain, idx) == \"cave\")\r\n                    setBlock(terrain, idx, \"magmarock\");\r\n            }\r\n        }\r\n        magw--;\r\n    }\r\n}\r\nfunction generateCaves(rows, cols, terrain, cold, toxic, lava) {\r\n    for (var i = 0; i < rows / 2.5; i++) {\r\n        var x = getRandomBetween(0, cols);\r\n        var y = getRandomBetween(0, rows);\r\n        genOreVein(rows, cols, terrain, x, y, \"cave\", cold, toxic, lava);\r\n    }\r\n}\r\nfunction generateResinBalls(rows, cols, terrain, cold, toxic, lava) {\r\n    for (var i = 0; i < rows / 40; i++) {\r\n        var x = getRandomBetween(6, cols - 6);\r\n        var y = getRandomBetween(Math.floor(cold[x] * rows / 2), Math.floor(lava[x] * rows - 12));\r\n        genOreVein(rows, cols, terrain, x, y, \"hardresin\", cold, toxic, lava);\r\n    }\r\n}\r\nfunction generateSurfaceResin(rows, cols, terrain) {\r\n    var t0 = getRandomBetween(0, 4);\r\n    for (var i = 0; i < cols; i++) {\r\n        var t = Math.max(t0 - 1, Math.min(t0 + 1, getRandomBetween(0, 4)));\r\n        for (var k = 0; k < t; k++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            setBlock(terrain, idx, \"resin\");\r\n        }\r\n        t0 = t;\r\n    }\r\n}\r\nfunction getRandomCrystal(y, rows, cold, toxic, lava) {\r\n    var f = y / rows;\r\n    var list = [];\r\n    if (f < cold / 2) {\r\n        list.push(\"diamond\");\r\n    }\r\n    if (f > cold / 2 && f < cold - 0.04) {\r\n        list.push(\"emerald\");\r\n    }\r\n    if (f > cold + 0.02 && f < (cold + toxic) / 2) {\r\n        list.push(\"ruby\");\r\n    }\r\n    if (f > (cold + toxic) / 2 && f < toxic - 0.04) {\r\n        list.push(\"sapphire\");\r\n    }\r\n    if (Math.abs(f - toxic) < 0.05) {\r\n        list.push(\"topaz\");\r\n    }\r\n    if (f > toxic + 0.07) {\r\n        list.push(\"sugalite\");\r\n    }\r\n    return list.length == 0 ? null : list[Math.floor(Math.random() * list.length)];\r\n}\r\nfunction generateCrystalGlow(elem, x, y, r, g, b) {\r\n    r *= 0.85;\r\n    g *= 0.85;\r\n    b *= 0.85;\r\n    var line = document.createElementNS('http://www.w3.org/2000/svg', 'ellipse');\r\n    line.setAttributeNS(null, \"cx\", ((x + 0.5) * 16 * SCALE).toString());\r\n    line.setAttributeNS(null, \"cy\", ((y + 0.5) * 16 * SCALE).toString());\r\n    line.setAttributeNS(null, \"rx\", (5 * 16 * SCALE).toString());\r\n    line.setAttributeNS(null, \"ry\", (5 * 16 * SCALE).toString());\r\n    line.setAttributeNS(null, \"fill\", \"rgb(\" + r + \", \" + g + \", \" + b + \")\");\r\n    line.setAttributeNS(null, \"style\", \"mix-blend-mode: screen; filter: blur(32px);\");\r\n    elem.appendChild(line);\r\n}\r\nfunction generateCrystals(rows, cols, terrain, cold, toxic, lava) {\r\n    var placed = [];\r\n    for (var i = 0; i < rows * 3; i++) {\r\n        var x = getRandomBetween(2, cols - 2);\r\n        var y = getRandomBetween(6, rows - 2);\r\n        var cry = getRandomCrystal(y, rows, cold[x], toxic[x], lava[x]);\r\n        if (cry == null)\r\n            continue;\r\n        var idx = getArrayIndex(cols, x, y);\r\n        var top = getTopBlock(terrain, idx);\r\n        var top2 = getTopBlock(terrain, getArrayIndex(cols, x, y + 1));\r\n        if (top == \"cave\" && top2 != \"cave\") {\r\n            addBlock(terrain, idx, \"gem_\" + cry);\r\n            //generateCrystalGlow(elem, rows, cols, terrain, x, y, idx);\r\n            placed.push({ x: x, y: y, type: cry });\r\n        }\r\n    }\r\n    return placed;\r\n}\r\nexport default function setPageBackground() {\r\n    if (isPhone)\r\n        return;\r\n    let tail = '</svg>';\r\n    let w = 16 * SCALE;\r\n    let h = 16 * SCALE;\r\n    let x = 0;\r\n    let y = 0;\r\n    //var height = findHighestNode(0, document.documentElement.childNodes);\r\n    let body = document.body;\r\n    let html = document.documentElement;\r\n    let height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight) - 64;\r\n    let titleImg = document.getElementsByClassName(\"title-image\")[0];\r\n    if (titleImg == null || titleImg.src == null || titleImg.src == \"\" || titleImg.src == window.location.href) {\r\n        height += 72;\r\n    }\r\n    else {\r\n        height += 48;\r\n    }\r\n    //console.log(\"Total height is \"+height+\", document content is: \"+document.documentElement.innerHTML);\r\n    let rh = Math.max(height, window.innerHeight, document.body.clientHeight);\r\n    let rw = Math.max(window.innerWidth, document.body.clientWidth);\r\n    //console.log(rw+\" x \"+rh);\r\n    let rows = Math.ceil(rh / h) + 1;\r\n    let cols = Math.ceil(rw / w);\r\n    let tw = cols * w;\r\n    let th = rows * h;\r\n    console.log(\"Generating FCE chunk slice tileset with \" + cols + \" columns and \" + rows + \" rows\");\r\n    let xmlns = \"http://www.w3.org/2000/svg\";\r\n    let elem = document.createElementNS(xmlns, \"svg\");\r\n    elem.setAttributeNS(null, \"width\", tw.toString());\r\n    elem.setAttributeNS(null, \"height\", th.toString());\r\n    let terrain = new Array(cols * rows);\r\n    let cold = new Array(cols);\r\n    let toxic = new Array(cols);\r\n    let lava = new Array(cols);\r\n    for (var i = 0; i < cols; i++) {\r\n        cold[i] = getRandomDecimalBetween(coldMin, coldMax);\r\n        toxic[i] = getRandomDecimalBetween(toxicMin, toxicMax);\r\n        lava[i] = getRandomDecimalBetween(lavaMin, lavaMax);\r\n        if (i > 0) {\r\n            cold[i] = Math.max(Math.min(cold[i], cold[i - 1] + 1), cold[i - 1] - 1);\r\n            toxic[i] = Math.max(Math.min(toxic[i], toxic[i - 1] + 2), toxic[i - 1] - 2);\r\n            lava[i] = Math.max(Math.min(lava[i], lava[i - 1] + 1), lava[i - 1] - 1);\r\n        }\r\n    }\r\n    for (var i = 0; i < cols; i++) {\r\n        for (var k = 0; k < rows; k++) {\r\n            let img = getRandomRawGenBlockAt(i, k, rows, cold, toxic, lava);\r\n            let idx = getArrayIndex(cols, i, k);\r\n            terrain[idx] = null;\r\n            setBlock(terrain, idx, img);\r\n        }\r\n    }\r\n    generateLayers(rows, cols, terrain, cold, toxic, lava);\r\n    genOreVeins(rows, cols, terrain, cold, toxic, lava);\r\n    generateCaves(rows, cols, terrain, cold, toxic, lava);\r\n    generateResinBalls(rows, cols, terrain, cold, toxic, lava);\r\n    generateSurfaceResin(rows, cols, terrain);\r\n    let crys = generateCrystals(rows, cols, terrain, cold, toxic, lava);\r\n    //generateLPTs(rows, cols, terrain);\r\n    buildImage(elem, rows, cols, terrain);\r\n    for (var i = 0; i < crys.length; i++) {\r\n        let cry = crys[i];\r\n        let r = 0;\r\n        let g = 0;\r\n        let b = 0;\r\n        switch (cry.type) {\r\n            case \"diamond\":\r\n                r = 224;\r\n                g = 234;\r\n                b = 240;\r\n                break;\r\n            case \"emerald\":\r\n                r = 78;\r\n                g = 221;\r\n                break;\r\n            case \"ruby\":\r\n                r = 229;\r\n                g = 19;\r\n                break;\r\n            case \"sapphire\":\r\n                r = 36;\r\n                g = 87;\r\n                b = 242;\r\n                break;\r\n            case \"topaz\":\r\n                r = 245;\r\n                g = 195;\r\n                b = 67;\r\n                break;\r\n            case \"sugalite\":\r\n                r = 195;\r\n                g = 22;\r\n                b = 229;\r\n                break;\r\n        }\r\n        generateCrystalGlow(elem, cry.x, cry.y, r, g, b);\r\n    }\r\n    let tag = \"background-content\";\r\n    let container = document.getElementById(tag);\r\n    if (container == null) {\r\n        container = document.createElement(\"div\");\r\n        container.id = tag;\r\n        console.log(\"Injecting background element.\");\r\n        document.body.prepend(container);\r\n    }\r\n    while (container.firstChild) {\r\n        container.removeChild(container.firstChild);\r\n    }\r\n    //console.log(elem);\r\n    container.appendChild(elem);\r\n}\r\nwindow.addEventListener('resize', debounce(setPageBackground, 250, { isImmediate: true }));\r\n","let root = {};\r\nexport const date = new Date(); //new Date(\"December 16, 2016 11:13:00\");//\r\nexport const time = date.getSeconds();\r\nexport const month = date.getMonth();\r\nexport const day = date.getDate();\r\nexport const xmas = month == 11 || (month == 0 && day <= 10); //between dec 1 and jan 10\r\nexport const hallow = month == 9 && day >= 10; //between oct 10 and oct 31\t\r\nexport const viskey = 'visibility';\r\nexport const visval = 'visible';\r\nexport const xkey = 'x';\r\nexport const ykey = 'y';\r\nexport const hkey = 'height';\r\nexport const wkey = 'width';\r\nlet tileWidthNum = -1;\r\nlet tileHeightNum = -1;\r\nlet tileWidth;\r\nlet tileHeight;\r\nlet imagePaths = {};\r\nexport function absDiff(a, b) {\r\n    return Math.abs(Math.abs(a) - Math.abs(b));\r\n}\r\nexport function getImageRoot(folderName) {\r\n    if (root[folderName] == null || typeof (root[folderName]) == \"undefined\") {\r\n        var ret = \"images/\" + folderName + \"/\";\r\n        var url = window.location.href;\r\n        //console.log(url);\r\n        var idx = url.indexOf(\"sitecore\");\r\n        url = url.substring(idx + 9);\r\n        //console.log(url);\r\n        var levels = url.split(\"/\").length - 1;\r\n        for (var i = 0; i < levels; i++)\r\n            ret = \"../\" + ret;\r\n        root[folderName] = ret;\r\n        //console.log(\"Calculated root \"+root[folderName]);\r\n    }\r\n    return root[folderName];\r\n}\r\nexport function getRandomBetween(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\nexport function getRandomDecimalBetween(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\nexport function getOrCreateImgPath(img, folder) {\r\n    if (imagePaths[img] == null) {\r\n        imagePaths[img] = getImageRoot(folder) + img + \".png\";\r\n        //console.log(\"Computed image path '\"+imagePaths[img]+\"' for image '\"+img+\"'\");\r\n    }\r\n    return imagePaths[img];\r\n}\r\nexport function getTileWidth(iw) {\r\n    if (tileWidthNum != iw) {\r\n        tileWidthNum = iw;\r\n        tileWidth = tileWidthNum.toString();\r\n    }\r\n    return tileWidth;\r\n}\r\nexport function getTileHeight(ih) {\r\n    if (tileHeightNum != ih) {\r\n        tileHeightNum = ih;\r\n        tileHeight = tileHeightNum.toString();\r\n    }\r\n    return tileHeight;\r\n}\r\nexport function getArrayIndex(cols, x, y) {\r\n    return x + y * cols;\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://sitecore/./navbar-scroll-indicator_rawscript.ts"],"names":["applyHooks","menus","document","getElementsByClassName","k","length","root","dataset","processedNavHints","observer","IntersectionObserver","handleNavEntryVisibilityChange","threshold","entries","i","entry","observe","dx","dy","insetH","insetV","createNavScroller","addEventListener","e","updateHints","processVisibilityChanges","pane","list","elem","style","top","scrollTop","clientHeight","Number","parseFloat","baseY","parent","flag","visible","isIntersecting","target","parentNode","override","sup","sdown","addScrollIndicators","seek","arrow","hide","innerHTML","display","fading","opacity","dir","x","y","createElement","className","classList","add","left","toString","appendChild"],"mappings":"6IAGe,SAASA,IAEpB,IADA,IAAIC,EAAQC,SAASC,uBAAuB,mBACnCC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAAK,CACnC,IAAIE,EAAOL,EAAMG,GACjB,GAAsC,QAAlCE,EAAKC,QAAQC,kBACb,SACJF,EAAKC,QAAQC,kBAAoB,OACjC,IAAIC,EAAW,IAAIC,qBAAqBC,EAAgC,CAAEC,UAAW,IAAMN,KAAMA,IAEjG,IADA,IAAIO,EAAUP,EAAKH,uBAAuB,iBACjCW,EAAI,EAAGA,EAAID,EAAQR,OAAQS,IAAK,CACrC,IAAIC,EAAQF,EAAQC,GAkBpBL,EAASO,QAAQD,GAErB,IAAIE,GAAM,EACNC,GAAM,EACNC,EAAS,GACTC,EAAS,EACbC,EAAkBf,EAAM,KAAMa,EAASF,EAAIG,EAASF,GACpDG,EAAkBf,EAAM,KAAM,IAAMa,EAASF,EAAIG,EAASF,GAC1DG,EAAkBf,EAAM,OAAQa,EAASF,EAAI,IAAMG,EAASF,GAC5DG,EAAkBf,EAAM,OAAQ,IAAMa,EAASF,EAAI,IAAMG,EAASF,GAClEZ,EAAKgB,iBAAiB,UAAU,SAAUC,GAAKC,EAAYlB,MAC3DmB,EAAyBnB,EAAM,KAGvC,SAASkB,EAAYE,GAEjB,IADA,IAAIC,EAAOD,EAAKvB,uBAAuB,gBAC9BW,EAAI,EAAGA,EAAIa,EAAKtB,OAAQS,IAAK,CAClC,IAAIc,EAAOD,EAAKb,GAChBc,EAAKC,MAAMC,IAAOJ,EAAKK,UAAYL,EAAKM,aAAe,IAAMC,OAAOC,WAAWN,EAAKrB,QAAQ4B,OAAU,MAG9G,SAASxB,EAA+BE,GACpC,IAAIuB,EAAS,KACTC,GAAO,EACX,IAAK,IAAIvB,EAAI,EAAGA,EAAID,EAAQR,OAAQS,IAAK,CACrC,IAAIwB,EAAUzB,EAAQC,GAAGyB,eACzB1B,EAAQC,GAAG0B,OAAOjC,QAAQ+B,QAAUA,EAAU,OAAS,QACvDF,EAASvB,EAAQC,GAAG0B,OAAOC,WAC3BJ,IAASA,EAAOC,GAMpBF,EAAO7B,QAAQ+B,QAAUD,EAAO,OAAS,QACzCZ,EAAyBW,GAE7B,SAASX,EAAyBW,EAAQM,EAAW,MACjD,IAAIf,EAAOS,EAAOjC,uBAAuB,iBAqBrCwC,EAAiC,QAA3BhB,EAAK,GAAGpB,QAAQ+B,QAzFnB,yCAyF4C,KAC/CM,EAAiD,QAAzCjB,EAAKA,EAAKtB,OAAS,GAAGE,QAAQ+B,QAzFjC,2CAyF4D,KACrD,MAAZI,IACAC,EAAMD,EACNE,EAAQF,GAEZG,EAAoBT,EAAQ,kBAAmBO,GAC/CE,EAAoBT,EAAQ,oBAAqBQ,GAErD,SAASC,EAAoBnB,EAAMoB,EAAMC,GAGrC,IADA,IAAIpB,EAAOD,EAAKvB,uBAAuB2C,GAC9BhC,EAAI,EAAGA,EAAIa,EAAKtB,OAAQS,IAAK,CAClC,IAAIc,EAAOD,EAAKb,GACZkC,EAAyB,IAAlBpB,EAAKqB,WAA4B,MAATF,EACtB,MAATA,IACAnB,EAAKC,MAAMqB,QAAU,QACrBtB,EAAKqB,UAAYF,EACjBnB,EAAKrB,QAAQ4C,OAAS,SAEtBH,IACApB,EAAKrB,QAAQ4C,OAAS,QACtB,QAAYvB,EAAM,KAAK,SAAUA,GAC7B,MAA8B,QAAvBA,EAAKrB,QAAQ4C,UACrB,SAAUvB,GACTA,EAAKC,MAAMqB,QAAU,OACrBtB,EAAKC,MAAMuB,QAAU,IACrBxB,EAAKqB,UAAY,GACjBrB,EAAKrB,QAAQ4C,OAAS,aAKtC,SAAS9B,EAAkBK,EAAM2B,EAAKC,EAAGC,GACrC,IAAI3B,EAAO1B,SAASsD,cAAc,OAQlC,OAPA5B,EAAK6B,UAAY,gBAAkBJ,EACnCzB,EAAK8B,UAAUC,IAAI,gBACnB/B,EAAKC,MAAM+B,KAAON,EAAEO,WAAa,IACjCjC,EAAKC,MAAMC,IAAMyB,EAAEM,WAAa,IAChCjC,EAAKrB,QAAQ4B,MAAQoB,EAAEM,WAEvBnC,EAAKoC,YAAYlC,GACVA","file":"821.bundle.js","sourcesContent":["import { fadeElement } from \"./library\";\r\nconst up = '<i class=\"fas fa-angle-double-up\"></i>';\r\nconst down = '<i class=\"fas fa-angle-double-down\"></i>';\r\nexport default function applyHooks() {\r\n    var menus = document.getElementsByClassName(\"navdrop-content\");\r\n    for (var k = 0; k < menus.length; k++) {\r\n        let root = menus[k];\r\n        if (root.dataset.processedNavHints == \"true\")\r\n            continue;\r\n        root.dataset.processedNavHints = \"true\";\r\n        let observer = new IntersectionObserver(handleNavEntryVisibilityChange, { threshold: 0.75, root: root });\r\n        var entries = root.getElementsByClassName(\"navdrop-entry\");\r\n        for (var i = 0; i < entries.length; i++) {\r\n            let entry = entries[i]; /*\r\n            let label = entry.innerHTML;\r\n            let span = document.createElement(\"div\");\r\n            span.className = \"navdrop-entry-content\";\r\n            let pre = createNavScroller();\r\n            let post = createNavScroller();\r\n            span.appendChild(pre);\r\n            let content = document.createElement(\"div\");\r\n            content.innerHTML = label;\r\n            content.className = \"navdrop-entry-text:hover\";\r\n            span.appendChild(content);\r\n            span.appendChild(post);\r\n            entry.text = \"\";\r\n            entry.appendChild(span);*/\r\n            //console.log(label);\r\n            //console.log(content.outerHTML);\r\n            //console.log(span.outerHTML);\r\n            //console.log(\"Added nav scroll hints to \"+label+\": \"+entry.outerHTML);\r\n            observer.observe(entry);\r\n        }\r\n        let dx = -5;\r\n        let dy = -2;\r\n        let insetH = 10;\r\n        let insetV = 3;\r\n        createNavScroller(root, \"up\", insetH + dx, insetV + dy);\r\n        createNavScroller(root, \"up\", 100 - insetH + dx, insetV + dy);\r\n        createNavScroller(root, \"down\", insetH + dx, 100 - insetV + dy);\r\n        createNavScroller(root, \"down\", 100 - insetH + dx, 100 - insetV + dy);\r\n        root.addEventListener(\"scroll\", function (e) { updateHints(root); });\r\n        processVisibilityChanges(root, \"\");\r\n    }\r\n}\r\nfunction updateHints(pane) {\r\n    var list = pane.getElementsByClassName(\"nav-scroller\");\r\n    for (var i = 0; i < list.length; i++) {\r\n        let elem = list[i];\r\n        elem.style.top = (pane.scrollTop + pane.clientHeight / 100 * Number.parseFloat(elem.dataset.baseY)) + \"px\"; //\"calc(\"+pane.scrollTop+\"px+\"+elem.dataset.baseY+\"%)\";\r\n    }\r\n}\r\nfunction handleNavEntryVisibilityChange(entries) {\r\n    let parent = null;\r\n    let flag = false;\r\n    for (var i = 0; i < entries.length; i++) {\r\n        let visible = entries[i].isIntersecting;\r\n        entries[i].target.dataset.visible = visible ? \"true\" : \"false\";\r\n        parent = entries[i].target.parentNode;\r\n        flag || (flag = visible);\r\n        //console.log(entries[i].target+\" became \"+(visible ? \"\": \"in\")+\"visible\");\r\n        //let prev = entries[i].target.previousSibling;\r\n        //let next = entries[i].target.nextSibling;\r\n    }\r\n    //console.log(\"Detected visibility changes in \"+parent);\r\n    parent.dataset.visible = flag ? \"true\" : \"false\";\r\n    processVisibilityChanges(parent);\r\n}\r\nfunction processVisibilityChanges(parent, override = null) {\r\n    let list = parent.getElementsByClassName(\"navdrop-entry\"); /*\r\n            for (var i = 0; i < list.length; i++) {\r\n                let entry = list[i] as HTMLElement;\r\n                let prev = i > 0 ? list[i-1] as HTMLElement : null;\r\n                let next = i < list.length-1 ? list[i+1] as HTMLElement : null;\r\n                //console.log(\"Checking \"+prev?.outerHTML+\" > \"+entry.outerHTML+\" > \"+next?.outerHTML);\r\n                if (prev != null && entry.dataset.visible == \"true\" && prev.dataset.visible != \"true\") {\r\n                //\taddScrollIndicator(entry, up);\r\n                }\r\n                else if ((prev == null || prev.dataset.visible == \"true\") && entry.dataset.hint == up) {\r\n                    addScrollIndicator(entry, null);\r\n                }\r\n                \r\n                if (next != null && entry.dataset.visible == \"true\" && next.dataset.visible != \"true\") {\r\n                    //addScrollIndicator(entry, down);\r\n                }\r\n                else if ((next == null || next.dataset.visible == \"true\") && entry.dataset.hint == down) {\r\n                    addScrollIndicator(entry, null);\r\n                }\r\n            }*/\r\n    //addScrollIndicator(parent, null);\r\n    let sup = list[0].dataset.visible != \"true\" ? up : null;\r\n    let sdown = list[list.length - 1].dataset.visible != \"true\" ? down : null;\r\n    if (override != null) {\r\n        sup = override;\r\n        sdown = override;\r\n    }\r\n    addScrollIndicators(parent, \"nav-scroller-up\", sup);\r\n    addScrollIndicators(parent, \"nav-scroller-down\", sdown);\r\n}\r\nfunction addScrollIndicators(pane, seek, arrow) {\r\n    //console.log(\"Setting \"+seek+\" to \"+arrow+\" in \"+pane.previousElementSibling?.innerHTML)\r\n    var list = pane.getElementsByClassName(seek);\r\n    for (var i = 0; i < list.length; i++) {\r\n        let elem = list[i];\r\n        let hide = elem.innerHTML != \"\" && arrow == null;\r\n        if (arrow != null) {\r\n            elem.style.display = \"block\";\r\n            elem.innerHTML = arrow;\r\n            elem.dataset.fading = \"false\";\r\n        }\r\n        if (hide) {\r\n            elem.dataset.fading = \"true\";\r\n            fadeElement(elem, 250, function (elem) {\r\n                return elem.dataset.fading == \"true\";\r\n            }, function (elem) {\r\n                elem.style.display = \"none\";\r\n                elem.style.opacity = \"1\";\r\n                elem.innerHTML = \"\";\r\n                elem.dataset.fading = \"false\";\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction createNavScroller(pane, dir, x, y) {\r\n    let elem = document.createElement(\"div\");\r\n    elem.className = \"nav-scroller-\" + dir;\r\n    elem.classList.add(\"nav-scroller\");\r\n    elem.style.left = x.toString() + \"%\";\r\n    elem.style.top = y.toString() + \"%\";\r\n    elem.dataset.baseY = y.toString();\r\n    //pane.style.position = \"relative\";\r\n    pane.appendChild(elem);\r\n    return elem;\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://sitecore/./node_modules/ts-debounce/dist/src/index.esm.js","webpack://sitecore/./minecraft/backgroundgen.ts"],"names":["r","e","n","i","t","o","a","isImmediate","u","callback","c","maxWait","v","Date","now","l","f","d","slice","call","arguments","this","Promise","clearTimeout","setTimeout","apply","forEach","resolve","push","reject","cancel","addImageToRow","elem","img","tile","document","createElement","className","appendChild","getDarkOverlay","cols","blocks","k","isTransparent","getRandomRawGenBlockAt","x","y","rows","skylim","Math","max","sin","cos","random","isWaterReplaceable","block","createWaterSource","terrain","idx","canSpread","idx2","idx3","modifyImageLocational","idxu","genOreVein","ore","s","startsWith","getOreVeinSize","rx","ry","mx","floor","my","px","min","py","ms","slopeX","slopeY","di","dk","dx","dy","getRandomRockType","list","length","getRandomOreType","generateTreeAt","sky","treeCtr","yCtr","spruce","h","birch","leaf","console","log","generatePylonAt","pylonCtr","top","setPageBackground","body","html","documentElement","rh","offsetHeight","clientHeight","window","innerHeight","rw","innerWidth","clientWidth","tag","container","getElementById","ceil","Array","minSky","slope","skyH","lakeCtr","idxl","idxr","idxb","flag","count","plant","rr","generateSurface","w","bk","abs","shafts","facing","woff","twoSpawners","spawnerCol","generateStructures","generateCaves","veins","genRockVeins","genOreVeins","genGravelDirt","idxd","cleanFloatingBlocks","lavalevel","applyLiquids","id","prepend","firstChild","removeChild","style","width","toString","height","position","row","add","dark","buildImage","addEventListener"],"mappings":"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","file":"162.bundle.js","sourcesContent":["function r(r,e,n){var i,t,o;void 0===e&&(e=50),void 0===n&&(n={});var a=null!=(i=n.isImmediate)&&i,u=null!=(t=n.callback)&&t,c=n.maxWait,v=Date.now(),l=[];function f(){if(void 0!==c){var r=Date.now()-v;if(r+e>=c)return c-r}return e}var d=function(){var e=[].slice.call(arguments),n=this;return new Promise(function(i,t){var c=a&&void 0===o;if(void 0!==o&&clearTimeout(o),o=setTimeout(function(){if(o=void 0,v=Date.now(),!a){var i=r.apply(n,e);u&&u(i),l.forEach(function(r){return(0,r.resolve)(i)}),l=[]}},f()),c){var d=r.apply(n,e);return u&&u(d),i(d)}l.push({resolve:i,reject:t})})};return d.cancel=function(r){void 0!==o&&clearTimeout(o),l.forEach(function(e){return(0,e.reject)(r)}),l=[]},d}export{r as debounce};\n//# sourceMappingURL=index.esm.js.map\n","const SCALE = 2;\r\nimport { debounce } from \"ts-debounce\";\r\nimport { time, xmas, hallow, getRandomBetween, getRandomDecimalBetween, getArrayIndex, fitBCG, isDarkModeEnabled } from '../library';\r\nimport { isPhone } from '../browser';\r\nfunction addImageToRow(elem, img) {\r\n    let tile = document.createElement('div');\r\n    tile.className = \"tile-minecraft-\" + img;\r\n    elem.appendChild(tile);\r\n    return tile;\r\n}\r\nfunction buildImage(elem, rows, cols, terrain) {\r\n    var w = 16 * SCALE;\r\n    var h = 16 * SCALE;\r\n    var x = 0;\r\n    var y = 0;\r\n    for (var k = 0; k < rows; k++) {\r\n        x = 0;\r\n        let row = document.createElement(\"div\");\r\n        for (var i = 0; i < cols; i++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            var img = terrain[idx];\r\n            //console.log(\"Got \"+img+\" @ \"+i+\", \"+k);\r\n            img = modifyImageLocational(rows, cols, terrain, i, k, idx, img);\r\n            let add = row;\r\n            if (isTransparent(img))\r\n                add = addImageToRow(row, \"cave\");\r\n            if (img != \"air\") {\r\n                add = addImageToRow(add, img);\r\n            }\r\n            if (isDarkModeEnabled()) {\r\n                let dark = getDarkOverlay(img, cols, terrain, i, k);\r\n                if (dark != \"air\")\r\n                    add = addImageToRow(add, dark);\r\n                //if (img.includes(\"crystal\"))\r\n                //\tadd = addImageToRow(add, img+\"_glow\");\r\n            }\r\n            x += w;\r\n        }\r\n        elem.appendChild(row);\r\n        y += h;\r\n    }\r\n    fitBCG(elem, SCALE);\r\n}\r\nfunction getDarkOverlay(img, cols, blocks, i, k) {\r\n    switch (img) {\r\n        case \"mob_spawner\":\r\n            return \"dark_mob_spawner\";\r\n        case \"crystal_green\":\r\n            return \"dark_crystal_green\";\r\n        case \"crystal_white\":\r\n            return \"dark_crystal_white\";\r\n        case \"crystal_purple\":\r\n            return \"dark_crystal_purple\";\r\n        case \"redstone_ore\":\r\n            return \"dark_redstone_ore\";\r\n        case \"fluorite\":\r\n            return \"dark_fluorite\";\r\n        case \"lava\":\r\n            return \"air\";\r\n        default:\r\n            return blocks[getArrayIndex(cols, i, k + 1)] == \"lava\" ? \"dark_weak\" : \"dark\";\r\n    }\r\n}\r\nfunction isTransparent(img) {\r\n    switch (img) {\r\n        case \"air\":\r\n        case \"mob_spawner\":\r\n        case \"web\":\r\n        case \"crystal_purple\":\r\n        case \"crystal_green\":\r\n        case \"crystal_white\":\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRandomRawGenBlockAt(x, y, rows, skylim) {\r\n    if (y == 0) {\r\n        return \"grass_side\";\r\n    }\r\n    else if (y <= 4) {\r\n        var t = Math.max(1, 3 + Math.sin(time + x * 0.873) + Math.cos(time * 1.8734 + x * 0.7624));\r\n        if (y <= t)\r\n            return \"dirt\";\r\n    }\r\n    else if (y > rows - 4 - skylim) {\r\n        var layer = rows - y - skylim;\r\n        if (layer <= Math.random() * 5) {\r\n            return \"bedrock\";\r\n        }\r\n    }\r\n    return \"stone\";\r\n}\r\nfunction isWaterReplaceable(block) {\r\n    return block == \"air\" || block == \"cave\" || block == \"water\" || block == \"web\";\r\n}\r\nfunction createWaterSource(rows, cols, terrain, idx, x, y, canSpread) {\r\n    terrain[idx] = \"water\";\r\n    var idx2 = getArrayIndex(cols, x, y + 1);\r\n    if (terrain[idx2] == \"lava\") {\r\n        terrain[idx2] = \"obsidian\";\r\n    }\r\n    if (isWaterReplaceable(terrain[idx2])) {\r\n        createWaterSource(rows, cols, terrain, idx2, x, y + 1, true);\r\n    }\r\n    else if (canSpread) {\r\n        var flow = 2;\r\n        for (var i = 0; i <= flow; i++) {\r\n            var idx3 = getArrayIndex(cols, x + i, y);\r\n            //console.log(\"Spreading right into \"+terrain[idx3]);\r\n            if (isWaterReplaceable(terrain[idx3])) {\r\n                createWaterSource(rows, cols, terrain, idx3, x + i, y, false);\r\n                if (isWaterReplaceable(terrain[idx3 + cols])) {\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        for (var i = 0; i <= flow; i++) {\r\n            var idx3 = getArrayIndex(cols, x - i, y);\r\n            //console.log(\"Spreading left into \"+terrain[idx3]);\r\n            if (isWaterReplaceable(terrain[idx3])) {\r\n                createWaterSource(rows, cols, terrain, idx3, x - i, y, false);\r\n                if (isWaterReplaceable(terrain[idx3 + cols])) {\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction applyLiquids(rows, cols, terrain) {\r\n    var lavalevel = Math.floor(rows * 0.8) - 1;\r\n    for (var k = lavalevel; k < rows; k++) {\r\n        for (var i = 0; i < cols; i++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            if (terrain[idx] == \"cave\")\r\n                terrain[idx] = \"lava\";\r\n        }\r\n    }\r\n    for (var k = 0; k <= lavalevel + 1; k++) {\r\n        for (var i = 0; i < cols; i++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            if (isWaterReplaceable(terrain[idx]) && Math.random() < 0.02) {\r\n                createWaterSource(rows, cols, terrain, idx, i, k, true);\r\n                //return;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction cleanFloatingBlocks(rows, cols, terrain) {\r\n    for (var k = 0; k < rows; k++) {\r\n        for (var i = 0; i < cols; i++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            var idxu = getArrayIndex(cols, i, k - 1);\r\n            var idxd = getArrayIndex(cols, i, k + 1);\r\n            var idxl = getArrayIndex(cols, i - 1, k);\r\n            var idxr = getArrayIndex(cols, i + 1, k);\r\n            if (terrain[idx] != \"cave\" && terrain[idxu] == \"cave\" && terrain[idxd] == \"cave\" && terrain[idxl] == \"cave\" && terrain[idxr] == \"cave\") {\r\n                terrain[idx] = \"cave\";\r\n                //console.log(\"Found floater at \"+i+\", \"+k);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction modifyImageLocational(rows, cols, terrain, x, y, idx, img) {\r\n    if (img == \"grass_side\") {\r\n        var idxu = getArrayIndex(cols, x, y - 1);\r\n        if (terrain[idxu] != \"sky\" && !isTransparent(terrain[idxu]))\r\n            img = \"dirt\";\r\n    }\r\n    if (xmas) {\r\n        if (img == \"grass_side\")\r\n            img = \"grass_side_xmas\";\r\n        if (img == \"crystalcol\")\r\n            img = \"crystalcol_xmas\";\r\n        if (img == \"tallgrass\")\r\n            img = \"tallgrass_xmas\";\r\n    }\r\n    if (img == \"tallgrass\" && hallow && Math.random() < 0.33)\r\n        img = \"pumpkin\";\r\n    if (Math.random() < 0.04 && img == \"cave\" && terrain[idx + cols] == \"stone\") {\r\n        var f = Math.random();\r\n        if (f < 0.33)\r\n            img = \"crystal_purple\";\r\n        else if (f < 0.67)\r\n            img = \"crystal_white\";\r\n        else\r\n            img = \"crystal_green\";\r\n    }\r\n    return img;\r\n}\r\nfunction getOreVeinSize(ore) {\r\n    if (ore.startsWith(\"rock_\"))\r\n        return [2.25, 4.5];\r\n    switch (ore) {\r\n        case \"diamond_ore\":\r\n        case \"lapis_ore\":\r\n        case \"calcite\":\r\n            return [0.5, 1.5];\r\n        case \"iron_ore\":\r\n        case \"gold_ore\":\r\n        case \"copper_ore\":\r\n        case \"tin_ore\":\r\n        case \"nickel_ore\":\r\n        case \"cadmium\":\r\n        case \"indium\":\r\n            return [1.5, 3];\r\n        case \"redstone_ore\":\r\n        case \"coal_ore\":\r\n        case \"fluorite\":\r\n        case \"magnetite\":\r\n            return [2, 3.5];\r\n        case \"dirt\":\r\n        case \"gravel\":\r\n            return [2.5, 4];\r\n        case \"cave\":\r\n        case \"air\":\r\n            return [2.5, 5];\r\n        default:\r\n            return [0, 0];\r\n    }\r\n}\r\nfunction genOreVein(rows, cols, terrain, x, y, ore) {\r\n    var s = getOreVeinSize(ore);\r\n    //s[0] = 1;\r\n    //s[1] = 9;\r\n    var rx = getRandomDecimalBetween(s[0], s[1]);\r\n    var ry = getRandomDecimalBetween(s[0], s[1]);\r\n    var mx = Math.max(0, Math.floor(x - rx));\r\n    var my = Math.max(0, Math.floor(y - ry));\r\n    var px = Math.min(cols - 1, Math.floor(x + rx));\r\n    var py = Math.min(rows - 1, Math.floor(y + ry));\r\n    var ms = 0.75;\r\n    var slopeX = getRandomDecimalBetween(-ms, ms);\r\n    var slopeY = getRandomDecimalBetween(-ms, ms);\r\n    //console.log(\"Generated ore type \"+ore+\" @ \"+x+\", \"+y+\" with sizes \"+rx+\", \"+ry+\" to range \"+mx+\"->\"+px+\"; \"+my+\"->\"+py+\"; slopes are \"+slopeX+\", \"+slopeY);\r\n    for (var i = mx; i <= px; i++) {\r\n        for (var k = my; k <= py; k++) {\r\n            var di = i - x;\r\n            var dk = k - y;\r\n            if (di * di + dk * dk <= rx * ry + 0.5) {\r\n                var dx = i + Math.floor(slopeX * dk);\r\n                var dy = k + Math.floor(slopeY * di);\r\n                var idx = getArrayIndex(cols, dx, dy);\r\n                if (terrain[idx] == null || terrain[idx] == \"stone\" || terrain[idx].startsWith(\"rock_\") || (terrain[idx] == \"cobblestone\" && ore == \"cave\"))\r\n                    terrain[idx] = ore;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction getRandomRockType(rows, y) {\r\n    var f = y / rows;\r\n    var list = [\"granite\", \"hornfel\", \"quartz\"];\r\n    if (f < 0.5) {\r\n        list.push(\"basalt\");\r\n        list.push(\"shale\");\r\n        list.push(\"limestone\");\r\n        list.push(\"sandstone\");\r\n    }\r\n    if (f < 0.75 && f > 0.25) {\r\n        list.push(\"slate\");\r\n        list.push(\"gneiss\");\r\n        list.push(\"granulite\");\r\n        list.push(\"schist\");\r\n    }\r\n    if (f > 0.5) {\r\n        list.push(\"marble\");\r\n        list.push(\"peridotite\");\r\n    }\r\n    if (f > 0.75) {\r\n        list.push(\"pumice\");\r\n        list.push(\"onyx\");\r\n        list.push(\"migmatite\");\r\n    }\r\n    return list[Math.floor(Math.random() * list.length)];\r\n}\r\nfunction getRandomOreType(rows, y) {\r\n    var f = y / rows;\r\n    var list = [\"coal_ore\"];\r\n    if (f > 0.2) {\r\n        list.push(\"iron_ore\");\r\n    }\r\n    if (f > 0.5) {\r\n        list.push(\"gold_ore\");\r\n        list.push(\"lapis_ore\");\r\n    }\r\n    if (f > 0.75) {\r\n        list.push(\"redstone_ore\");\r\n        list.push(\"diamond_ore\");\r\n        list.push(\"emerald_ore\");\r\n        list.push(\"cadmium\");\r\n        list.push(\"indium\");\r\n    }\r\n    if (f < 0.2) {\r\n        list.push(\"magnetite\");\r\n    }\r\n    if (f < 0.4) {\r\n        list.push(\"fluorite\");\r\n    }\r\n    if (f > 0.15 && f < 0.35) {\r\n        list.push(\"calcite\");\r\n    }\r\n    if (f > 0.1 && f < 0.5) {\r\n        //list.push(\"copper_ore\");\r\n        //list.push(\"tin_ore\");\r\n    }\r\n    if (f > 0.4 && f < 0.75) {\r\n        //list.push(\"nickel_ore\");\r\n    }\r\n    return list[Math.floor(Math.random() * list.length)];\r\n}\r\nfunction genOreVeins(rows, cols, terrain) {\r\n    var veins = rows * cols / 56;\r\n    //veins = 1;\r\n    for (var i = 0; i < veins; i++) {\r\n        var x = Math.floor(Math.random() * cols);\r\n        var y = Math.floor(Math.random() * rows);\r\n        var ore = getRandomOreType(rows, y);\r\n        genOreVein(rows, cols, terrain, x, y, ore);\r\n        //console.log(\"Generated \"+ore+\" at \"+x+\", \"+y);\r\n    }\r\n}\r\nfunction genRockVeins(rows, cols, terrain) {\r\n    var veins = rows * cols / 64;\r\n    //veins = 1;\r\n    for (var i = 0; i < veins; i++) {\r\n        var x = Math.floor(Math.random() * cols);\r\n        var y = Math.floor(Math.random() * rows);\r\n        var ore = \"rock_\" + getRandomRockType(rows, y);\r\n        genOreVein(rows, cols, terrain, x, y, ore);\r\n        //console.log(\"Generated \"+ore+\" at \"+x+\", \"+y);\r\n    }\r\n}\r\nfunction genGravelDirt(rows, cols, terrain) {\r\n    var veins = rows * cols / 150;\r\n    for (var i = 0; i < veins; i++) {\r\n        var x = Math.floor(Math.random() * cols);\r\n        var y = Math.floor(Math.random() * rows);\r\n        var ore = Math.random() < 0.5 ? \"gravel\" : \"dirt\";\r\n        genOreVein(rows, cols, terrain, x, y, ore);\r\n    }\r\n}\r\nfunction generateCaves(rows, cols, terrain) {\r\n    for (var i = 0; i < 8; i++) {\r\n        var x = getRandomBetween(0, cols);\r\n        var y = getRandomBetween(0, rows);\r\n        genOreVein(rows, cols, terrain, x, y, \"cave\");\r\n    }\r\n}\r\nfunction generateStructures(rows, cols, terrain, skylim) {\r\n    if (Math.random() < 0.75) {\r\n        var x = getRandomBetween(2, cols - 2);\r\n        var y = getRandomBetween(skylim + 4, rows - 7);\r\n        console.log(\"Generating a dungeon @ \" + x + \", \" + y);\r\n        var w = Math.random() < 0.5 ? 4 : 3;\r\n        var h = Math.min(w, Math.random() < 0.5 ? 4 : 3);\r\n        for (var i = -w; i <= w; i++) {\r\n            for (var k = 0; k <= h; k++) {\r\n                var dx = x + i;\r\n                var dy = y + k;\r\n                var bk = \"cobblestone\";\r\n                if (k == h) {\r\n                    if (Math.random() < 0.75)\r\n                        bk = \"cobblestone_mossy\";\r\n                }\r\n                else if (k == h - 1 && i == 0) {\r\n                    bk = \"mob_spawner\";\r\n                }\r\n                else if (Math.abs(i) != w) {\r\n                    bk = \"air\";\r\n                }\r\n                var idx = getArrayIndex(cols, dx, dy);\r\n                terrain[idx] = bk;\r\n            }\r\n        }\r\n    }\r\n    if (Math.random() < 0.75) {\r\n        var shafts = getRandomBetween(1, 3);\r\n        console.log(\"Generating \" + shafts + \" mineshaft pieces.\");\r\n        for (var s = 0; s < shafts; s++) {\r\n            var facing = Math.random() < 0.8;\r\n            var y = getRandomBetween(skylim + 4, rows - 5);\r\n            if (facing) {\r\n                var x = getRandomBetween(1, cols - 1);\r\n                for (var i = -1; i <= 1; i++) {\r\n                    for (var k = 0; k <= 2; k++) {\r\n                        var dx = x + i;\r\n                        var dy = y + k;\r\n                        var bk = \"cave\";\r\n                        if (k == 0)\r\n                            bk = \"planks_oak\";\r\n                        else if (Math.random() < 0.4 && Math.abs(i) == 1)\r\n                            bk = \"planks_oak\";\r\n                        if (Math.random() < 0.15)\r\n                            bk = bk == \"cave\" ? \"web\" : \"web_on_wood\";\r\n                        var idx = getArrayIndex(cols, dx, dy);\r\n                        terrain[idx] = bk;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                var w = getRandomBetween(5, Math.ceil(cols / 3));\r\n                var x = getRandomBetween(w, cols - w);\r\n                var woff = getRandomBetween(0, 5);\r\n                var twoSpawners = Math.random() < 0.5;\r\n                for (var i = -w; i <= w; i++) {\r\n                    for (var k = 0; k <= 2; k++) {\r\n                        var dx = x + i;\r\n                        var dy = y + k;\r\n                        var bk = \"cave\";\r\n                        var spawnerCol = twoSpawners ? (i == 0) : (Math.abs(i) == Math.floor(w / 1.5));\r\n                        var woodCol = (i + 256) % 6 == woff;\r\n                        if (woodCol) {\r\n                            bk = \"planks_oak\";\r\n                        }\r\n                        if (k == 2 && spawnerCol) {\r\n                            bk = \"mob_spawner\";\r\n                        }\r\n                        else if (Math.random() < 0.67)\r\n                            bk = bk == \"cave\" ? \"web\" : \"web_on_wood\";\r\n                        var idx = getArrayIndex(cols, dx, dy);\r\n                        terrain[idx] = bk;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction generateSurface(rows, cols, terrain, sky) {\r\n    for (var n = 0; n < 2; n++) {\r\n        var lakeCtr = getRandomBetween(3, cols - 3);\r\n        for (var i = lakeCtr - 2; i <= lakeCtr + 2; i++) {\r\n            var idxl = getArrayIndex(cols, i - 1, sky[i]);\r\n            var idxr = getArrayIndex(cols, i + 1, sky[i]);\r\n            if ((terrain[idxl] == \"grass_side\" || terrain[idxl] == \"water\" || terrain[idxl] == \"ice\" || terrain[idxl] == \"dirt\") && (terrain[idxr] == \"grass_side\" || terrain[idxr] == \"ice\" || terrain[idxr] == \"water\" || terrain[idxr] == \"dirt\")) {\r\n                var idxb = getArrayIndex(cols, i, sky[i] + 1);\r\n                var idx = getArrayIndex(cols, i, sky[i]);\r\n                terrain[idx] = xmas ? \"ice\" : \"water\";\r\n                if (terrain[idxb] == \"dirt\")\r\n                    terrain[idxb] = \"grass_side\";\r\n            }\r\n        }\r\n    }\r\n    var flag = false;\r\n    for (var n = 0; n < 2 && !flag; n++) {\r\n        var pylonCtr = getRandomBetween(3, cols - 3);\r\n        flag = generatePylonAt(rows, cols, terrain, sky, pylonCtr);\r\n    }\r\n    var count = 0;\r\n    for (var n = 0; n < (xmas ? 8 : 4) && count < 3; n++) {\r\n        var treeCtr = getRandomBetween(3, cols - 3);\r\n        if (generateTreeAt(rows, cols, terrain, sky, treeCtr))\r\n            count++;\r\n    }\r\n    /*\r\n    if (Math.random() < 0.6) {\r\n        var burrowCtr = getRandomBetween(6, cols-6);\r\n        generateBurrowAt(rows, cols, terrain, sky, burrowCtr);\r\n    }*/\r\n    for (var i = 0; i < rows; i++) {\r\n        if (sky[i] > 0 && Math.random() < 0.6) {\r\n            var idx0 = getArrayIndex(cols, i, sky[i]);\r\n            if (terrain[idx0] == \"grass_side\") {\r\n                var idx = getArrayIndex(cols, i, sky[i] - 1);\r\n                if (terrain[idx] == \"sky\") {\r\n                    var plant = \"tallgrass\";\r\n                    var rr = Math.random();\r\n                    if (rr < 0.1)\r\n                        plant = \"flower2\";\r\n                    else if (rr < 0.25)\r\n                        plant = \"flower1\";\r\n                    terrain[idx] = plant;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction generateTreeAt(rows, cols, terrain, sky, treeCtr) {\r\n    let yCtr = sky[treeCtr];\r\n    if (yCtr <= 4)\r\n        return false;\r\n    var spruce = xmas; //Math.random() <= 0.25;\r\n    var h = Math.min(yCtr - 1, spruce ? getRandomBetween(8, 12) : getRandomBetween(4, 8));\r\n    //console.log(h);\r\n    if (h <= (spruce ? 8 : 5))\r\n        return false;\r\n    //console.log(\"Trying tree @ \"+treeCtr+\", \"+yCtr);\r\n    if (terrain[getArrayIndex(cols, treeCtr - 2, yCtr - h)] != \"sky\") {\r\n        //console.log(\"Space blocked @ \"+(treeCtr-2)+\", \"+(yCtr-h)+\": \"+terrain[getArrayIndex(cols, treeCtr-2, yCtr-h)]);\r\n        return false;\r\n    }\r\n    if (terrain[getArrayIndex(cols, treeCtr + 2, yCtr - h)] != \"sky\") {\r\n        //console.log(\"Space blocked @ \"+(treeCtr+2)+\", \"+(yCtr-h)+\": \"+terrain[getArrayIndex(cols, treeCtr+2, yCtr-h)]);\r\n        return false;\r\n    }\r\n    if (terrain[getArrayIndex(cols, treeCtr, yCtr - h)] != \"sky\") {\r\n        //console.log(\"Space blocked @ \"+(treeCtr)+\", \"+(yCtr-h)+\": \"+terrain[getArrayIndex(cols, treeCtr, yCtr-h)]);\r\n        return false;\r\n    }\r\n    if (terrain[getArrayIndex(cols, treeCtr - 2, yCtr - h + 2)] != \"sky\") {\r\n        //console.log(\"Space blocked @ \"+(treeCtr-2)+\", \"+(yCtr-h+2)+\": \"+terrain[getArrayIndex(cols, treeCtr-2, yCtr-h+2)]);\r\n        return false;\r\n    }\r\n    if (terrain[getArrayIndex(cols, treeCtr + 2, yCtr - h + 2)] != \"sky\") {\r\n        //console.log(\"Space blocked @ \"+(treeCtr+2)+\", \"+(yCtr-h+2)+\": \"+terrain[getArrayIndex(cols, treeCtr+2, yCtr-h+2)]);\r\n        return false;\r\n    }\r\n    if (spruce) {\r\n        for (var y = 0; y <= h; y++) {\r\n            var idx = getArrayIndex(cols, treeCtr, yCtr - y);\r\n            terrain[idx] = y == 0 ? \"dirt\" : \"log_spruce\";\r\n        }\r\n        var r = 2;\r\n        for (var y = Math.max(2, h - 6); y <= h; y++) {\r\n            //console.log(\"r = \"+r+\" @ y=\"+y);\r\n            for (var i = treeCtr - r; i <= treeCtr + r; i++) {\r\n                var idx = getArrayIndex(cols, i, yCtr - y);\r\n                terrain[idx] = \"leaves_spruce\";\r\n            }\r\n            r += Math.random() <= 0.5 ? 1 : 2;\r\n            if (r > 3)\r\n                r -= 3;\r\n            if (y + 1 == h - 1)\r\n                r = 1;\r\n            if (y + 1 == h)\r\n                r = 0;\r\n        }\r\n    }\r\n    else {\r\n        var birch = Math.random() <= 0.35;\r\n        var leaf = birch ? \"leaves_birch\" : \"leaves\";\r\n        for (var y = 0; y <= h; y++) {\r\n            var idx = getArrayIndex(cols, treeCtr, yCtr - y);\r\n            terrain[idx] = y == 0 ? \"dirt\" : (birch ? \"log_birch\" : \"log\");\r\n        }\r\n        for (var y = h - 3; y <= h; y++) {\r\n            var r = y >= h - 1 ? 1 : 2;\r\n            if (!birch && y == h)\r\n                r = 0;\r\n            for (var i = treeCtr - r; i <= treeCtr + r; i++) {\r\n                var idx = getArrayIndex(cols, i, yCtr - y);\r\n                terrain[idx] = leaf;\r\n            }\r\n        }\r\n    }\r\n    console.log(\"Generating tree at \" + treeCtr + \", \" + yCtr);\r\n    return true;\r\n}\r\nfunction generateBurrowAt(rows, cols, terrain, sky, burrowCtr) {\r\n    var yCtr = sky[burrowCtr];\r\n}\r\nfunction generatePylonAt(rows, cols, terrain, sky, pylonCtr) {\r\n    var yCtr = sky[pylonCtr];\r\n    if (yCtr < 7)\r\n        return false;\r\n    console.log(\"Generating pylon at \" + pylonCtr + \", \" + yCtr);\r\n    for (var i = pylonCtr - 3; i <= pylonCtr + 3; i++) {\r\n        for (var y = yCtr; y <= sky[i]; y++) {\r\n            var idx = getArrayIndex(cols, i, y);\r\n            terrain[idx] = \"crystalstone\";\r\n        }\r\n    }\r\n    for (var i = pylonCtr - 3; i <= pylonCtr + 3; i += 2) {\r\n        var edge = i == pylonCtr - 3 || i == pylonCtr + 3;\r\n        var top = edge ? 5 : 7;\r\n        for (var y = 1; y < top; y++) {\r\n            var idx = getArrayIndex(cols, i, yCtr - y);\r\n            terrain[idx] = \"crystalcol\";\r\n        }\r\n        terrain[getArrayIndex(cols, i, yCtr - top)] = \"rune\";\r\n    }\r\n    terrain[getArrayIndex(cols, pylonCtr - 2, yCtr - 3)] = \"crystalbeam\";\r\n    terrain[getArrayIndex(cols, pylonCtr + 2, yCtr - 3)] = \"crystalbeam\";\r\n    return true;\r\n}\r\nexport default function setPageBackground() {\r\n    if (isPhone)\r\n        return;\r\n    let w = 16 * SCALE;\r\n    let h = 16 * SCALE;\r\n    let x = 0;\r\n    let y = 0;\r\n    //var height = findHighestNode(0, document.documentElement.childNodes);\r\n    let body = document.body;\r\n    let html = document.documentElement;\r\n    var rh = Math.max(body.offsetHeight, html.clientHeight, html.offsetHeight, window.innerHeight, document.body.clientHeight);\r\n    var rw = Math.max(window.innerWidth, document.body.clientWidth);\r\n    let tag = \"background-content\";\r\n    let container = document.getElementById(tag);\r\n    if (container != null) {\r\n        //rh = container.offsetHeight;\r\n        //rw = container.offsetWidth;\r\n    }\r\n    //console.log(rw+\" x \"+rh);\r\n    let rows = Math.ceil(rh / h);\r\n    let cols = Math.ceil(rw / w);\r\n    let tw = cols * w;\r\n    let th = rows * h;\r\n    console.log(\"Generating MC chunk slice tileset with \" + cols + \" columns and \" + rows + \" rows from \" + rw + \" x \" + rh);\r\n    let terrain = new Array(cols * rows);\r\n    let skylim = Math.max(0, Math.min(14, Math.ceil(rows * 0.1)));\r\n    let sky = new Array(cols);\r\n    let minSky = Math.floor(skylim / 3);\r\n    let slope = getRandomDecimalBetween(-1, 1);\r\n    let skyH = getRandomDecimalBetween(minSky, skylim);\r\n    //console.log(\"Slope of \"+slope+\" from \"+skyH);\r\n    for (var i = 0; i < cols; i++) {\r\n        sky[i] = Math.floor(skyH);\r\n        //console.log(sky[i]+\" @ \"+i);\r\n        skyH += slope;\r\n        skyH = Math.max(minSky, Math.min(skylim, skyH));\r\n        if (Math.random() < 0.3 || skyH >= skylim - 1 || skyH <= minSky + 1) {\r\n            slope += getRandomDecimalBetween(-0.2, 0.2);\r\n            if (skyH >= skylim - 1)\r\n                slope = Math.min(slope, 0);\r\n            if (skyH <= minSky + 1)\r\n                slope = Math.max(slope, 0);\r\n            slope = Math.max(-1, Math.min(1, slope));\r\n            //console.log(\"Bending slope to \"+slope);\r\n        }\r\n    }\r\n    for (var i = 0; i < cols; i++) {\r\n        for (let k = 0; k < sky[i]; k++) {\r\n            let idx = getArrayIndex(cols, i, k);\r\n            terrain[idx] = \"sky\";\r\n        }\r\n    }\r\n    for (var i = 0; i < cols; i++) {\r\n        for (let k = sky[i]; k < rows; k++) {\r\n            let img = getRandomRawGenBlockAt(i, k - sky[i], rows, sky[i]);\r\n            let idx = getArrayIndex(cols, i, k);\r\n            terrain[idx] = img;\r\n        }\r\n    }\r\n    generateSurface(rows, cols, terrain, sky);\r\n    generateStructures(rows, cols, terrain, skylim);\r\n    generateCaves(rows, cols, terrain);\r\n    genRockVeins(rows, cols, terrain);\r\n    genOreVeins(rows, cols, terrain);\r\n    genGravelDirt(rows, cols, terrain);\r\n    cleanFloatingBlocks(rows, cols, terrain);\r\n    applyLiquids(rows, cols, terrain);\r\n    if (container == null) {\r\n        container = document.createElement(\"div\");\r\n        container.id = tag;\r\n        console.log(\"Injecting background element.\");\r\n        document.body.prepend(container);\r\n    }\r\n    while (container.firstChild) {\r\n        container.removeChild(container.firstChild);\r\n    }\r\n    //console.log(elem);\r\n    container.className = \"tile-layer\";\r\n    container.style.width = (rw / 2).toString() + \"px\";\r\n    container.style.height = (rh / 2).toString() + \"px\";\r\n    container.style.position = \"absolute\";\r\n    buildImage(container, rows, cols, terrain);\r\n}\r\nwindow.addEventListener('resize', debounce(setPageBackground, 100));\r\n"],"sourceRoot":""}
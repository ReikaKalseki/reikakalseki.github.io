{"version":3,"sources":["webpack://sitecore/./browser.ts","webpack://sitecore/./library.ts","webpack://sitecore/./minecraft/backgroundgen.ts"],"names":["isPhone","document","addEventListener","imgs","getElementsByClassName","length","img","par","parentNode","tagName","put","createElement","innerHTML","src","replaceChild","className","url","replace","console","log","text","i","style","width","header","navbar","getElementById","insertBefore","nextSibling","toc","removeChild","collapseOnPhone","root","date","Date","time","getSeconds","month","getMonth","day","getDate","xmas","hallow","viskey","visval","xkey","ykey","hkey","wkey","tileWidth","tileHeight","tileWidthNum","tileHeightNum","imagePaths","getRandomBetween","min","max","Math","floor","random","getRandomDecimalBetween","getOrCreateImgPath","folder","folderName","ret","window","location","href","idx","indexOf","levels","substring","split","getImageRoot","getTileWidth","iw","toString","getTileHeight","ih","getArrayIndex","cols","x","y","addImage","elem","ix","iy","svgimg","createElementNS","setAttributeNS","appendChild","isTransparent","getRandomRawGenBlockAt","rows","skylim","sin","cos","isWaterReplaceable","block","createWaterSource","terrain","canSpread","idx2","idx3","modifyImageLocational","idxu","f","genOreVein","ore","s","startsWith","getOreVeinSize","rx","ry","mx","my","px","py","ms","slopeX","slopeY","k","di","dk","dx","dy","getRandomRockType","list","push","getRandomOreType","generateTreeAt","sky","treeCtr","yCtr","spruce","h","r","birch","leaf","generatePylonAt","pylonCtr","top","setPageBackground","body","html","documentElement","height","scrollHeight","offsetHeight","clientHeight","titleImg","rh","innerHeight","rw","innerWidth","clientWidth","ceil","tw","th","Array","minSky","slope","skyH","n","lakeCtr","idxl","idxr","idxb","flag","count","plant","rr","generateSurface","w","bk","abs","shafts","facing","woff","twoSpawners","spawnerCol","generateStructures","generateCaves","veins","genRockVeins","genOreVeins","genGravelDirt","idxd","cleanFloatingBlocks","lavalevel","applyLiquids","buildImage","tag","container","id","prepend","firstChild"],"mappings":"mHAAO,MAAMA,GAEF,EA0CXC,SAASC,iBAAiB,oBAH1B,YArCA,WACI,GAAIF,EAAS,CAET,IADA,IAAIG,EAAOF,SAASG,uBAAuB,iBACpCD,EAAKE,OAAS,GAAG,CACpB,IAAIC,EAAMH,EAAK,GACXI,EAAMD,EAAIE,WAEd,GAAmB,SAAfD,EAAIE,QAAoB,CACxB,IAAIC,EAAMT,SAASU,cAAc,OACjCD,EAAIE,UAAY,cAAgBN,EAAIO,IAAM,KAAOP,EAAIO,IAAM,OAC3DN,EAAIC,WAAWM,aAAaJ,EAAKH,QAIjC,GAAqB,SAAjBA,EAAIQ,UAAsB,CAC1B,IAAIC,EAAMV,EAAIO,IAAII,QAAQ,SAAU,YACpCV,EAAIK,UAAY,cAAgBI,EAAM,KAAOA,EAAM,WAE7B,gBAAjBT,EAAIQ,UACTR,EAAIK,UAAYN,EAAIO,IAAM,OAE1BN,EAAIK,UAAY,GAExBM,QAAQC,IAAI,iBAAmBb,EAAIO,IAAM,KAG7C,IADA,IAAIO,EAAOnB,SAASG,uBAAuB,YAClCiB,EAAI,EAAGA,EAAID,EAAKf,OAAQgB,IAC7BD,EAAKC,GAAGC,MAAMC,MAAQ,MAE1B,IAAIC,EAASvB,SAASU,cAAc,OACpCa,EAAOZ,UAAY,iYACnB,IAAIa,EAASxB,SAASyB,eAAe,UACrCD,EAAOjB,WAAWmB,aAAaH,EAAQC,EAAOG,aAC9C,IAAIC,EAAM5B,SAASyB,eAAe,iBAClCG,EAAIrB,WAAWsB,YAAYD,IAI/BE,O,2KC1CJ,IAAIC,EAAO,GACJ,MAAMC,EAAO,IAAIC,KACXC,EAAOF,EAAKG,aACZC,EAAQJ,EAAKK,WACbC,EAAMN,EAAKO,UACXC,EAAgB,IAATJ,GAAyB,GAATA,GAAcE,GAAO,GAC5CG,EAAkB,GAATL,GAAcE,GAAO,GAC9BI,EAAS,aACTC,EAAS,UACTC,EAAO,IACPC,EAAO,IACPC,EAAO,SACPC,EAAO,QACpB,IAEIC,EACAC,EAHAC,GAAgB,EAChBC,GAAiB,EAGjBC,EAAa,GAoBV,SAASC,EAAiBC,EAAKC,GAClC,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAEjD,SAASK,EAAwBL,EAAKC,GACzC,OAAOC,KAAKE,UAAYH,EAAMD,GAAOA,EAElC,SAASM,EAAmBvD,EAAKwD,GAKpC,OAJuB,MAAnBT,EAAW/C,KACX+C,EAAW/C,GAxBZ,SAAsByD,GACzB,GAAwB,MAApB/B,EAAK+B,SAAoD,IAArB/B,EAAK+B,GAA6B,CAQtE,IAPA,IAAIC,EAAM,UAAYD,EAAa,IAC/B/C,EAAMiD,OAAOC,SAASC,KAEtBC,EAAMpD,EAAIqD,QAAQ,YAGlBC,GAFJtD,EAAMA,EAAIuD,UAAUH,EAAM,IAETI,MAAM,KAAKnE,OAAS,EAC5BgB,EAAI,EAAGA,EAAIiD,EAAQjD,IACxB2C,EAAM,MAAQA,EAClBhC,EAAK+B,GAAcC,EAGvB,OAAOhC,EAAK+B,GAUUU,CAAaX,GAAUxD,EAAM,QAG5C+C,EAAW/C,GAEf,SAASoE,EAAaC,GAKzB,OAJIxB,GAAgBwB,IAChBxB,EAAewB,EACf1B,EAAYE,EAAayB,YAEtB3B,EAEJ,SAAS4B,EAAcC,GAK1B,OAJI1B,GAAiB0B,IACjB1B,EAAgB0B,EAChB5B,EAAaE,EAAcwB,YAExB1B,EAEJ,SAAS6B,EAAcC,EAAMC,EAAGC,GACnC,OAAOD,EAAIC,EAAIF,I,+EC9DnB,SAASG,EAASC,EAAM9E,EAAK+E,EAAIC,EAAIX,EAAIG,GAIrC,IAAIS,EAAStF,SAASuF,gBAAgB,6BAA8B,SACpED,EAAOE,eAAe,KAAM,MAAM,QAAad,IAC/CY,EAAOE,eAAe,KAAM,MAAM,QAAcX,IAChDS,EAAOE,eAAe,+BAAgC,QAAQ,QAAmBnF,EAAK,aACtFiF,EAAOE,eAAe,KAAM,KAAMJ,EAAGT,YACrCW,EAAOE,eAAe,KAAM,KAAMH,EAAGV,YACrCW,EAAOE,eAAe,KAAM,KAAQ,MACpCL,EAAKM,YAAYH,GAuBrB,SAASI,EAAcrF,GACnB,OAAQA,GACJ,IAAK,MACL,IAAK,cACL,IAAK,MACL,IAAK,YACL,IAAK,UACL,IAAK,UACL,IAAK,iBACL,IAAK,gBACL,IAAK,gBACD,OAAO,EACX,QACI,OAAO,GAGnB,SAASsF,EAAuBX,EAAGC,EAAGW,EAAMC,GACxC,GAAS,GAALZ,EACA,MAAO,aAEN,GAAIA,GAAK,GAEV,GAAIA,GADIzB,KAAKD,IAAI,EAAG,EAAIC,KAAKsC,IAAI,KAAW,KAAJd,GAAaxB,KAAKuC,IAAW,OAAP,KAAoB,MAAJf,IAE1E,MAAO,YAEV,GAAIC,EAAIW,EAAO,EAAIC,GACRD,EAAOX,EAAIY,GACM,EAAhBrC,KAAKE,SACd,MAAO,UAGf,MAAO,QAEX,SAASsC,EAAmBC,GACxB,MAAgB,OAATA,GAA2B,QAATA,GAA4B,SAATA,GAA6B,OAATA,EAEpE,SAASC,EAAkBN,EAAMb,EAAMoB,EAAShC,EAAKa,EAAGC,EAAGmB,GACvDD,EAAQhC,GAAO,QACf,IAAIkC,GAAO,QAActB,EAAMC,EAAGC,EAAI,GAItC,GAHqB,QAAjBkB,EAAQE,KACRF,EAAQE,GAAQ,YAEhBL,EAAmBG,EAAQE,IAC3BH,EAAkBN,EAAMb,EAAMoB,EAASE,EAAMrB,EAAGC,EAAI,GAAG,QAEtD,GAAImB,EAAW,CAEhB,IADA,IACShF,EAAI,EAAGA,GADL,GAIH4E,EAAmBG,EAFnBG,GAAO,QAAcvB,EAAMC,EAAI5D,EAAG6D,OAGlCiB,EAAkBN,EAAMb,EAAMoB,EAASG,EAAMtB,EAAI5D,EAAG6D,GAAG,IACnDe,EAAmBG,EAAQG,EAAOvB,KALnB3D,KAa3B,IAASA,EAAI,EAAGA,GAdL,EAcgBA,IAAK,CAC5B,IAAIkF,EAEJ,IAAIN,EAAmBG,EAFnBG,GAAO,QAAcvB,EAAMC,EAAI5D,EAAG6D,KASlC,MALA,GADAiB,EAAkBN,EAAMb,EAAMoB,EAASG,EAAMtB,EAAI5D,EAAG6D,GAAG,GACnDe,EAAmBG,EAAQG,EAAOvB,IAClC,QA2CpB,SAASwB,EAAsBX,EAAMb,EAAMoB,EAASnB,EAAGC,EAAGd,EAAK9D,GAC3D,GAAW,cAAPA,EAAqB,CACrB,IAAImG,GAAO,QAAczB,EAAMC,EAAGC,EAAI,GACjB,OAAjBkB,EAAQK,IAAmBd,EAAcS,EAAQK,MACjDnG,EAAM,QAYd,GAVI,OACW,cAAPA,IACAA,EAAM,mBACC,cAAPA,IACAA,EAAM,mBACC,aAAPA,IACAA,EAAM,mBAEH,aAAPA,GAAsB,MAAUmD,KAAKE,SAAW,MAChDrD,EAAM,WACNmD,KAAKE,SAAW,KAAe,QAAPrD,GAAwC,SAAvB8F,EAAQhC,EAAMY,GAAkB,CACzE,IAAI0B,EAAIjD,KAAKE,SAETrD,EADAoG,EAAI,IACE,iBACDA,EAAI,IACH,gBAEA,gBAEd,OAAOpG,EAiCX,SAASqG,EAAWd,EAAMb,EAAMoB,EAASnB,EAAGC,EAAG0B,GAc3C,IAbA,IAAIC,EAhCR,SAAwBD,GACpB,GAAIA,EAAIE,WAAW,SACf,MAAO,CAAC,KAAM,KAClB,OAAQF,GACJ,IAAK,cACL,IAAK,YACL,IAAK,UACD,MAAO,CAAC,GAAK,KACjB,IAAK,WACL,IAAK,WACL,IAAK,aACL,IAAK,UACL,IAAK,aACL,IAAK,UACL,IAAK,SACD,MAAO,CAAC,IAAK,GACjB,IAAK,eACL,IAAK,WACL,IAAK,WACL,IAAK,YACD,MAAO,CAAC,EAAG,KACf,IAAK,OACL,IAAK,SACD,MAAO,CAAC,IAAK,GACjB,IAAK,OACL,IAAK,MACD,MAAO,CAAC,IAAK,GACjB,QACI,MAAO,CAAC,EAAG,IAIXG,CAAeH,GAGnBI,GAAK,QAAwBH,EAAE,GAAIA,EAAE,IACrCI,GAAK,QAAwBJ,EAAE,GAAIA,EAAE,IACrCK,EAAKzD,KAAKD,IAAI,EAAGC,KAAKC,MAAMuB,EAAI+B,IAChCG,EAAK1D,KAAKD,IAAI,EAAGC,KAAKC,MAAMwB,EAAI+B,IAChCG,EAAK3D,KAAKF,IAAIyB,EAAO,EAAGvB,KAAKC,MAAMuB,EAAI+B,IACvCK,EAAK5D,KAAKF,IAAIsC,EAAO,EAAGpC,KAAKC,MAAMwB,EAAI+B,IACvCK,EAAK,IACLC,GAAS,SAAyBD,EAAIA,GACtCE,GAAS,SAAyBF,EAAIA,GAEjCjG,EAAI6F,EAAI7F,GAAK+F,EAAI/F,IACtB,IAAK,IAAIoG,EAAIN,EAAIM,GAAKJ,EAAII,IAAK,CAC3B,IAAIC,EAAKrG,EAAI4D,EACT0C,EAAKF,EAAIvC,EACb,GAAIwC,EAAKA,EAAKC,EAAKA,GAAMX,EAAKC,EAAK,GAAK,CACpC,IAAIW,EAAKvG,EAAIoC,KAAKC,MAAM6D,EAASI,GAC7BE,EAAKJ,EAAIhE,KAAKC,MAAM8D,EAASE,GAC7BtD,GAAM,QAAcY,EAAM4C,EAAIC,IACd,MAAhBzB,EAAQhC,IAAgC,SAAhBgC,EAAQhC,IAAmBgC,EAAQhC,GAAK0C,WAAW,UAA6B,eAAhBV,EAAQhC,IAAgC,QAAPwC,KACzHR,EAAQhC,GAAOwC,KAKnC,SAASkB,EAAkBjC,EAAMX,GAC7B,IAAIwB,EAAIxB,EAAIW,EACRkC,EAAO,CAAC,UAAW,UAAW,UAsBlC,OArBIrB,EAAI,KACJqB,EAAKC,KAAK,UACVD,EAAKC,KAAK,SACVD,EAAKC,KAAK,aACVD,EAAKC,KAAK,cAEVtB,EAAI,KAAQA,EAAI,MAChBqB,EAAKC,KAAK,SACVD,EAAKC,KAAK,UACVD,EAAKC,KAAK,aACVD,EAAKC,KAAK,WAEVtB,EAAI,KACJqB,EAAKC,KAAK,UACVD,EAAKC,KAAK,eAEVtB,EAAI,MACJqB,EAAKC,KAAK,UACVD,EAAKC,KAAK,QACVD,EAAKC,KAAK,cAEPD,EAAKtE,KAAKC,MAAMD,KAAKE,SAAWoE,EAAK1H,SAEhD,SAAS4H,EAAiBpC,EAAMX,GAC5B,IAAIwB,EAAIxB,EAAIW,EACRkC,EAAO,CAAC,YA+BZ,OA9BIrB,EAAI,IACJqB,EAAKC,KAAK,YAEVtB,EAAI,KACJqB,EAAKC,KAAK,YACVD,EAAKC,KAAK,cAEVtB,EAAI,MACJqB,EAAKC,KAAK,gBACVD,EAAKC,KAAK,eACVD,EAAKC,KAAK,eACVD,EAAKC,KAAK,WACVD,EAAKC,KAAK,WAEVtB,EAAI,IACJqB,EAAKC,KAAK,aAEVtB,EAAI,IACJqB,EAAKC,KAAK,YAEVtB,EAAI,KAAQA,EAAI,KAChBqB,EAAKC,KAAK,WASPD,EAAKtE,KAAKC,MAAMD,KAAKE,SAAWoE,EAAK1H,SAwKhD,SAAS6H,EAAerC,EAAMb,EAAMoB,EAAS+B,EAAKC,GAC9C,IAAIC,EAAOF,EAAIC,GACf,GAAIC,GAAQ,EACR,OAAO,EACX,IAAIC,EAAS,KACTC,EAAI9E,KAAKF,IAAI8E,EAAO,EAAGC,GAAS,QAAiB,EAAG,KAAM,QAAiB,EAAG,IAElF,GAAIC,IAAMD,EAAS,EAAI,GACnB,OAAO,EAEX,GAA2D,OAAvDlC,GAAQ,QAAcpB,EAAMoD,EAAU,EAAGC,EAAOE,IAEhD,OAAO,EAEX,GAA2D,OAAvDnC,GAAQ,QAAcpB,EAAMoD,EAAU,EAAGC,EAAOE,IAEhD,OAAO,EAEX,GAAuD,OAAnDnC,GAAQ,QAAcpB,EAAMoD,EAASC,EAAOE,IAE5C,OAAO,EAEX,GAA+D,OAA3DnC,GAAQ,QAAcpB,EAAMoD,EAAU,EAAGC,EAAOE,EAAI,IAEpD,OAAO,EAEX,GAA+D,OAA3DnC,GAAQ,QAAcpB,EAAMoD,EAAU,EAAGC,EAAOE,EAAI,IAEpD,OAAO,EAEX,GAAID,EAAQ,CACR,IAAK,IAAIpD,EAAI,EAAGA,GAAKqD,EAAGrD,IAEpBkB,GADU,QAAcpB,EAAMoD,EAASC,EAAOnD,IAC1B,GAALA,EAAS,OAAS,aAErC,IAAIsD,EAAI,EACR,IAAStD,EAAIzB,KAAKD,IAAI,EAAG+E,EAAI,GAAIrD,GAAKqD,EAAGrD,IAAK,CAE1C,IAAK,IAAI7D,EAAI+G,EAAUI,EAAGnH,GAAK+G,EAAUI,EAAGnH,IAExC+E,GADU,QAAcpB,EAAM3D,EAAGgH,EAAOnD,IACzB,iBAEnBsD,GAAK/E,KAAKE,UAAY,GAAM,EAAI,GACxB,IACJ6E,GAAK,GACLtD,EAAI,GAAKqD,EAAI,IACbC,EAAI,GACJtD,EAAI,GAAKqD,IACTC,EAAI,QAGX,CACD,IAAIC,EAAQhF,KAAKE,UAAY,IACzB+E,EAAOD,EAAQ,eAAiB,SACpC,IAASvD,EAAI,EAAGA,GAAKqD,EAAGrD,IAEpBkB,GADU,QAAcpB,EAAMoD,EAASC,EAAOnD,IAC1B,GAALA,EAAS,OAAUuD,EAAQ,YAAc,MAE5D,IAASvD,EAAIqD,EAAI,EAAGrD,GAAKqD,EAAGrD,IAIxB,IAHIsD,EAAItD,GAAKqD,EAAI,EAAI,EAAI,EACpBE,GAASvD,GAAKqD,IACfC,EAAI,GACCnH,EAAI+G,EAAUI,EAAGnH,GAAK+G,EAAUI,EAAGnH,IAExC+E,GADU,QAAcpB,EAAM3D,EAAGgH,EAAOnD,IACzBwD,EAK3B,OADAxH,QAAQC,IAAI,sBAAwBiH,EAAU,KAAOC,IAC9C,EAKX,SAASM,EAAgB9C,EAAMb,EAAMoB,EAAS+B,EAAKS,GAC/C,IAAIP,EAAOF,EAAIS,GACf,GAAIP,EAAO,EACP,OAAO,EACXnH,QAAQC,IAAI,uBAAyByH,EAAW,KAAOP,GACvD,IAAK,IAAIhH,EAAIuH,EAAW,EAAGvH,GAAKuH,EAAW,EAAGvH,IAC1C,IAAK,IAAI6D,EAAImD,EAAMnD,GAAKiD,EAAI9G,GAAI6D,IAE5BkB,GADU,QAAcpB,EAAM3D,EAAG6D,IAClB,eAGvB,IAAS7D,EAAIuH,EAAW,EAAGvH,GAAKuH,EAAW,EAAGvH,GAAK,EAAG,CAClD,IACIwH,EADOxH,GAAKuH,EAAW,GAAKvH,GAAKuH,EAAW,EAC/B,EAAI,EACrB,IAAS1D,EAAI,EAAGA,EAAI2D,EAAK3D,IAErBkB,GADU,QAAcpB,EAAM3D,EAAGgH,EAAOnD,IACzB,aAEnBkB,GAAQ,QAAcpB,EAAM3D,EAAGgH,EAAOQ,IAAQ,OAIlD,OAFAzC,GAAQ,QAAcpB,EAAM4D,EAAW,EAAGP,EAAO,IAAM,cACvDjC,GAAQ,QAAcpB,EAAM4D,EAAW,EAAGP,EAAO,IAAM,eAChD,EAEI,SAASS,IACpB,GAAI,IACA,OACJ,IAMIC,EAAO9I,SAAS8I,KAChBC,EAAO/I,SAASgJ,gBAChBC,EAASzF,KAAKD,IAAIuF,EAAKI,aAAcJ,EAAKK,aAAcJ,EAAKK,aAAcL,EAAKG,aAAcH,EAAKI,cAAgB,GACnHE,EAAWrJ,SAASG,uBAAuB,eAAe,GAC9C,MAAZkJ,GAAoC,MAAhBA,EAASzI,KAA+B,IAAhByI,EAASzI,KAAayI,EAASzI,KAAOoD,OAAOC,SAASC,KAClG+E,GAAU,GAGVA,GAAU,GAGd,IAAIK,EAAK9F,KAAKD,IAAI0F,EAAQjF,OAAOuF,YAAavJ,SAAS8I,KAAKM,cACxDI,EAAKhG,KAAKD,IAAIS,OAAOyF,WAAYzJ,SAAS8I,KAAKY,aAE/C9D,EAAOpC,KAAKmG,KAAKL,EAlBb,IAmBJvE,EAAOvB,KAAKmG,KAAKH,EApBb,IAqBJI,EArBI,GAqBC7E,EACL8E,EArBI,GAqBCjE,EACT3E,QAAQC,IAAI,0CAA4C6D,EAAO,gBAAkBa,EAAO,SACxF,IACIT,EAAOnF,SAASuF,gBADR,6BAC+B,OAC3CJ,EAAKK,eAAe,KAAM,QAASoE,EAAGjF,YACtCQ,EAAKK,eAAe,KAAM,SAAUqE,EAAGlF,YACvC,IAAIwB,EAAU,IAAI2D,MAAM/E,EAAOa,GAC3BC,EAASrC,KAAKD,IAAI,EAAGC,KAAKF,IAAI,GAAIE,KAAKmG,KAAY,GAAP/D,KAC5CsC,EAAM,IAAI4B,MAAM/E,GAChBgF,EAASvG,KAAKC,MAAMoC,EAAS,GAC7BmE,GAAQ,SAAyB,EAAG,GACpCC,GAAO,QAAwBF,EAAQlE,GAE3C,IAAK,IAAIzE,EAAI,EAAGA,EAAI2D,EAAM3D,IACtB8G,EAAI9G,GAAKoC,KAAKC,MAAMwG,GAEpBA,GAAQD,EACRC,EAAOzG,KAAKD,IAAIwG,EAAQvG,KAAKF,IAAIuC,EAAQoE,KACrCzG,KAAKE,SAAW,IAAOuG,GAAQpE,EAAS,GAAKoE,GAAQF,EAAS,KAC9DC,IAAS,SAAyB,GAAK,IACnCC,GAAQpE,EAAS,IACjBmE,EAAQxG,KAAKF,IAAI0G,EAAO,IACxBC,GAAQF,EAAS,IACjBC,EAAQxG,KAAKD,IAAIyG,EAAO,IAC5BA,EAAQxG,KAAKD,KAAK,EAAGC,KAAKF,IAAI,EAAG0G,KAIzC,IAAS5I,EAAI,EAAGA,EAAI2D,EAAM3D,IACtB,IAAK,IAAIoG,EAAI,EAAGA,EAAIU,EAAI9G,GAAIoG,IAExBrB,GADU,QAAcpB,EAAM3D,EAAGoG,IAClB,MAGvB,IAASpG,EAAI,EAAGA,EAAI2D,EAAM3D,IACtB,IAAK,IAAIoG,EAAIU,EAAI9G,GAAIoG,EAAI5B,EAAM4B,IAAK,CAChC,IAAInH,EAAMsF,EAAuBvE,EAAGoG,EAAIU,EAAI9G,GAAIwE,EAAMsC,EAAI9G,IAE1D+E,GADU,QAAcpB,EAAM3D,EAAGoG,IAClBnH,GAnN3B,SAAyBuF,EAAMb,EAAMoB,EAAS+B,GAC1C,IAAK,IAAIgC,EAAI,EAAGA,EAAI,EAAGA,IAEnB,IADA,IAAIC,GAAU,QAAiB,EAAGpF,EAAO,GAChC3D,EAAI+I,EAAU,EAAG/I,GAAK+I,EAAU,EAAG/I,IAAK,CAC7C,IAAIgJ,GAAO,QAAcrF,EAAM3D,EAAI,EAAG8G,EAAI9G,IACtCiJ,GAAO,QAActF,EAAM3D,EAAI,EAAG8G,EAAI9G,IAC1C,KAAsB,cAAjB+E,EAAQiE,IAA0C,SAAjBjE,EAAQiE,IAAqC,OAAjBjE,EAAQiE,IAAmC,QAAjBjE,EAAQiE,IAAsC,cAAjBjE,EAAQkE,IAA0C,OAAjBlE,EAAQkE,IAAmC,SAAjBlE,EAAQkE,IAAqC,QAAjBlE,EAAQkE,IAAkB,CACtO,IAAIC,GAAO,QAAcvF,EAAM3D,EAAG8G,EAAI9G,GAAK,GAE3C+E,EADIhC,GAAM,QAAcY,EAAM3D,EAAG8G,EAAI9G,KACtB,KAAO,MAAQ,QACT,QAAjB+E,EAAQmE,KACRnE,EAAQmE,GAAQ,eAIhC,IAAIC,GAAO,EACX,IAASL,EAAI,EAAGA,EAAI,IAAMK,EAAML,IAE5BK,EAAO7B,EAAgB9C,EAAMb,EAAMoB,EAAS+B,GAD7B,QAAiB,EAAGnD,EAAO,IAG9C,IAAIyF,EAAQ,EACZ,IAASN,EAAI,EAAGA,GAAK,KAAO,EAAI,IAAMM,EAAQ,EAAGN,IAEzCjC,EAAerC,EAAMb,EAAMoB,EAAS+B,GAD1B,QAAiB,EAAGnD,EAAO,KAErCyF,IAOR,IAASpJ,EAAI,EAAGA,EAAIwE,EAAMxE,IAAK,CAEvB,IAEQ+C,EAHZ,GAAI+D,EAAI9G,GAAK,GAAKoC,KAAKE,SAAW,IAET,cAAjByC,GADO,QAAcpB,EAAM3D,EAAG8G,EAAI9G,MAGd,OAAhB+E,EADAhC,GAAM,QAAcY,EAAM3D,EAAG8G,EAAI9G,GAAK,IACf,CACvB,IAAIqJ,EAAQ,YACRC,EAAKlH,KAAKE,SACVgH,EAAK,GACLD,EAAQ,UACHC,EAAK,MACVD,EAAQ,WACZtE,EAAQhC,GAAOsG,IA2K/BE,CAAgB/E,EAAMb,EAAMoB,EAAS+B,GArSzC,SAA4BtC,EAAMb,EAAMoB,EAASN,GAC7C,GAAIrC,KAAKE,SAAW,IAAM,CACtB,IAAIsB,GAAI,QAAiB,EAAGD,EAAO,GAC/BE,GAAI,QAAiBY,EAAS,EAAGD,EAAO,GAC5C3E,QAAQC,IAAI,0BAA4B8D,EAAI,KAAOC,GAGnD,IAFA,IAAI2F,EAAIpH,KAAKE,SAAW,GAAM,EAAI,EAC9B4E,EAAI9E,KAAKF,IAAIsH,EAAGpH,KAAKE,SAAW,GAAM,EAAI,GACrCtC,GAAKwJ,EAAGxJ,GAAKwJ,EAAGxJ,IACrB,IAAK,IAAIoG,EAAI,EAAGA,GAAKc,EAAGd,IAAK,CACzB,IAAIG,EAAK3C,EAAI5D,EACTwG,EAAK3C,EAAIuC,EACTqD,EAAK,cACLrD,GAAKc,EACD9E,KAAKE,SAAW,MAChBmH,EAAK,qBAEJrD,GAAKc,EAAI,GAAU,GAALlH,EACnByJ,EAAK,cAEArH,KAAKsH,IAAI1J,IAAMwJ,IACpBC,EAAK,OAGT1E,GADU,QAAcpB,EAAM4C,EAAIC,IACnBiD,GAI3B,GAAIrH,KAAKE,SAAW,IAAM,CACtB,IAAIqH,GAAS,QAAiB,EAAG,GACjC9J,QAAQC,IAAI,cAAgB6J,EAAS,sBACrC,IAAK,IAAInE,EAAI,EAAGA,EAAImE,EAAQnE,IAAK,CAC7B,IAAIoE,EAASxH,KAAKE,SAAW,GAE7B,GADIuB,GAAI,QAAiBY,EAAS,EAAGD,EAAO,GACxCoF,EAEA,IADIhG,GAAI,QAAiB,EAAGD,EAAO,GAC1B3D,GAAK,EAAGA,GAAK,EAAGA,IACrB,IAASoG,EAAI,EAAGA,GAAK,EAAGA,IAChBG,EAAK3C,EAAI5D,EACTwG,EAAK3C,EAAIuC,EACTqD,EAAK,QACA,GAALrD,GAEKhE,KAAKE,SAAW,IAAsB,GAAfF,KAAKsH,IAAI1J,MADrCyJ,EAAK,cAGLrH,KAAKE,SAAW,MAChBmH,EAAW,QAANA,EAAe,MAAQ,eAEhC1E,GADU,QAAcpB,EAAM4C,EAAIC,IACnBiD,MAKvB,CAAID,GAAI,QAAiB,EAAGpH,KAAKmG,KAAK5E,EAAO,IACzCC,GAAI,QAAiB4F,EAAG7F,EAAO6F,GADnC,IAEIK,GAAO,QAAiB,EAAG,GAC3BC,EAAc1H,KAAKE,SAAW,GAClC,IAAStC,GAAKwJ,EAAGxJ,GAAKwJ,EAAGxJ,IACrB,IAASoG,EAAI,EAAGA,GAAK,EAAGA,IAAK,CACrBG,EAAK3C,EAAI5D,EACTwG,EAAK3C,EAAIuC,EACTqD,EAAK,OAFT,IAGIM,EAAaD,EAAoB,GAAL9J,EAAWoC,KAAKsH,IAAI1J,IAAMoC,KAAKC,MAAMmH,EAAI,MAC1DxJ,EAAI,KAAO,GAAK6J,IAE3BJ,EAAK,cAEA,GAALrD,GAAU2D,EACVN,EAAK,cAEArH,KAAKE,SAAW,MACrBmH,EAAW,QAANA,EAAe,MAAQ,eAEhC1E,GADU,QAAcpB,EAAM4C,EAAIC,IACnBiD,MA8NnCO,CAAmBxF,EAAMb,EAAMoB,EAASN,GA7S5C,SAAuBD,EAAMb,EAAMoB,GAC/B,IAAK,IAAI/E,EAAI,EAAGA,EAAI,EAAGA,IAGnBsF,EAAWd,EAAMb,EAAMoB,GAFf,QAAiB,EAAGpB,IACpB,QAAiB,EAAGa,GACU,QA0S1CyF,CAAczF,EAAMb,EAAMoB,GAlU9B,SAAsBP,EAAMb,EAAMoB,GAG9B,IAFA,IAAImF,EAAQ1F,EAAOb,EAAO,GAEjB3D,EAAI,EAAGA,EAAIkK,EAAOlK,IAAK,CAC5B,IAAI4D,EAAIxB,KAAKC,MAAMD,KAAKE,SAAWqB,GAC/BE,EAAIzB,KAAKC,MAAMD,KAAKE,SAAWkC,GAEnCc,EAAWd,EAAMb,EAAMoB,EAASnB,EAAGC,EADzB,QAAU4C,EAAkBjC,EAAMX,KA6ThDsG,CAAa3F,EAAMb,EAAMoB,GA9U7B,SAAqBP,EAAMb,EAAMoB,GAG7B,IAFA,IAAImF,EAAQ1F,EAAOb,EAAO,GAEjB3D,EAAI,EAAGA,EAAIkK,EAAOlK,IAAK,CAC5B,IAAI4D,EAAIxB,KAAKC,MAAMD,KAAKE,SAAWqB,GAC/BE,EAAIzB,KAAKC,MAAMD,KAAKE,SAAWkC,GAEnCc,EAAWd,EAAMb,EAAMoB,EAASnB,EAAGC,EADzB+C,EAAiBpC,EAAMX,KAyUrCuG,CAAY5F,EAAMb,EAAMoB,GAzT5B,SAAuBP,EAAMb,EAAMoB,GAE/B,IADA,IAAImF,EAAQ1F,EAAOb,EAAO,IACjB3D,EAAI,EAAGA,EAAIkK,EAAOlK,IAIvBsF,EAAWd,EAAMb,EAAMoB,EAHf3C,KAAKC,MAAMD,KAAKE,SAAWqB,GAC3BvB,KAAKC,MAAMD,KAAKE,SAAWkC,GACzBpC,KAAKE,SAAW,GAAM,SAAW,QAqT/C+H,CAAc7F,EAAMb,EAAMoB,GAlf9B,SAA6BP,EAAMb,EAAMoB,GACrC,IAAK,IAAIqB,EAAI,EAAGA,EAAI5B,EAAM4B,IACtB,IAAK,IAAIpG,EAAI,EAAGA,EAAI2D,EAAM3D,IAAK,CAC3B,IAAI+C,GAAM,QAAcY,EAAM3D,EAAGoG,GAC7BhB,GAAO,QAAczB,EAAM3D,EAAGoG,EAAI,GAClCkE,GAAO,QAAc3G,EAAM3D,EAAGoG,EAAI,GAClC4C,GAAO,QAAcrF,EAAM3D,EAAI,EAAGoG,GAClC6C,GAAO,QAActF,EAAM3D,EAAI,EAAGoG,GAClB,QAAhBrB,EAAQhC,IAAmC,QAAjBgC,EAAQK,IAAoC,QAAjBL,EAAQuF,IAAoC,QAAjBvF,EAAQiE,IAAoC,QAAjBjE,EAAQkE,KACnHlE,EAAQhC,GAAO,SA0e3BwH,CAAoB/F,EAAMb,EAAMoB,GAtgBpC,SAAsBP,EAAMb,EAAMoB,GAE9B,IADA,IAAIyF,EAAYpI,KAAKC,MAAa,GAAPmC,GAAc,EAChC4B,EAAIoE,EAAWpE,EAAI5B,EAAM4B,IAC9B,IAAK,IAAIpG,EAAI,EAAGA,EAAI2D,EAAM3D,IAEF,QAAhB+E,EADAhC,GAAM,QAAcY,EAAM3D,EAAGoG,MAE7BrB,EAAQhC,GAAO,QAG3B,IAASqD,EAAI,EAAGA,GAAKoE,EAAY,EAAGpE,IAChC,IAASpG,EAAI,EAAGA,EAAI2D,EAAM3D,IAAK,CAC3B,IAAI+C,EACA6B,EAAmBG,EADnBhC,GAAM,QAAcY,EAAM3D,EAAGoG,MACOhE,KAAKE,SAAW,KACpDwC,EAAkBN,EAAMb,EAAMoB,EAAShC,EAAK/C,EAAGoG,GAAG,IA0f9DqE,CAAajG,EAAMb,EAAMoB,GAvmB7B,SAAoBhB,EAAMS,EAAMb,EAAMoB,GAKlC,IAJA,IAEInB,EAAI,EACJC,EAAI,EACCuC,EAAI,EAAGA,EAAI5B,EAAM4B,IAAK,CAC3BxC,EAAI,EACJ,IAAK,IAAI5D,EAAI,EAAGA,EAAI2D,EAAM3D,IAAK,CAC3B,IAAI+C,GAAM,QAAcY,EAAM3D,EAAGoG,GAC7BnH,EAAM8F,EAAQhC,GAGduB,EADJrF,EAAMkG,EAAsBX,EAAMb,EAAMoB,EAAS/E,EAAGoG,EAAGrD,EAAK9D,KAExD6E,EAASC,EAAM,OAAQH,EAAGC,EAZ9B,GACA,IAYW,OAAP5E,GACA6E,EAASC,EAAM9E,EAAK2E,EAAGC,EAd3B,GACA,IAcAD,GAfA,GAiBJC,GAhBI,IAsmBR6G,CAAW3G,EAAMS,EAAMb,EAAMoB,GAC7B,IAAI4F,EAAM,qBACNC,EAAYhM,SAASyB,eAAesK,GAOxC,IANiB,MAAbC,IACAA,EAAYhM,SAASU,cAAc,OACnCsL,EAAUC,GAAKF,EACf9K,QAAQC,IAAI,iCACZlB,SAAS8I,KAAKoD,QAAQF,IAEnBA,EAAUG,YACbH,EAAUnK,YAAYmK,EAAUG,YAGpCH,EAAUvG,YAAYN","file":"162.bundle.js","sourcesContent":["export const isPhone = checkMobile();\r\nfunction checkMobile() {\r\n    return false;\r\n}\r\nfunction collapseOnPhone() {\r\n    if (isPhone) {\r\n        var imgs = document.getElementsByClassName(\"deembed-media\");\r\n        while (imgs.length > 0) {\r\n            let img = imgs[0];\r\n            let par = img.parentNode;\r\n            //console.log(img.src+\" @ \"+par.tagName);\r\n            if (par.tagName == \"VIDEO\") {\r\n                let put = document.createElement(\"div\");\r\n                put.innerHTML = '<a href = \"' + img.src + '\">' + img.src + \"</a>\";\r\n                par.parentNode.replaceChild(put, par);\r\n            }\r\n            else {\r\n                //par.replaceChild(put, img);\r\n                if (par.className == \"video\") {\r\n                    var url = img.src.replace(\"embed/\", \"watch?v=\");\r\n                    par.innerHTML = '<a href = \"' + url + '\">' + url + \"</a>\";\r\n                }\r\n                else if (par.className != \"header-image\")\r\n                    par.innerHTML = img.src + \"<br>\";\r\n                else\r\n                    par.innerHTML = \"\";\r\n            }\r\n            console.log(\"Hiding media '\" + img.src + \"'\");\r\n        }\r\n        var text = document.getElementsByClassName(\"textarea\");\r\n        for (var i = 0; i < text.length; i++) {\r\n            text[i].style.width = \"33%\";\r\n        }\r\n        let header = document.createElement(\"div\");\r\n        header.innerHTML = \"<div style = 'text-align: center; width: 33%; margin: auto; border: 3px solid red;'><h2 style = 'color: red; margin: 12px;'>This site is not designed for use on phones and other handheld devices, nor is any of its content relevant on such platforms. You may continue to browse it this way if you wish, but it is recommended that you visit the site with a proper computer.</h2></div>\";\r\n        let navbar = document.getElementById(\"navbar\");\r\n        navbar.parentNode.insertBefore(header, navbar.nextSibling);\r\n        let toc = document.getElementById(\"toc_container\");\r\n        toc.parentNode.removeChild(toc);\r\n    }\r\n}\r\nfunction interceptDOM() {\r\n    collapseOnPhone();\r\n}\r\ndocument.addEventListener(\"DOMContentLoaded\", interceptDOM);\r\n","let root = {};\r\nexport const date = new Date(); //new Date(\"December 16, 2016 11:13:00\");//\r\nexport const time = date.getSeconds();\r\nexport const month = date.getMonth();\r\nexport const day = date.getDate();\r\nexport const xmas = month == 11 || (month == 0 && day <= 10); //between dec 1 and jan 10\r\nexport const hallow = month == 9 && day >= 10; //between oct 10 and oct 31\t\r\nexport const viskey = 'visibility';\r\nexport const visval = 'visible';\r\nexport const xkey = 'x';\r\nexport const ykey = 'y';\r\nexport const hkey = 'height';\r\nexport const wkey = 'width';\r\nlet tileWidthNum = -1;\r\nlet tileHeightNum = -1;\r\nlet tileWidth;\r\nlet tileHeight;\r\nlet imagePaths = {};\r\nexport function absDiff(a, b) {\r\n    return Math.abs(Math.abs(a) - Math.abs(b));\r\n}\r\nexport function getImageRoot(folderName) {\r\n    if (root[folderName] == null || typeof (root[folderName]) == \"undefined\") {\r\n        var ret = \"images/\" + folderName + \"/\";\r\n        var url = window.location.href;\r\n        //console.log(url);\r\n        var idx = url.indexOf(\"sitecore\");\r\n        url = url.substring(idx + 9);\r\n        //console.log(url);\r\n        var levels = url.split(\"/\").length - 1;\r\n        for (var i = 0; i < levels; i++)\r\n            ret = \"../\" + ret;\r\n        root[folderName] = ret;\r\n        //console.log(\"Calculated root \"+root[folderName]);\r\n    }\r\n    return root[folderName];\r\n}\r\nexport function getRandomBetween(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\nexport function getRandomDecimalBetween(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\nexport function getOrCreateImgPath(img, folder) {\r\n    if (imagePaths[img] == null) {\r\n        imagePaths[img] = getImageRoot(folder) + img + \".png\";\r\n        //console.log(\"Computed image path '\"+imagePaths[img]+\"' for image '\"+img+\"'\");\r\n    }\r\n    return imagePaths[img];\r\n}\r\nexport function getTileWidth(iw) {\r\n    if (tileWidthNum != iw) {\r\n        tileWidthNum = iw;\r\n        tileWidth = tileWidthNum.toString();\r\n    }\r\n    return tileWidth;\r\n}\r\nexport function getTileHeight(ih) {\r\n    if (tileHeightNum != ih) {\r\n        tileHeightNum = ih;\r\n        tileHeight = tileHeightNum.toString();\r\n    }\r\n    return tileHeight;\r\n}\r\nexport function getArrayIndex(cols, x, y) {\r\n    return x + y * cols;\r\n}\r\n","const SCALE = 2;\r\nimport { time, xmas, hallow, viskey, visval, xkey, ykey, hkey, wkey, getRandomBetween, getRandomDecimalBetween, getOrCreateImgPath, getTileWidth, getTileHeight, getArrayIndex } from '../library';\r\nimport { isPhone } from '../browser';\r\nfunction addImage(elem, img, ix, iy, iw, ih) {\r\n    //var pre = '<image x=\"'+ix+'\" y=\"'+iy+'\" width=\"'+iw+'\" height=\"'+ih+'\" xlink:href=\"'+getImageRoot();\r\n    //var post = '.png\" />';\r\n    //return pre+img+post;\r\n    let svgimg = document.createElementNS('http://www.w3.org/2000/svg', 'image');\r\n    svgimg.setAttributeNS(null, wkey, getTileWidth(iw));\r\n    svgimg.setAttributeNS(null, hkey, getTileHeight(ih));\r\n    svgimg.setAttributeNS('http://www.w3.org/1999/xlink', 'href', getOrCreateImgPath(img, \"mcblocks\"));\r\n    svgimg.setAttributeNS(null, xkey, ix.toString());\r\n    svgimg.setAttributeNS(null, ykey, iy.toString());\r\n    svgimg.setAttributeNS(null, viskey, visval);\r\n    elem.appendChild(svgimg);\r\n}\r\nfunction buildImage(elem, rows, cols, terrain) {\r\n    var w = 16 * SCALE;\r\n    var h = 16 * SCALE;\r\n    var x = 0;\r\n    var y = 0;\r\n    for (var k = 0; k < rows; k++) {\r\n        x = 0;\r\n        for (var i = 0; i < cols; i++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            var img = terrain[idx];\r\n            //console.log(\"Got \"+img+\" @ \"+i+\", \"+k);\r\n            img = modifyImageLocational(rows, cols, terrain, i, k, idx, img);\r\n            if (isTransparent(img))\r\n                addImage(elem, \"cave\", x, y, w, h);\r\n            if (img != \"air\")\r\n                addImage(elem, img, x, y, w, h);\r\n            x += w;\r\n        }\r\n        y += h;\r\n    }\r\n}\r\nfunction isTransparent(img) {\r\n    switch (img) {\r\n        case \"air\":\r\n        case \"mob_spawner\":\r\n        case \"web\":\r\n        case \"tallgrass\":\r\n        case \"flower1\":\r\n        case \"flower2\":\r\n        case \"crystal_purple\":\r\n        case \"crystal_green\":\r\n        case \"crystal_white\":\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRandomRawGenBlockAt(x, y, rows, skylim) {\r\n    if (y == 0) {\r\n        return \"grass_side\";\r\n    }\r\n    else if (y <= 4) {\r\n        var t = Math.max(1, 3 + Math.sin(time + x * 0.873) + Math.cos(time * 1.8734 + x * 0.7624));\r\n        if (y <= t)\r\n            return \"dirt\";\r\n    }\r\n    else if (y > rows - 4 - skylim) {\r\n        var layer = rows - y - skylim;\r\n        if (layer <= Math.random() * 5) {\r\n            return \"bedrock\";\r\n        }\r\n    }\r\n    return \"stone\";\r\n}\r\nfunction isWaterReplaceable(block) {\r\n    return block == \"air\" || block == \"cave\" || block == \"water\" || block == \"web\";\r\n}\r\nfunction createWaterSource(rows, cols, terrain, idx, x, y, canSpread) {\r\n    terrain[idx] = \"water\";\r\n    var idx2 = getArrayIndex(cols, x, y + 1);\r\n    if (terrain[idx2] == \"lava\") {\r\n        terrain[idx2] = \"obsidian\";\r\n    }\r\n    if (isWaterReplaceable(terrain[idx2])) {\r\n        createWaterSource(rows, cols, terrain, idx2, x, y + 1, true);\r\n    }\r\n    else if (canSpread) {\r\n        var flow = 2;\r\n        for (var i = 0; i <= flow; i++) {\r\n            var idx3 = getArrayIndex(cols, x + i, y);\r\n            //console.log(\"Spreading right into \"+terrain[idx3]);\r\n            if (isWaterReplaceable(terrain[idx3])) {\r\n                createWaterSource(rows, cols, terrain, idx3, x + i, y, false);\r\n                if (isWaterReplaceable(terrain[idx3 + cols])) {\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        for (var i = 0; i <= flow; i++) {\r\n            var idx3 = getArrayIndex(cols, x - i, y);\r\n            //console.log(\"Spreading left into \"+terrain[idx3]);\r\n            if (isWaterReplaceable(terrain[idx3])) {\r\n                createWaterSource(rows, cols, terrain, idx3, x - i, y, false);\r\n                if (isWaterReplaceable(terrain[idx3 + cols])) {\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction applyLiquids(rows, cols, terrain) {\r\n    var lavalevel = Math.floor(rows * 0.8) - 1;\r\n    for (var k = lavalevel; k < rows; k++) {\r\n        for (var i = 0; i < cols; i++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            if (terrain[idx] == \"cave\")\r\n                terrain[idx] = \"lava\";\r\n        }\r\n    }\r\n    for (var k = 0; k <= lavalevel + 1; k++) {\r\n        for (var i = 0; i < cols; i++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            if (isWaterReplaceable(terrain[idx]) && Math.random() < 0.02) {\r\n                createWaterSource(rows, cols, terrain, idx, i, k, true);\r\n                //return;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction cleanFloatingBlocks(rows, cols, terrain) {\r\n    for (var k = 0; k < rows; k++) {\r\n        for (var i = 0; i < cols; i++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            var idxu = getArrayIndex(cols, i, k - 1);\r\n            var idxd = getArrayIndex(cols, i, k + 1);\r\n            var idxl = getArrayIndex(cols, i - 1, k);\r\n            var idxr = getArrayIndex(cols, i + 1, k);\r\n            if (terrain[idx] != \"cave\" && terrain[idxu] == \"cave\" && terrain[idxd] == \"cave\" && terrain[idxl] == \"cave\" && terrain[idxr] == \"cave\") {\r\n                terrain[idx] = \"cave\";\r\n                //console.log(\"Found floater at \"+i+\", \"+k);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction modifyImageLocational(rows, cols, terrain, x, y, idx, img) {\r\n    if (img == \"grass_side\") {\r\n        var idxu = getArrayIndex(cols, x, y - 1);\r\n        if (terrain[idxu] != \"sky\" && !isTransparent(terrain[idxu]))\r\n            img = \"dirt\";\r\n    }\r\n    if (xmas) {\r\n        if (img == \"grass_side\")\r\n            img = \"grass_side_xmas\";\r\n        if (img == \"crystalcol\")\r\n            img = \"crystalcol_xmas\";\r\n        if (img == \"tallgrass\")\r\n            img = \"tallgrass_xmas\";\r\n    }\r\n    if (img == \"tallgrass\" && hallow && Math.random() < 0.33)\r\n        img = \"pumpkin\";\r\n    if (Math.random() < 0.04 && img == \"cave\" && terrain[idx + cols] == \"stone\") {\r\n        var f = Math.random();\r\n        if (f < 0.33)\r\n            img = \"crystal_purple\";\r\n        else if (f < 0.67)\r\n            img = \"crystal_white\";\r\n        else\r\n            img = \"crystal_green\";\r\n    }\r\n    return img;\r\n}\r\nfunction getOreVeinSize(ore) {\r\n    if (ore.startsWith(\"rock_\"))\r\n        return [2.25, 4.5];\r\n    switch (ore) {\r\n        case \"diamond_ore\":\r\n        case \"lapis_ore\":\r\n        case \"calcite\":\r\n            return [0.5, 1.5];\r\n        case \"iron_ore\":\r\n        case \"gold_ore\":\r\n        case \"copper_ore\":\r\n        case \"tin_ore\":\r\n        case \"nickel_ore\":\r\n        case \"cadmium\":\r\n        case \"indium\":\r\n            return [1.5, 3];\r\n        case \"redstone_ore\":\r\n        case \"coal_ore\":\r\n        case \"fluorite\":\r\n        case \"magnetite\":\r\n            return [2, 3.5];\r\n        case \"dirt\":\r\n        case \"gravel\":\r\n            return [2.5, 4];\r\n        case \"cave\":\r\n        case \"air\":\r\n            return [2.5, 5];\r\n        default:\r\n            return [0, 0];\r\n    }\r\n}\r\nfunction genOreVein(rows, cols, terrain, x, y, ore) {\r\n    var s = getOreVeinSize(ore);\r\n    //s[0] = 1;\r\n    //s[1] = 9;\r\n    var rx = getRandomDecimalBetween(s[0], s[1]);\r\n    var ry = getRandomDecimalBetween(s[0], s[1]);\r\n    var mx = Math.max(0, Math.floor(x - rx));\r\n    var my = Math.max(0, Math.floor(y - ry));\r\n    var px = Math.min(cols - 1, Math.floor(x + rx));\r\n    var py = Math.min(rows - 1, Math.floor(y + ry));\r\n    var ms = 0.75;\r\n    var slopeX = getRandomDecimalBetween(-ms, ms);\r\n    var slopeY = getRandomDecimalBetween(-ms, ms);\r\n    //console.log(\"Generated ore type \"+ore+\" @ \"+x+\", \"+y+\" with sizes \"+rx+\", \"+ry+\" to range \"+mx+\"->\"+px+\"; \"+my+\"->\"+py+\"; slopes are \"+slopeX+\", \"+slopeY);\r\n    for (var i = mx; i <= px; i++) {\r\n        for (var k = my; k <= py; k++) {\r\n            var di = i - x;\r\n            var dk = k - y;\r\n            if (di * di + dk * dk <= rx * ry + 0.5) {\r\n                var dx = i + Math.floor(slopeX * dk);\r\n                var dy = k + Math.floor(slopeY * di);\r\n                var idx = getArrayIndex(cols, dx, dy);\r\n                if (terrain[idx] == null || terrain[idx] == \"stone\" || terrain[idx].startsWith(\"rock_\") || (terrain[idx] == \"cobblestone\" && ore == \"cave\"))\r\n                    terrain[idx] = ore;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction getRandomRockType(rows, y) {\r\n    var f = y / rows;\r\n    var list = [\"granite\", \"hornfel\", \"quartz\"];\r\n    if (f < 0.5) {\r\n        list.push(\"basalt\");\r\n        list.push(\"shale\");\r\n        list.push(\"limestone\");\r\n        list.push(\"sandstone\");\r\n    }\r\n    if (f < 0.75 && f > 0.25) {\r\n        list.push(\"slate\");\r\n        list.push(\"gneiss\");\r\n        list.push(\"granulite\");\r\n        list.push(\"schist\");\r\n    }\r\n    if (f > 0.5) {\r\n        list.push(\"marble\");\r\n        list.push(\"peridotite\");\r\n    }\r\n    if (f > 0.75) {\r\n        list.push(\"pumice\");\r\n        list.push(\"onyx\");\r\n        list.push(\"migmatite\");\r\n    }\r\n    return list[Math.floor(Math.random() * list.length)];\r\n}\r\nfunction getRandomOreType(rows, y) {\r\n    var f = y / rows;\r\n    var list = [\"coal_ore\"];\r\n    if (f > 0.2) {\r\n        list.push(\"iron_ore\");\r\n    }\r\n    if (f > 0.5) {\r\n        list.push(\"gold_ore\");\r\n        list.push(\"lapis_ore\");\r\n    }\r\n    if (f > 0.75) {\r\n        list.push(\"redstone_ore\");\r\n        list.push(\"diamond_ore\");\r\n        list.push(\"emerald_ore\");\r\n        list.push(\"cadmium\");\r\n        list.push(\"indium\");\r\n    }\r\n    if (f < 0.2) {\r\n        list.push(\"magnetite\");\r\n    }\r\n    if (f < 0.4) {\r\n        list.push(\"fluorite\");\r\n    }\r\n    if (f > 0.15 && f < 0.35) {\r\n        list.push(\"calcite\");\r\n    }\r\n    if (f > 0.1 && f < 0.5) {\r\n        //list.push(\"copper_ore\");\r\n        //list.push(\"tin_ore\");\r\n    }\r\n    if (f > 0.4 && f < 0.75) {\r\n        //list.push(\"nickel_ore\");\r\n    }\r\n    return list[Math.floor(Math.random() * list.length)];\r\n}\r\nfunction genOreVeins(rows, cols, terrain) {\r\n    var veins = rows * cols / 56;\r\n    //veins = 1;\r\n    for (var i = 0; i < veins; i++) {\r\n        var x = Math.floor(Math.random() * cols);\r\n        var y = Math.floor(Math.random() * rows);\r\n        var ore = getRandomOreType(rows, y);\r\n        genOreVein(rows, cols, terrain, x, y, ore);\r\n        //console.log(\"Generated \"+ore+\" at \"+x+\", \"+y);\r\n    }\r\n}\r\nfunction genRockVeins(rows, cols, terrain) {\r\n    var veins = rows * cols / 64;\r\n    //veins = 1;\r\n    for (var i = 0; i < veins; i++) {\r\n        var x = Math.floor(Math.random() * cols);\r\n        var y = Math.floor(Math.random() * rows);\r\n        var ore = \"rock_\" + getRandomRockType(rows, y);\r\n        genOreVein(rows, cols, terrain, x, y, ore);\r\n        //console.log(\"Generated \"+ore+\" at \"+x+\", \"+y);\r\n    }\r\n}\r\nfunction genGravelDirt(rows, cols, terrain) {\r\n    var veins = rows * cols / 150;\r\n    for (var i = 0; i < veins; i++) {\r\n        var x = Math.floor(Math.random() * cols);\r\n        var y = Math.floor(Math.random() * rows);\r\n        var ore = Math.random() < 0.5 ? \"gravel\" : \"dirt\";\r\n        genOreVein(rows, cols, terrain, x, y, ore);\r\n    }\r\n}\r\nfunction generateCaves(rows, cols, terrain) {\r\n    for (var i = 0; i < 8; i++) {\r\n        var x = getRandomBetween(0, cols);\r\n        var y = getRandomBetween(0, rows);\r\n        genOreVein(rows, cols, terrain, x, y, \"cave\");\r\n    }\r\n}\r\nfunction generateStructures(rows, cols, terrain, skylim) {\r\n    if (Math.random() < 0.75) {\r\n        var x = getRandomBetween(2, cols - 2);\r\n        var y = getRandomBetween(skylim + 4, rows - 7);\r\n        console.log(\"Generating a dungeon @ \" + x + \", \" + y);\r\n        var w = Math.random() < 0.5 ? 4 : 3;\r\n        var h = Math.min(w, Math.random() < 0.5 ? 4 : 3);\r\n        for (var i = -w; i <= w; i++) {\r\n            for (var k = 0; k <= h; k++) {\r\n                var dx = x + i;\r\n                var dy = y + k;\r\n                var bk = \"cobblestone\";\r\n                if (k == h) {\r\n                    if (Math.random() < 0.75)\r\n                        bk = \"cobblestone_mossy\";\r\n                }\r\n                else if (k == h - 1 && i == 0) {\r\n                    bk = \"mob_spawner\";\r\n                }\r\n                else if (Math.abs(i) != w) {\r\n                    bk = \"air\";\r\n                }\r\n                var idx = getArrayIndex(cols, dx, dy);\r\n                terrain[idx] = bk;\r\n            }\r\n        }\r\n    }\r\n    if (Math.random() < 0.75) {\r\n        var shafts = getRandomBetween(1, 3);\r\n        console.log(\"Generating \" + shafts + \" mineshaft pieces.\");\r\n        for (var s = 0; s < shafts; s++) {\r\n            var facing = Math.random() < 0.8;\r\n            var y = getRandomBetween(skylim + 4, rows - 5);\r\n            if (facing) {\r\n                var x = getRandomBetween(1, cols - 1);\r\n                for (var i = -1; i <= 1; i++) {\r\n                    for (var k = 0; k <= 2; k++) {\r\n                        var dx = x + i;\r\n                        var dy = y + k;\r\n                        var bk = \"cave\";\r\n                        if (k == 0)\r\n                            bk = \"planks_oak\";\r\n                        else if (Math.random() < 0.4 && Math.abs(i) == 1)\r\n                            bk = \"planks_oak\";\r\n                        if (Math.random() < 0.15)\r\n                            bk = bk == \"cave\" ? \"web\" : \"web_on_wood\";\r\n                        var idx = getArrayIndex(cols, dx, dy);\r\n                        terrain[idx] = bk;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                var w = getRandomBetween(5, Math.ceil(cols / 3));\r\n                var x = getRandomBetween(w, cols - w);\r\n                var woff = getRandomBetween(0, 5);\r\n                var twoSpawners = Math.random() < 0.5;\r\n                for (var i = -w; i <= w; i++) {\r\n                    for (var k = 0; k <= 2; k++) {\r\n                        var dx = x + i;\r\n                        var dy = y + k;\r\n                        var bk = \"cave\";\r\n                        var spawnerCol = twoSpawners ? (i == 0) : (Math.abs(i) == Math.floor(w / 1.5));\r\n                        var woodCol = (i + 256) % 6 == woff;\r\n                        if (woodCol) {\r\n                            bk = \"planks_oak\";\r\n                        }\r\n                        if (k == 2 && spawnerCol) {\r\n                            bk = \"mob_spawner\";\r\n                        }\r\n                        else if (Math.random() < 0.67)\r\n                            bk = bk == \"cave\" ? \"web\" : \"web_on_wood\";\r\n                        var idx = getArrayIndex(cols, dx, dy);\r\n                        terrain[idx] = bk;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction generateSurface(rows, cols, terrain, sky) {\r\n    for (var n = 0; n < 2; n++) {\r\n        var lakeCtr = getRandomBetween(3, cols - 3);\r\n        for (var i = lakeCtr - 2; i <= lakeCtr + 2; i++) {\r\n            var idxl = getArrayIndex(cols, i - 1, sky[i]);\r\n            var idxr = getArrayIndex(cols, i + 1, sky[i]);\r\n            if ((terrain[idxl] == \"grass_side\" || terrain[idxl] == \"water\" || terrain[idxl] == \"ice\" || terrain[idxl] == \"dirt\") && (terrain[idxr] == \"grass_side\" || terrain[idxr] == \"ice\" || terrain[idxr] == \"water\" || terrain[idxr] == \"dirt\")) {\r\n                var idxb = getArrayIndex(cols, i, sky[i] + 1);\r\n                var idx = getArrayIndex(cols, i, sky[i]);\r\n                terrain[idx] = xmas ? \"ice\" : \"water\";\r\n                if (terrain[idxb] == \"dirt\")\r\n                    terrain[idxb] = \"grass_side\";\r\n            }\r\n        }\r\n    }\r\n    var flag = false;\r\n    for (var n = 0; n < 2 && !flag; n++) {\r\n        var pylonCtr = getRandomBetween(3, cols - 3);\r\n        flag = generatePylonAt(rows, cols, terrain, sky, pylonCtr);\r\n    }\r\n    var count = 0;\r\n    for (var n = 0; n < (xmas ? 8 : 4) && count < 3; n++) {\r\n        var treeCtr = getRandomBetween(3, cols - 3);\r\n        if (generateTreeAt(rows, cols, terrain, sky, treeCtr))\r\n            count++;\r\n    }\r\n    /*\r\n    if (Math.random() < 0.6) {\r\n        var burrowCtr = getRandomBetween(6, cols-6);\r\n        generateBurrowAt(rows, cols, terrain, sky, burrowCtr);\r\n    }*/\r\n    for (var i = 0; i < rows; i++) {\r\n        if (sky[i] > 0 && Math.random() < 0.6) {\r\n            var idx0 = getArrayIndex(cols, i, sky[i]);\r\n            if (terrain[idx0] == \"grass_side\") {\r\n                var idx = getArrayIndex(cols, i, sky[i] - 1);\r\n                if (terrain[idx] == \"sky\") {\r\n                    var plant = \"tallgrass\";\r\n                    var rr = Math.random();\r\n                    if (rr < 0.1)\r\n                        plant = \"flower2\";\r\n                    else if (rr < 0.25)\r\n                        plant = \"flower1\";\r\n                    terrain[idx] = plant;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction generateTreeAt(rows, cols, terrain, sky, treeCtr) {\r\n    let yCtr = sky[treeCtr];\r\n    if (yCtr <= 4)\r\n        return false;\r\n    var spruce = xmas; //Math.random() <= 0.25;\r\n    var h = Math.min(yCtr - 1, spruce ? getRandomBetween(8, 12) : getRandomBetween(4, 8));\r\n    //console.log(h);\r\n    if (h <= (spruce ? 8 : 5))\r\n        return false;\r\n    //console.log(\"Trying tree @ \"+treeCtr+\", \"+yCtr);\r\n    if (terrain[getArrayIndex(cols, treeCtr - 2, yCtr - h)] != \"sky\") {\r\n        //console.log(\"Space blocked @ \"+(treeCtr-2)+\", \"+(yCtr-h)+\": \"+terrain[getArrayIndex(cols, treeCtr-2, yCtr-h)]);\r\n        return false;\r\n    }\r\n    if (terrain[getArrayIndex(cols, treeCtr + 2, yCtr - h)] != \"sky\") {\r\n        //console.log(\"Space blocked @ \"+(treeCtr+2)+\", \"+(yCtr-h)+\": \"+terrain[getArrayIndex(cols, treeCtr+2, yCtr-h)]);\r\n        return false;\r\n    }\r\n    if (terrain[getArrayIndex(cols, treeCtr, yCtr - h)] != \"sky\") {\r\n        //console.log(\"Space blocked @ \"+(treeCtr)+\", \"+(yCtr-h)+\": \"+terrain[getArrayIndex(cols, treeCtr, yCtr-h)]);\r\n        return false;\r\n    }\r\n    if (terrain[getArrayIndex(cols, treeCtr - 2, yCtr - h + 2)] != \"sky\") {\r\n        //console.log(\"Space blocked @ \"+(treeCtr-2)+\", \"+(yCtr-h+2)+\": \"+terrain[getArrayIndex(cols, treeCtr-2, yCtr-h+2)]);\r\n        return false;\r\n    }\r\n    if (terrain[getArrayIndex(cols, treeCtr + 2, yCtr - h + 2)] != \"sky\") {\r\n        //console.log(\"Space blocked @ \"+(treeCtr+2)+\", \"+(yCtr-h+2)+\": \"+terrain[getArrayIndex(cols, treeCtr+2, yCtr-h+2)]);\r\n        return false;\r\n    }\r\n    if (spruce) {\r\n        for (var y = 0; y <= h; y++) {\r\n            var idx = getArrayIndex(cols, treeCtr, yCtr - y);\r\n            terrain[idx] = y == 0 ? \"dirt\" : \"log_spruce\";\r\n        }\r\n        var r = 2;\r\n        for (var y = Math.max(2, h - 6); y <= h; y++) {\r\n            //console.log(\"r = \"+r+\" @ y=\"+y);\r\n            for (var i = treeCtr - r; i <= treeCtr + r; i++) {\r\n                var idx = getArrayIndex(cols, i, yCtr - y);\r\n                terrain[idx] = \"leaves_spruce\";\r\n            }\r\n            r += Math.random() <= 0.5 ? 1 : 2;\r\n            if (r > 3)\r\n                r -= 3;\r\n            if (y + 1 == h - 1)\r\n                r = 1;\r\n            if (y + 1 == h)\r\n                r = 0;\r\n        }\r\n    }\r\n    else {\r\n        var birch = Math.random() <= 0.35;\r\n        var leaf = birch ? \"leaves_birch\" : \"leaves\";\r\n        for (var y = 0; y <= h; y++) {\r\n            var idx = getArrayIndex(cols, treeCtr, yCtr - y);\r\n            terrain[idx] = y == 0 ? \"dirt\" : (birch ? \"log_birch\" : \"log\");\r\n        }\r\n        for (var y = h - 3; y <= h; y++) {\r\n            var r = y >= h - 1 ? 1 : 2;\r\n            if (!birch && y == h)\r\n                r = 0;\r\n            for (var i = treeCtr - r; i <= treeCtr + r; i++) {\r\n                var idx = getArrayIndex(cols, i, yCtr - y);\r\n                terrain[idx] = leaf;\r\n            }\r\n        }\r\n    }\r\n    console.log(\"Generating tree at \" + treeCtr + \", \" + yCtr);\r\n    return true;\r\n}\r\nfunction generateBurrowAt(rows, cols, terrain, sky, burrowCtr) {\r\n    var yCtr = sky[burrowCtr];\r\n}\r\nfunction generatePylonAt(rows, cols, terrain, sky, pylonCtr) {\r\n    var yCtr = sky[pylonCtr];\r\n    if (yCtr < 7)\r\n        return false;\r\n    console.log(\"Generating pylon at \" + pylonCtr + \", \" + yCtr);\r\n    for (var i = pylonCtr - 3; i <= pylonCtr + 3; i++) {\r\n        for (var y = yCtr; y <= sky[i]; y++) {\r\n            var idx = getArrayIndex(cols, i, y);\r\n            terrain[idx] = \"crystalstone\";\r\n        }\r\n    }\r\n    for (var i = pylonCtr - 3; i <= pylonCtr + 3; i += 2) {\r\n        var edge = i == pylonCtr - 3 || i == pylonCtr + 3;\r\n        var top = edge ? 5 : 7;\r\n        for (var y = 1; y < top; y++) {\r\n            var idx = getArrayIndex(cols, i, yCtr - y);\r\n            terrain[idx] = \"crystalcol\";\r\n        }\r\n        terrain[getArrayIndex(cols, i, yCtr - top)] = \"rune\";\r\n    }\r\n    terrain[getArrayIndex(cols, pylonCtr - 2, yCtr - 3)] = \"crystalbeam\";\r\n    terrain[getArrayIndex(cols, pylonCtr + 2, yCtr - 3)] = \"crystalbeam\";\r\n    return true;\r\n}\r\nexport default function setPageBackground() {\r\n    if (isPhone)\r\n        return;\r\n    let tail = '</svg>';\r\n    let w = 16 * SCALE;\r\n    let h = 16 * SCALE;\r\n    let x = 0;\r\n    let y = 0;\r\n    //var height = findHighestNode(0, document.documentElement.childNodes);\r\n    let body = document.body;\r\n    let html = document.documentElement;\r\n    let height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight) - 64;\r\n    let titleImg = document.getElementsByClassName(\"title-image\")[0];\r\n    if (titleImg == null || titleImg.src == null || titleImg.src == \"\" || titleImg.src == window.location.href) {\r\n        height += 72;\r\n    }\r\n    else {\r\n        height += 48;\r\n    }\r\n    //console.log(\"Total height is \"+height+\", document content is: \"+document.documentElement.innerHTML);\r\n    let rh = Math.max(height, window.innerHeight, document.body.clientHeight);\r\n    let rw = Math.max(window.innerWidth, document.body.clientWidth);\r\n    //console.log(rw+\" x \"+rh);\r\n    let rows = Math.ceil(rh / h);\r\n    let cols = Math.ceil(rw / w);\r\n    let tw = cols * w;\r\n    let th = rows * h;\r\n    console.log(\"Generating MC chunk slice tileset with \" + cols + \" columns and \" + rows + \" rows\");\r\n    let xmlns = \"http://www.w3.org/2000/svg\";\r\n    let elem = document.createElementNS(xmlns, \"svg\");\r\n    elem.setAttributeNS(null, \"width\", tw.toString());\r\n    elem.setAttributeNS(null, \"height\", th.toString());\r\n    let terrain = new Array(cols * rows);\r\n    let skylim = Math.max(0, Math.min(14, Math.ceil(rows * 0.1)));\r\n    let sky = new Array(cols);\r\n    let minSky = Math.floor(skylim / 3);\r\n    let slope = getRandomDecimalBetween(-1, 1);\r\n    let skyH = getRandomDecimalBetween(minSky, skylim);\r\n    //console.log(\"Slope of \"+slope+\" from \"+skyH);\r\n    for (var i = 0; i < cols; i++) {\r\n        sky[i] = Math.floor(skyH);\r\n        //console.log(sky[i]+\" @ \"+i);\r\n        skyH += slope;\r\n        skyH = Math.max(minSky, Math.min(skylim, skyH));\r\n        if (Math.random() < 0.3 || skyH >= skylim - 1 || skyH <= minSky + 1) {\r\n            slope += getRandomDecimalBetween(-0.2, 0.2);\r\n            if (skyH >= skylim - 1)\r\n                slope = Math.min(slope, 0);\r\n            if (skyH <= minSky + 1)\r\n                slope = Math.max(slope, 0);\r\n            slope = Math.max(-1, Math.min(1, slope));\r\n            //console.log(\"Bending slope to \"+slope);\r\n        }\r\n    }\r\n    for (var i = 0; i < cols; i++) {\r\n        for (let k = 0; k < sky[i]; k++) {\r\n            let idx = getArrayIndex(cols, i, k);\r\n            terrain[idx] = \"sky\";\r\n        }\r\n    }\r\n    for (var i = 0; i < cols; i++) {\r\n        for (let k = sky[i]; k < rows; k++) {\r\n            let img = getRandomRawGenBlockAt(i, k - sky[i], rows, sky[i]);\r\n            let idx = getArrayIndex(cols, i, k);\r\n            terrain[idx] = img;\r\n        }\r\n    }\r\n    generateSurface(rows, cols, terrain, sky);\r\n    generateStructures(rows, cols, terrain, skylim);\r\n    generateCaves(rows, cols, terrain);\r\n    genRockVeins(rows, cols, terrain);\r\n    genOreVeins(rows, cols, terrain);\r\n    genGravelDirt(rows, cols, terrain);\r\n    cleanFloatingBlocks(rows, cols, terrain);\r\n    applyLiquids(rows, cols, terrain);\r\n    buildImage(elem, rows, cols, terrain);\r\n    let tag = \"background-content\";\r\n    let container = document.getElementById(tag);\r\n    if (container == null) {\r\n        container = document.createElement(\"div\");\r\n        container.id = tag;\r\n        console.log(\"Injecting background element.\");\r\n        document.body.prepend(container);\r\n    }\r\n    while (container.firstChild) {\r\n        container.removeChild(container.firstChild);\r\n    }\r\n    //console.log(elem);\r\n    container.appendChild(elem);\r\n}\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://sitecore/./node_modules/ts-debounce/dist/src/index.esm.js","webpack://sitecore/./browser.ts","webpack://sitecore/./library.ts","webpack://sitecore/./minecraft/backgroundgen.ts"],"names":["r","e","n","i","t","o","a","isImmediate","u","callback","c","maxWait","v","Date","now","l","f","d","slice","call","arguments","this","Promise","clearTimeout","setTimeout","apply","forEach","resolve","push","reject","cancel","isPhone","document","addEventListener","console","log","imgs","getElementsByClassName","length","img","par","parentNode","tagName","put","createElement","innerHTML","src","replaceChild","className","url","replace","text","style","width","header","navbar","getElementById","insertBefore","nextSibling","toc","removeChild","collapseOnPhone","root","date","time","getSeconds","month","getMonth","day","getDate","xmas","hallow","viskey","visval","xkey","ykey","hkey","wkey","tileWidth","tileHeight","tileWidthNum","tileHeightNum","imagePaths","getRandomBetween","min","max","Math","floor","random","getRandomDecimalBetween","getOrCreateImgPath","folder","folderName","ret","window","location","href","idx","indexOf","levels","substring","split","getImageRoot","getTileWidth","iw","toString","getTileHeight","ih","getArrayIndex","cols","x","y","addImage","elem","ix","iy","svgimg","createElementNS","setAttributeNS","appendChild","isTransparent","getRandomRawGenBlockAt","rows","skylim","sin","cos","isWaterReplaceable","block","createWaterSource","terrain","canSpread","idx2","idx3","modifyImageLocational","idxu","genOreVein","ore","s","startsWith","getOreVeinSize","rx","ry","mx","my","px","py","ms","slopeX","slopeY","k","di","dk","dx","dy","getRandomRockType","list","getRandomOreType","generateTreeAt","sky","treeCtr","yCtr","spruce","h","birch","leaf","generatePylonAt","pylonCtr","top","setPageBackground","body","html","documentElement","height","scrollHeight","offsetHeight","clientHeight","titleImg","rh","innerHeight","rw","innerWidth","clientWidth","ceil","tw","th","Array","minSky","slope","skyH","lakeCtr","idxl","idxr","idxb","flag","count","plant","rr","generateSurface","w","bk","abs","shafts","facing","woff","twoSpawners","spawnerCol","generateStructures","generateCaves","veins","genRockVeins","genOreVeins","genGravelDirt","idxd","cleanFloatingBlocks","lavalevel","applyLiquids","buildImage","tag","container","id","prepend","firstChild"],"mappings":"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","file":"162.bundle.js","sourcesContent":["function r(r,e,n){var i,t,o;void 0===e&&(e=50),void 0===n&&(n={});var a=null!=(i=n.isImmediate)&&i,u=null!=(t=n.callback)&&t,c=n.maxWait,v=Date.now(),l=[];function f(){if(void 0!==c){var r=Date.now()-v;if(r+e>=c)return c-r}return e}var d=function(){var e=[].slice.call(arguments),n=this;return new Promise(function(i,t){var c=a&&void 0===o;if(void 0!==o&&clearTimeout(o),o=setTimeout(function(){if(o=void 0,v=Date.now(),!a){var i=r.apply(n,e);u&&u(i),l.forEach(function(r){return(0,r.resolve)(i)}),l=[]}},f()),c){var d=r.apply(n,e);return u&&u(d),i(d)}l.push({resolve:i,reject:t})})};return d.cancel=function(r){void 0!==o&&clearTimeout(o),l.forEach(function(e){return(0,e.reject)(r)}),l=[]},d}export{r as debounce};\n//# sourceMappingURL=index.esm.js.map\n","export const isPhone = checkMobile();\r\nfunction checkMobile() {\r\n    return false;\r\n}\r\nfunction collapseOnPhone() {\r\n    if (isPhone) {\r\n        var imgs = document.getElementsByClassName(\"deembed-media\");\r\n        while (imgs.length > 0) {\r\n            let img = imgs[0];\r\n            let par = img.parentNode;\r\n            //console.log(img.src+\" @ \"+par.tagName);\r\n            if (par.tagName == \"VIDEO\") {\r\n                let put = document.createElement(\"div\");\r\n                put.innerHTML = '<a href = \"' + img.src + '\">' + img.src + \"</a>\";\r\n                par.parentNode.replaceChild(put, par);\r\n            }\r\n            else {\r\n                //par.replaceChild(put, img);\r\n                if (par.className == \"video\") {\r\n                    var url = img.src.replace(\"embed/\", \"watch?v=\");\r\n                    par.innerHTML = '<a href = \"' + url + '\">' + url + \"</a>\";\r\n                }\r\n                else if (par.className != \"header-image\")\r\n                    par.innerHTML = img.src + \"<br>\";\r\n                else\r\n                    par.innerHTML = \"\";\r\n            }\r\n            console.log(\"Hiding media '\" + img.src + \"'\");\r\n        }\r\n        var text = document.getElementsByClassName(\"textarea\");\r\n        for (var i = 0; i < text.length; i++) {\r\n            text[i].style.width = \"33%\";\r\n        }\r\n        let header = document.createElement(\"div\");\r\n        header.innerHTML = \"<div style = 'text-align: center; width: 33%; margin: auto; border: 3px solid red;'><h2 style = 'color: red; margin: 12px;'>This site is not designed for use on phones and other handheld devices, nor is any of its content relevant on such platforms. You may continue to browse it this way if you wish, but it is recommended that you visit the site with a proper computer.</h2></div>\";\r\n        let navbar = document.getElementById(\"navbar\");\r\n        navbar.parentNode.insertBefore(header, navbar.nextSibling);\r\n        let toc = document.getElementById(\"toc_container\");\r\n        toc.parentNode.removeChild(toc);\r\n    }\r\n}\r\nfunction interceptDOM() {\r\n    console.log(\"Detected phone browser: \" + isPhone);\r\n    collapseOnPhone();\r\n}\r\ndocument.addEventListener(\"DOMContentLoaded\", interceptDOM);\r\n","let root = {};\r\nexport const date = new Date(); //new Date(\"December 16, 2016 11:13:00\");//\r\nexport const time = date.getSeconds();\r\nexport const month = date.getMonth();\r\nexport const day = date.getDate();\r\nexport const xmas = month == 11 || (month == 0 && day <= 10); //between dec 1 and jan 10\r\nexport const hallow = month == 9 && day >= 10; //between oct 10 and oct 31\t\r\nexport const viskey = 'visibility';\r\nexport const visval = 'visible';\r\nexport const xkey = 'x';\r\nexport const ykey = 'y';\r\nexport const hkey = 'height';\r\nexport const wkey = 'width';\r\nlet tileWidthNum = -1;\r\nlet tileHeightNum = -1;\r\nlet tileWidth;\r\nlet tileHeight;\r\nlet imagePaths = {};\r\nexport function absDiff(a, b) {\r\n    return Math.abs(Math.abs(a) - Math.abs(b));\r\n}\r\nexport function getImageRoot(folderName) {\r\n    if (root[folderName] == null || typeof (root[folderName]) == \"undefined\") {\r\n        var ret = \"images/\" + folderName + \"/\";\r\n        var url = window.location.href;\r\n        //console.log(url);\r\n        var idx = url.indexOf(\"sitecore\");\r\n        url = url.substring(idx + 9);\r\n        //console.log(url);\r\n        var levels = url.split(\"/\").length - 1;\r\n        for (var i = 0; i < levels; i++)\r\n            ret = \"../\" + ret;\r\n        root[folderName] = ret;\r\n        //console.log(\"Calculated root \"+root[folderName]);\r\n    }\r\n    return root[folderName];\r\n}\r\nexport function getRandomBetween(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\nexport function getRandomDecimalBetween(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\nexport function getOrCreateImgPath(img, folder) {\r\n    if (imagePaths[img] == null) {\r\n        imagePaths[img] = getImageRoot(folder) + img + \".png\";\r\n        //console.log(\"Computed image path '\"+imagePaths[img]+\"' for image '\"+img+\"'\");\r\n    }\r\n    return imagePaths[img];\r\n}\r\nexport function getTileWidth(iw) {\r\n    if (tileWidthNum != iw) {\r\n        tileWidthNum = iw;\r\n        tileWidth = tileWidthNum.toString();\r\n    }\r\n    return tileWidth;\r\n}\r\nexport function getTileHeight(ih) {\r\n    if (tileHeightNum != ih) {\r\n        tileHeightNum = ih;\r\n        tileHeight = tileHeightNum.toString();\r\n    }\r\n    return tileHeight;\r\n}\r\nexport function getArrayIndex(cols, x, y) {\r\n    return x + y * cols;\r\n}\r\n","const SCALE = 2;\r\nimport { debounce } from \"ts-debounce\";\r\nimport { time, xmas, hallow, viskey, visval, xkey, ykey, hkey, wkey, getRandomBetween, getRandomDecimalBetween, getOrCreateImgPath, getTileWidth, getTileHeight, getArrayIndex } from '../library';\r\nimport { isPhone } from '../browser';\r\nfunction addImage(elem, img, ix, iy, iw, ih) {\r\n    //var pre = '<image x=\"'+ix+'\" y=\"'+iy+'\" width=\"'+iw+'\" height=\"'+ih+'\" xlink:href=\"'+getImageRoot();\r\n    //var post = '.png\" />';\r\n    //return pre+img+post;\r\n    let svgimg = document.createElementNS('http://www.w3.org/2000/svg', 'image');\r\n    svgimg.setAttributeNS(null, wkey, getTileWidth(iw));\r\n    svgimg.setAttributeNS(null, hkey, getTileHeight(ih));\r\n    svgimg.setAttributeNS('http://www.w3.org/1999/xlink', 'href', getOrCreateImgPath(img, \"mcblocks\"));\r\n    svgimg.setAttributeNS(null, xkey, ix.toString());\r\n    svgimg.setAttributeNS(null, ykey, iy.toString());\r\n    svgimg.setAttributeNS(null, viskey, visval);\r\n    elem.appendChild(svgimg);\r\n}\r\nfunction buildImage(elem, rows, cols, terrain) {\r\n    var w = 16 * SCALE;\r\n    var h = 16 * SCALE;\r\n    var x = 0;\r\n    var y = 0;\r\n    for (var k = 0; k < rows; k++) {\r\n        x = 0;\r\n        for (var i = 0; i < cols; i++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            var img = terrain[idx];\r\n            //console.log(\"Got \"+img+\" @ \"+i+\", \"+k);\r\n            img = modifyImageLocational(rows, cols, terrain, i, k, idx, img);\r\n            if (isTransparent(img))\r\n                addImage(elem, \"cave\", x, y, w, h);\r\n            if (img != \"air\")\r\n                addImage(elem, img, x, y, w, h);\r\n            x += w;\r\n        }\r\n        y += h;\r\n    }\r\n}\r\nfunction isTransparent(img) {\r\n    switch (img) {\r\n        case \"air\":\r\n        case \"mob_spawner\":\r\n        case \"web\":\r\n        case \"tallgrass\":\r\n        case \"flower1\":\r\n        case \"flower2\":\r\n        case \"crystal_purple\":\r\n        case \"crystal_green\":\r\n        case \"crystal_white\":\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRandomRawGenBlockAt(x, y, rows, skylim) {\r\n    if (y == 0) {\r\n        return \"grass_side\";\r\n    }\r\n    else if (y <= 4) {\r\n        var t = Math.max(1, 3 + Math.sin(time + x * 0.873) + Math.cos(time * 1.8734 + x * 0.7624));\r\n        if (y <= t)\r\n            return \"dirt\";\r\n    }\r\n    else if (y > rows - 4 - skylim) {\r\n        var layer = rows - y - skylim;\r\n        if (layer <= Math.random() * 5) {\r\n            return \"bedrock\";\r\n        }\r\n    }\r\n    return \"stone\";\r\n}\r\nfunction isWaterReplaceable(block) {\r\n    return block == \"air\" || block == \"cave\" || block == \"water\" || block == \"web\";\r\n}\r\nfunction createWaterSource(rows, cols, terrain, idx, x, y, canSpread) {\r\n    terrain[idx] = \"water\";\r\n    var idx2 = getArrayIndex(cols, x, y + 1);\r\n    if (terrain[idx2] == \"lava\") {\r\n        terrain[idx2] = \"obsidian\";\r\n    }\r\n    if (isWaterReplaceable(terrain[idx2])) {\r\n        createWaterSource(rows, cols, terrain, idx2, x, y + 1, true);\r\n    }\r\n    else if (canSpread) {\r\n        var flow = 2;\r\n        for (var i = 0; i <= flow; i++) {\r\n            var idx3 = getArrayIndex(cols, x + i, y);\r\n            //console.log(\"Spreading right into \"+terrain[idx3]);\r\n            if (isWaterReplaceable(terrain[idx3])) {\r\n                createWaterSource(rows, cols, terrain, idx3, x + i, y, false);\r\n                if (isWaterReplaceable(terrain[idx3 + cols])) {\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        for (var i = 0; i <= flow; i++) {\r\n            var idx3 = getArrayIndex(cols, x - i, y);\r\n            //console.log(\"Spreading left into \"+terrain[idx3]);\r\n            if (isWaterReplaceable(terrain[idx3])) {\r\n                createWaterSource(rows, cols, terrain, idx3, x - i, y, false);\r\n                if (isWaterReplaceable(terrain[idx3 + cols])) {\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction applyLiquids(rows, cols, terrain) {\r\n    var lavalevel = Math.floor(rows * 0.8) - 1;\r\n    for (var k = lavalevel; k < rows; k++) {\r\n        for (var i = 0; i < cols; i++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            if (terrain[idx] == \"cave\")\r\n                terrain[idx] = \"lava\";\r\n        }\r\n    }\r\n    for (var k = 0; k <= lavalevel + 1; k++) {\r\n        for (var i = 0; i < cols; i++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            if (isWaterReplaceable(terrain[idx]) && Math.random() < 0.02) {\r\n                createWaterSource(rows, cols, terrain, idx, i, k, true);\r\n                //return;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction cleanFloatingBlocks(rows, cols, terrain) {\r\n    for (var k = 0; k < rows; k++) {\r\n        for (var i = 0; i < cols; i++) {\r\n            var idx = getArrayIndex(cols, i, k);\r\n            var idxu = getArrayIndex(cols, i, k - 1);\r\n            var idxd = getArrayIndex(cols, i, k + 1);\r\n            var idxl = getArrayIndex(cols, i - 1, k);\r\n            var idxr = getArrayIndex(cols, i + 1, k);\r\n            if (terrain[idx] != \"cave\" && terrain[idxu] == \"cave\" && terrain[idxd] == \"cave\" && terrain[idxl] == \"cave\" && terrain[idxr] == \"cave\") {\r\n                terrain[idx] = \"cave\";\r\n                //console.log(\"Found floater at \"+i+\", \"+k);\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction modifyImageLocational(rows, cols, terrain, x, y, idx, img) {\r\n    if (img == \"grass_side\") {\r\n        var idxu = getArrayIndex(cols, x, y - 1);\r\n        if (terrain[idxu] != \"sky\" && !isTransparent(terrain[idxu]))\r\n            img = \"dirt\";\r\n    }\r\n    if (xmas) {\r\n        if (img == \"grass_side\")\r\n            img = \"grass_side_xmas\";\r\n        if (img == \"crystalcol\")\r\n            img = \"crystalcol_xmas\";\r\n        if (img == \"tallgrass\")\r\n            img = \"tallgrass_xmas\";\r\n    }\r\n    if (img == \"tallgrass\" && hallow && Math.random() < 0.33)\r\n        img = \"pumpkin\";\r\n    if (Math.random() < 0.04 && img == \"cave\" && terrain[idx + cols] == \"stone\") {\r\n        var f = Math.random();\r\n        if (f < 0.33)\r\n            img = \"crystal_purple\";\r\n        else if (f < 0.67)\r\n            img = \"crystal_white\";\r\n        else\r\n            img = \"crystal_green\";\r\n    }\r\n    return img;\r\n}\r\nfunction getOreVeinSize(ore) {\r\n    if (ore.startsWith(\"rock_\"))\r\n        return [2.25, 4.5];\r\n    switch (ore) {\r\n        case \"diamond_ore\":\r\n        case \"lapis_ore\":\r\n        case \"calcite\":\r\n            return [0.5, 1.5];\r\n        case \"iron_ore\":\r\n        case \"gold_ore\":\r\n        case \"copper_ore\":\r\n        case \"tin_ore\":\r\n        case \"nickel_ore\":\r\n        case \"cadmium\":\r\n        case \"indium\":\r\n            return [1.5, 3];\r\n        case \"redstone_ore\":\r\n        case \"coal_ore\":\r\n        case \"fluorite\":\r\n        case \"magnetite\":\r\n            return [2, 3.5];\r\n        case \"dirt\":\r\n        case \"gravel\":\r\n            return [2.5, 4];\r\n        case \"cave\":\r\n        case \"air\":\r\n            return [2.5, 5];\r\n        default:\r\n            return [0, 0];\r\n    }\r\n}\r\nfunction genOreVein(rows, cols, terrain, x, y, ore) {\r\n    var s = getOreVeinSize(ore);\r\n    //s[0] = 1;\r\n    //s[1] = 9;\r\n    var rx = getRandomDecimalBetween(s[0], s[1]);\r\n    var ry = getRandomDecimalBetween(s[0], s[1]);\r\n    var mx = Math.max(0, Math.floor(x - rx));\r\n    var my = Math.max(0, Math.floor(y - ry));\r\n    var px = Math.min(cols - 1, Math.floor(x + rx));\r\n    var py = Math.min(rows - 1, Math.floor(y + ry));\r\n    var ms = 0.75;\r\n    var slopeX = getRandomDecimalBetween(-ms, ms);\r\n    var slopeY = getRandomDecimalBetween(-ms, ms);\r\n    //console.log(\"Generated ore type \"+ore+\" @ \"+x+\", \"+y+\" with sizes \"+rx+\", \"+ry+\" to range \"+mx+\"->\"+px+\"; \"+my+\"->\"+py+\"; slopes are \"+slopeX+\", \"+slopeY);\r\n    for (var i = mx; i <= px; i++) {\r\n        for (var k = my; k <= py; k++) {\r\n            var di = i - x;\r\n            var dk = k - y;\r\n            if (di * di + dk * dk <= rx * ry + 0.5) {\r\n                var dx = i + Math.floor(slopeX * dk);\r\n                var dy = k + Math.floor(slopeY * di);\r\n                var idx = getArrayIndex(cols, dx, dy);\r\n                if (terrain[idx] == null || terrain[idx] == \"stone\" || terrain[idx].startsWith(\"rock_\") || (terrain[idx] == \"cobblestone\" && ore == \"cave\"))\r\n                    terrain[idx] = ore;\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction getRandomRockType(rows, y) {\r\n    var f = y / rows;\r\n    var list = [\"granite\", \"hornfel\", \"quartz\"];\r\n    if (f < 0.5) {\r\n        list.push(\"basalt\");\r\n        list.push(\"shale\");\r\n        list.push(\"limestone\");\r\n        list.push(\"sandstone\");\r\n    }\r\n    if (f < 0.75 && f > 0.25) {\r\n        list.push(\"slate\");\r\n        list.push(\"gneiss\");\r\n        list.push(\"granulite\");\r\n        list.push(\"schist\");\r\n    }\r\n    if (f > 0.5) {\r\n        list.push(\"marble\");\r\n        list.push(\"peridotite\");\r\n    }\r\n    if (f > 0.75) {\r\n        list.push(\"pumice\");\r\n        list.push(\"onyx\");\r\n        list.push(\"migmatite\");\r\n    }\r\n    return list[Math.floor(Math.random() * list.length)];\r\n}\r\nfunction getRandomOreType(rows, y) {\r\n    var f = y / rows;\r\n    var list = [\"coal_ore\"];\r\n    if (f > 0.2) {\r\n        list.push(\"iron_ore\");\r\n    }\r\n    if (f > 0.5) {\r\n        list.push(\"gold_ore\");\r\n        list.push(\"lapis_ore\");\r\n    }\r\n    if (f > 0.75) {\r\n        list.push(\"redstone_ore\");\r\n        list.push(\"diamond_ore\");\r\n        list.push(\"emerald_ore\");\r\n        list.push(\"cadmium\");\r\n        list.push(\"indium\");\r\n    }\r\n    if (f < 0.2) {\r\n        list.push(\"magnetite\");\r\n    }\r\n    if (f < 0.4) {\r\n        list.push(\"fluorite\");\r\n    }\r\n    if (f > 0.15 && f < 0.35) {\r\n        list.push(\"calcite\");\r\n    }\r\n    if (f > 0.1 && f < 0.5) {\r\n        //list.push(\"copper_ore\");\r\n        //list.push(\"tin_ore\");\r\n    }\r\n    if (f > 0.4 && f < 0.75) {\r\n        //list.push(\"nickel_ore\");\r\n    }\r\n    return list[Math.floor(Math.random() * list.length)];\r\n}\r\nfunction genOreVeins(rows, cols, terrain) {\r\n    var veins = rows * cols / 56;\r\n    //veins = 1;\r\n    for (var i = 0; i < veins; i++) {\r\n        var x = Math.floor(Math.random() * cols);\r\n        var y = Math.floor(Math.random() * rows);\r\n        var ore = getRandomOreType(rows, y);\r\n        genOreVein(rows, cols, terrain, x, y, ore);\r\n        //console.log(\"Generated \"+ore+\" at \"+x+\", \"+y);\r\n    }\r\n}\r\nfunction genRockVeins(rows, cols, terrain) {\r\n    var veins = rows * cols / 64;\r\n    //veins = 1;\r\n    for (var i = 0; i < veins; i++) {\r\n        var x = Math.floor(Math.random() * cols);\r\n        var y = Math.floor(Math.random() * rows);\r\n        var ore = \"rock_\" + getRandomRockType(rows, y);\r\n        genOreVein(rows, cols, terrain, x, y, ore);\r\n        //console.log(\"Generated \"+ore+\" at \"+x+\", \"+y);\r\n    }\r\n}\r\nfunction genGravelDirt(rows, cols, terrain) {\r\n    var veins = rows * cols / 150;\r\n    for (var i = 0; i < veins; i++) {\r\n        var x = Math.floor(Math.random() * cols);\r\n        var y = Math.floor(Math.random() * rows);\r\n        var ore = Math.random() < 0.5 ? \"gravel\" : \"dirt\";\r\n        genOreVein(rows, cols, terrain, x, y, ore);\r\n    }\r\n}\r\nfunction generateCaves(rows, cols, terrain) {\r\n    for (var i = 0; i < 8; i++) {\r\n        var x = getRandomBetween(0, cols);\r\n        var y = getRandomBetween(0, rows);\r\n        genOreVein(rows, cols, terrain, x, y, \"cave\");\r\n    }\r\n}\r\nfunction generateStructures(rows, cols, terrain, skylim) {\r\n    if (Math.random() < 0.75) {\r\n        var x = getRandomBetween(2, cols - 2);\r\n        var y = getRandomBetween(skylim + 4, rows - 7);\r\n        console.log(\"Generating a dungeon @ \" + x + \", \" + y);\r\n        var w = Math.random() < 0.5 ? 4 : 3;\r\n        var h = Math.min(w, Math.random() < 0.5 ? 4 : 3);\r\n        for (var i = -w; i <= w; i++) {\r\n            for (var k = 0; k <= h; k++) {\r\n                var dx = x + i;\r\n                var dy = y + k;\r\n                var bk = \"cobblestone\";\r\n                if (k == h) {\r\n                    if (Math.random() < 0.75)\r\n                        bk = \"cobblestone_mossy\";\r\n                }\r\n                else if (k == h - 1 && i == 0) {\r\n                    bk = \"mob_spawner\";\r\n                }\r\n                else if (Math.abs(i) != w) {\r\n                    bk = \"air\";\r\n                }\r\n                var idx = getArrayIndex(cols, dx, dy);\r\n                terrain[idx] = bk;\r\n            }\r\n        }\r\n    }\r\n    if (Math.random() < 0.75) {\r\n        var shafts = getRandomBetween(1, 3);\r\n        console.log(\"Generating \" + shafts + \" mineshaft pieces.\");\r\n        for (var s = 0; s < shafts; s++) {\r\n            var facing = Math.random() < 0.8;\r\n            var y = getRandomBetween(skylim + 4, rows - 5);\r\n            if (facing) {\r\n                var x = getRandomBetween(1, cols - 1);\r\n                for (var i = -1; i <= 1; i++) {\r\n                    for (var k = 0; k <= 2; k++) {\r\n                        var dx = x + i;\r\n                        var dy = y + k;\r\n                        var bk = \"cave\";\r\n                        if (k == 0)\r\n                            bk = \"planks_oak\";\r\n                        else if (Math.random() < 0.4 && Math.abs(i) == 1)\r\n                            bk = \"planks_oak\";\r\n                        if (Math.random() < 0.15)\r\n                            bk = bk == \"cave\" ? \"web\" : \"web_on_wood\";\r\n                        var idx = getArrayIndex(cols, dx, dy);\r\n                        terrain[idx] = bk;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                var w = getRandomBetween(5, Math.ceil(cols / 3));\r\n                var x = getRandomBetween(w, cols - w);\r\n                var woff = getRandomBetween(0, 5);\r\n                var twoSpawners = Math.random() < 0.5;\r\n                for (var i = -w; i <= w; i++) {\r\n                    for (var k = 0; k <= 2; k++) {\r\n                        var dx = x + i;\r\n                        var dy = y + k;\r\n                        var bk = \"cave\";\r\n                        var spawnerCol = twoSpawners ? (i == 0) : (Math.abs(i) == Math.floor(w / 1.5));\r\n                        var woodCol = (i + 256) % 6 == woff;\r\n                        if (woodCol) {\r\n                            bk = \"planks_oak\";\r\n                        }\r\n                        if (k == 2 && spawnerCol) {\r\n                            bk = \"mob_spawner\";\r\n                        }\r\n                        else if (Math.random() < 0.67)\r\n                            bk = bk == \"cave\" ? \"web\" : \"web_on_wood\";\r\n                        var idx = getArrayIndex(cols, dx, dy);\r\n                        terrain[idx] = bk;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction generateSurface(rows, cols, terrain, sky) {\r\n    for (var n = 0; n < 2; n++) {\r\n        var lakeCtr = getRandomBetween(3, cols - 3);\r\n        for (var i = lakeCtr - 2; i <= lakeCtr + 2; i++) {\r\n            var idxl = getArrayIndex(cols, i - 1, sky[i]);\r\n            var idxr = getArrayIndex(cols, i + 1, sky[i]);\r\n            if ((terrain[idxl] == \"grass_side\" || terrain[idxl] == \"water\" || terrain[idxl] == \"ice\" || terrain[idxl] == \"dirt\") && (terrain[idxr] == \"grass_side\" || terrain[idxr] == \"ice\" || terrain[idxr] == \"water\" || terrain[idxr] == \"dirt\")) {\r\n                var idxb = getArrayIndex(cols, i, sky[i] + 1);\r\n                var idx = getArrayIndex(cols, i, sky[i]);\r\n                terrain[idx] = xmas ? \"ice\" : \"water\";\r\n                if (terrain[idxb] == \"dirt\")\r\n                    terrain[idxb] = \"grass_side\";\r\n            }\r\n        }\r\n    }\r\n    var flag = false;\r\n    for (var n = 0; n < 2 && !flag; n++) {\r\n        var pylonCtr = getRandomBetween(3, cols - 3);\r\n        flag = generatePylonAt(rows, cols, terrain, sky, pylonCtr);\r\n    }\r\n    var count = 0;\r\n    for (var n = 0; n < (xmas ? 8 : 4) && count < 3; n++) {\r\n        var treeCtr = getRandomBetween(3, cols - 3);\r\n        if (generateTreeAt(rows, cols, terrain, sky, treeCtr))\r\n            count++;\r\n    }\r\n    /*\r\n    if (Math.random() < 0.6) {\r\n        var burrowCtr = getRandomBetween(6, cols-6);\r\n        generateBurrowAt(rows, cols, terrain, sky, burrowCtr);\r\n    }*/\r\n    for (var i = 0; i < rows; i++) {\r\n        if (sky[i] > 0 && Math.random() < 0.6) {\r\n            var idx0 = getArrayIndex(cols, i, sky[i]);\r\n            if (terrain[idx0] == \"grass_side\") {\r\n                var idx = getArrayIndex(cols, i, sky[i] - 1);\r\n                if (terrain[idx] == \"sky\") {\r\n                    var plant = \"tallgrass\";\r\n                    var rr = Math.random();\r\n                    if (rr < 0.1)\r\n                        plant = \"flower2\";\r\n                    else if (rr < 0.25)\r\n                        plant = \"flower1\";\r\n                    terrain[idx] = plant;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nfunction generateTreeAt(rows, cols, terrain, sky, treeCtr) {\r\n    let yCtr = sky[treeCtr];\r\n    if (yCtr <= 4)\r\n        return false;\r\n    var spruce = xmas; //Math.random() <= 0.25;\r\n    var h = Math.min(yCtr - 1, spruce ? getRandomBetween(8, 12) : getRandomBetween(4, 8));\r\n    //console.log(h);\r\n    if (h <= (spruce ? 8 : 5))\r\n        return false;\r\n    //console.log(\"Trying tree @ \"+treeCtr+\", \"+yCtr);\r\n    if (terrain[getArrayIndex(cols, treeCtr - 2, yCtr - h)] != \"sky\") {\r\n        //console.log(\"Space blocked @ \"+(treeCtr-2)+\", \"+(yCtr-h)+\": \"+terrain[getArrayIndex(cols, treeCtr-2, yCtr-h)]);\r\n        return false;\r\n    }\r\n    if (terrain[getArrayIndex(cols, treeCtr + 2, yCtr - h)] != \"sky\") {\r\n        //console.log(\"Space blocked @ \"+(treeCtr+2)+\", \"+(yCtr-h)+\": \"+terrain[getArrayIndex(cols, treeCtr+2, yCtr-h)]);\r\n        return false;\r\n    }\r\n    if (terrain[getArrayIndex(cols, treeCtr, yCtr - h)] != \"sky\") {\r\n        //console.log(\"Space blocked @ \"+(treeCtr)+\", \"+(yCtr-h)+\": \"+terrain[getArrayIndex(cols, treeCtr, yCtr-h)]);\r\n        return false;\r\n    }\r\n    if (terrain[getArrayIndex(cols, treeCtr - 2, yCtr - h + 2)] != \"sky\") {\r\n        //console.log(\"Space blocked @ \"+(treeCtr-2)+\", \"+(yCtr-h+2)+\": \"+terrain[getArrayIndex(cols, treeCtr-2, yCtr-h+2)]);\r\n        return false;\r\n    }\r\n    if (terrain[getArrayIndex(cols, treeCtr + 2, yCtr - h + 2)] != \"sky\") {\r\n        //console.log(\"Space blocked @ \"+(treeCtr+2)+\", \"+(yCtr-h+2)+\": \"+terrain[getArrayIndex(cols, treeCtr+2, yCtr-h+2)]);\r\n        return false;\r\n    }\r\n    if (spruce) {\r\n        for (var y = 0; y <= h; y++) {\r\n            var idx = getArrayIndex(cols, treeCtr, yCtr - y);\r\n            terrain[idx] = y == 0 ? \"dirt\" : \"log_spruce\";\r\n        }\r\n        var r = 2;\r\n        for (var y = Math.max(2, h - 6); y <= h; y++) {\r\n            //console.log(\"r = \"+r+\" @ y=\"+y);\r\n            for (var i = treeCtr - r; i <= treeCtr + r; i++) {\r\n                var idx = getArrayIndex(cols, i, yCtr - y);\r\n                terrain[idx] = \"leaves_spruce\";\r\n            }\r\n            r += Math.random() <= 0.5 ? 1 : 2;\r\n            if (r > 3)\r\n                r -= 3;\r\n            if (y + 1 == h - 1)\r\n                r = 1;\r\n            if (y + 1 == h)\r\n                r = 0;\r\n        }\r\n    }\r\n    else {\r\n        var birch = Math.random() <= 0.35;\r\n        var leaf = birch ? \"leaves_birch\" : \"leaves\";\r\n        for (var y = 0; y <= h; y++) {\r\n            var idx = getArrayIndex(cols, treeCtr, yCtr - y);\r\n            terrain[idx] = y == 0 ? \"dirt\" : (birch ? \"log_birch\" : \"log\");\r\n        }\r\n        for (var y = h - 3; y <= h; y++) {\r\n            var r = y >= h - 1 ? 1 : 2;\r\n            if (!birch && y == h)\r\n                r = 0;\r\n            for (var i = treeCtr - r; i <= treeCtr + r; i++) {\r\n                var idx = getArrayIndex(cols, i, yCtr - y);\r\n                terrain[idx] = leaf;\r\n            }\r\n        }\r\n    }\r\n    console.log(\"Generating tree at \" + treeCtr + \", \" + yCtr);\r\n    return true;\r\n}\r\nfunction generateBurrowAt(rows, cols, terrain, sky, burrowCtr) {\r\n    var yCtr = sky[burrowCtr];\r\n}\r\nfunction generatePylonAt(rows, cols, terrain, sky, pylonCtr) {\r\n    var yCtr = sky[pylonCtr];\r\n    if (yCtr < 7)\r\n        return false;\r\n    console.log(\"Generating pylon at \" + pylonCtr + \", \" + yCtr);\r\n    for (var i = pylonCtr - 3; i <= pylonCtr + 3; i++) {\r\n        for (var y = yCtr; y <= sky[i]; y++) {\r\n            var idx = getArrayIndex(cols, i, y);\r\n            terrain[idx] = \"crystalstone\";\r\n        }\r\n    }\r\n    for (var i = pylonCtr - 3; i <= pylonCtr + 3; i += 2) {\r\n        var edge = i == pylonCtr - 3 || i == pylonCtr + 3;\r\n        var top = edge ? 5 : 7;\r\n        for (var y = 1; y < top; y++) {\r\n            var idx = getArrayIndex(cols, i, yCtr - y);\r\n            terrain[idx] = \"crystalcol\";\r\n        }\r\n        terrain[getArrayIndex(cols, i, yCtr - top)] = \"rune\";\r\n    }\r\n    terrain[getArrayIndex(cols, pylonCtr - 2, yCtr - 3)] = \"crystalbeam\";\r\n    terrain[getArrayIndex(cols, pylonCtr + 2, yCtr - 3)] = \"crystalbeam\";\r\n    return true;\r\n}\r\nexport default function setPageBackground() {\r\n    if (isPhone)\r\n        return;\r\n    let tail = '</svg>';\r\n    let w = 16 * SCALE;\r\n    let h = 16 * SCALE;\r\n    let x = 0;\r\n    let y = 0;\r\n    //var height = findHighestNode(0, document.documentElement.childNodes);\r\n    let body = document.body;\r\n    let html = document.documentElement;\r\n    let height = Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight) - 64;\r\n    let titleImg = document.getElementsByClassName(\"title-image\")[0];\r\n    if (titleImg == null || titleImg.src == null || titleImg.src == \"\" || titleImg.src == window.location.href) {\r\n        height += 72;\r\n    }\r\n    else {\r\n        height += 48;\r\n    }\r\n    //console.log(\"Total height is \"+height+\", document content is: \"+document.documentElement.innerHTML);\r\n    let rh = Math.max(height, window.innerHeight, document.body.clientHeight);\r\n    let rw = Math.max(window.innerWidth, document.body.clientWidth);\r\n    //console.log(rw+\" x \"+rh);\r\n    let rows = Math.ceil(rh / h);\r\n    let cols = Math.ceil(rw / w);\r\n    let tw = cols * w;\r\n    let th = rows * h;\r\n    console.log(\"Generating MC chunk slice tileset with \" + cols + \" columns and \" + rows + \" rows\");\r\n    let xmlns = \"http://www.w3.org/2000/svg\";\r\n    let elem = document.createElementNS(xmlns, \"svg\");\r\n    elem.setAttributeNS(null, \"width\", tw.toString());\r\n    elem.setAttributeNS(null, \"height\", th.toString());\r\n    let terrain = new Array(cols * rows);\r\n    let skylim = Math.max(0, Math.min(14, Math.ceil(rows * 0.1)));\r\n    let sky = new Array(cols);\r\n    let minSky = Math.floor(skylim / 3);\r\n    let slope = getRandomDecimalBetween(-1, 1);\r\n    let skyH = getRandomDecimalBetween(minSky, skylim);\r\n    //console.log(\"Slope of \"+slope+\" from \"+skyH);\r\n    for (var i = 0; i < cols; i++) {\r\n        sky[i] = Math.floor(skyH);\r\n        //console.log(sky[i]+\" @ \"+i);\r\n        skyH += slope;\r\n        skyH = Math.max(minSky, Math.min(skylim, skyH));\r\n        if (Math.random() < 0.3 || skyH >= skylim - 1 || skyH <= minSky + 1) {\r\n            slope += getRandomDecimalBetween(-0.2, 0.2);\r\n            if (skyH >= skylim - 1)\r\n                slope = Math.min(slope, 0);\r\n            if (skyH <= minSky + 1)\r\n                slope = Math.max(slope, 0);\r\n            slope = Math.max(-1, Math.min(1, slope));\r\n            //console.log(\"Bending slope to \"+slope);\r\n        }\r\n    }\r\n    for (var i = 0; i < cols; i++) {\r\n        for (let k = 0; k < sky[i]; k++) {\r\n            let idx = getArrayIndex(cols, i, k);\r\n            terrain[idx] = \"sky\";\r\n        }\r\n    }\r\n    for (var i = 0; i < cols; i++) {\r\n        for (let k = sky[i]; k < rows; k++) {\r\n            let img = getRandomRawGenBlockAt(i, k - sky[i], rows, sky[i]);\r\n            let idx = getArrayIndex(cols, i, k);\r\n            terrain[idx] = img;\r\n        }\r\n    }\r\n    generateSurface(rows, cols, terrain, sky);\r\n    generateStructures(rows, cols, terrain, skylim);\r\n    generateCaves(rows, cols, terrain);\r\n    genRockVeins(rows, cols, terrain);\r\n    genOreVeins(rows, cols, terrain);\r\n    genGravelDirt(rows, cols, terrain);\r\n    cleanFloatingBlocks(rows, cols, terrain);\r\n    applyLiquids(rows, cols, terrain);\r\n    buildImage(elem, rows, cols, terrain);\r\n    let tag = \"background-content\";\r\n    let container = document.getElementById(tag);\r\n    if (container == null) {\r\n        container = document.createElement(\"div\");\r\n        container.id = tag;\r\n        console.log(\"Injecting background element.\");\r\n        document.body.prepend(container);\r\n    }\r\n    while (container.firstChild) {\r\n        container.removeChild(container.firstChild);\r\n    }\r\n    //console.log(elem);\r\n    container.appendChild(elem);\r\n}\r\nwindow.addEventListener('resize', debounce(setPageBackground, 250, { isImmediate: true }));\r\n"],"sourceRoot":""}
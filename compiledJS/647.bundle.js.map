{"version":3,"sources":["webpack://sitecore/./p2/backgroundgen.ts"],"names":["addImageToRow","elem","img","tile","document","createElement","className","appendChild","addImageToTile","x","y","w","h","added","style","position","top","toString","left","width","height","classList","add","modifyImageLocational","rows","cols","terrain","idx","placePortalSurface","blocks","blue","orange","x2","Math","min","y2","i","k","tex","random","addBlock","generateBeam","type","dx","dy","length","push","setPageBackground","body","documentElement","rh","offsetHeight","rw","max","window","innerWidth","clientWidth","ceil","console","log","Array","ret","placeTestElements","tag","container","getElementById","id","prepend","firstChild","removeChild","display","lasers","row","imgs","n","startsWith","element","flakes","m","buildImage"],"mappings":"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","file":"647.bundle.js","sourcesContent":["const SCALE = 1;\r\nimport { xmas, getRandomBetween, getArrayIndex, fitBCG, isDarkModeEnabled } from '../library';\r\nimport { isPhone } from '../browser';\r\nfunction addImageToRow(elem, img) {\r\n    let tile = document.createElement('div');\r\n    tile.className = \"tile-p2-\" + img;\r\n    elem.appendChild(tile);\r\n    return tile;\r\n}\r\nfunction addImageToTile(elem, img, x, y, w, h) {\r\n    let added = addImageToRow(elem, img);\r\n    added.style.position = \"relative\";\r\n    added.style.top = y.toString() + \"px\";\r\n    added.style.left = x.toString() + \"px\";\r\n    added.style.width = w.toString() + \"px\";\r\n    added.style.height = h.toString() + \"px\";\r\n    elem.classList.add(\"entity-layer\");\r\n}\r\nfunction buildImage(elem, rows, cols, terrain, blocks) {\r\n    var w = 128 * SCALE;\r\n    var h = 128 * SCALE;\r\n    var x = 0;\r\n    var y = 0;\r\n    var lasers = [];\r\n    for (var k = 0; k < rows; k++) {\r\n        x = 0;\r\n        let row = document.createElement(\"div\");\r\n        for (var i = 0; i < cols; i++) {\r\n            let idx = getArrayIndex(cols, rows, i, k);\r\n            let imgs = blocks[idx];\r\n            let add = row;\r\n            add = addImageToRow(add, terrain[idx]);\r\n            if (isDarkModeEnabled()) {\r\n                add = addImageToRow(add, \"dark\");\r\n            }\r\n            if (imgs.length != 1 || imgs[0] != \"air\") {\r\n                //console.log(\"Got \"+img+\" @ \"+i+\", \"+k);\r\n                for (var n = 0; n < imgs.length; n++) {\r\n                    var img = imgs[n];\r\n                    if (img != \"air\") {\r\n                        img = modifyImageLocational(rows, cols, terrain, i, k, idx, img);\r\n                        add = addImageToRow(add, img);\r\n                        if (xmas && img.startsWith(\"laser\")) {\r\n                            lasers.push({ element: add, x: x, y: y });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            x += w;\r\n        }\r\n        elem.appendChild(row);\r\n        y += h;\r\n    }\r\n    for (var i = 0; i < lasers.length; i++) {\r\n        let tile = lasers[i];\r\n        var flakes = getRandomBetween(4, 9);\r\n        for (var m = 0; m < flakes; m++) {\r\n            addImageToTile(tile.element, \"laser_snow\", getRandomBetween(-36, w - 12), getRandomBetween(-36, h - 12), 48 * SCALE, 48 * SCALE);\r\n        }\r\n    }\r\n    fitBCG(elem, SCALE);\r\n}\r\nfunction getRandomTileAt(x, y, rows) {\r\n    return \"black\" + getRandomBetween(0, 15);\r\n}\r\nfunction modifyImageLocational(rows, cols, terrain, x, y, idx, img) {\r\n    return img;\r\n}\r\nfunction placePortalSurface(terrain, blocks, rows, cols, blue, orange) {\r\n    var w = getRandomBetween(1, 6);\r\n    var h = getRandomBetween(1, 3);\r\n    var x = getRandomBetween(0, cols - 1);\r\n    var y = getRandomBetween(0, rows - 1);\r\n    var x2 = Math.min(x + w, cols);\r\n    var y2 = Math.min(y + h, rows);\r\n    for (var i = x; i < x2; i++) {\r\n        for (var k = y; k < y2; k++) {\r\n            var tex = \"white\" + getRandomBetween(0, 3);\r\n            var idx = getArrayIndex(cols, rows, i, k);\r\n            terrain[idx] = tex;\r\n            if (blue && Math.random() < 0.1) {\r\n                addBlock(blocks, idx, \"portal_b\");\r\n                blue = false;\r\n            }\r\n            else if (orange && Math.random() < 0.1) {\r\n                addBlock(blocks, idx, \"portal_o\");\r\n                orange = false;\r\n            }\r\n        }\r\n    }\r\n    return [blue, orange];\r\n}\r\nfunction placeTestElements(blocks, rows, cols) {\r\n    for (var i = 1; i < rows - 1; i++) {\r\n        if (Math.random() < 0.1) {\r\n            generateBeam(blocks, rows, cols, 0, i);\r\n        }\r\n    }\r\n    for (var i = 1; i < cols - 1; i++) {\r\n        if (Math.random() < 0.1) {\r\n            generateBeam(blocks, rows, cols, i, 0);\r\n        }\r\n    }\r\n}\r\nfunction generateBeam(blocks, rows, cols, x, y) {\r\n    var type = Math.random() < 0.5 ? (Math.random() < 0.5 ? \"lightbridge\" : \"laser\") : (xmas ? \"funnel_xmas\" : (Math.random() < 0.35 ? \"funnel_o\" : \"funnel\"));\r\n    var dx = (x == 0 ? 1 : 0);\r\n    var dy = 1 - dx;\r\n    type = type + (dx == 0 ? \"_v\" : \"_h\");\r\n    while (x < cols && y < rows) {\r\n        addBlock(blocks, getArrayIndex(cols, rows, x, y), type);\r\n        x += dx;\r\n        y += dy;\r\n    }\r\n}\r\nfunction addBlock(blocks, idx, img) {\r\n    if (blocks[idx].length == 1 && blocks[idx][0] == \"air\") {\r\n        blocks[idx] = [];\r\n    }\r\n    blocks[idx].push(img);\r\n}\r\nexport default function setPageBackground() {\r\n    if (isPhone)\r\n        return;\r\n    let w = 128 * SCALE;\r\n    let h = 128 * SCALE;\r\n    let x = 0;\r\n    let y = 0;\r\n    //var height = findHighestNode(0, document.documentElement.childNodes);\r\n    let body = document.body;\r\n    let html = document.documentElement;\r\n    var rh = document.body.offsetHeight; //Math.max(body.offsetHeight, html.clientHeight, html.offsetHeight, window.innerHeight, document.body.clientHeight);\r\n    var rw = Math.max(window.innerWidth, document.body.clientWidth);\r\n    //console.log(rw+\" x \"+rh);\r\n    let rows = Math.ceil(rh / h);\r\n    let cols = Math.ceil(rw / w);\r\n    let tw = cols * w;\r\n    let th = rows * h;\r\n    console.log(\"Generating portal tileset with \" + cols + \" columns and \" + rows + \" rows\");\r\n    let terrain = new Array(cols * rows);\r\n    let blocks = new Array(cols * rows);\r\n    for (var i = 0; i < cols; i++) {\r\n        for (var k = 0; k < rows; k++) {\r\n            var img = getRandomTileAt(i, k, rows);\r\n            var idx = getArrayIndex(cols, rows, i, k);\r\n            terrain[idx] = img;\r\n            blocks[idx] = [\"air\"];\r\n        }\r\n    }\r\n    let blue = true;\r\n    let orange = true;\r\n    for (var i = 0; i < rows / 4; i++) {\r\n        var ret = placePortalSurface(terrain, blocks, rows, cols, blue, orange);\r\n        blue = ret[0];\r\n        orange = ret[1];\r\n    }\r\n    placeTestElements(blocks, rows, cols);\r\n    let tag = \"background-content\";\r\n    let container = document.getElementById(tag);\r\n    if (container == null) {\r\n        container = document.createElement(\"div\");\r\n        container.id = tag;\r\n        console.log(\"Injecting background element.\");\r\n        document.body.prepend(container);\r\n    }\r\n    while (container.firstChild) {\r\n        container.removeChild(container.firstChild);\r\n    }\r\n    let elem = document.createElement(\"div\");\r\n    container.appendChild(elem);\r\n    elem.className = \"tile-layer\";\r\n    elem.style.width = rw.toString() + \"px\";\r\n    elem.style.height = rh.toString() + \"px\";\r\n    container.style.display = \"block\";\r\n    //console.log(elem);\r\n    buildImage(elem, rows, cols, terrain, blocks);\r\n}\r\n//window.addEventListener('resize', debounce(setPageBackground, 100));\r\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://sitecore/./stellaris/backgroundgen.ts"],"names":["STARFIELD_SIZE","addImage","elem","img","ix","iy","iw","ih","star","div","document","createElement","className","setAttribute","style","position","top","toString","left","width","height","appendChild","x","y","modifyImageLocational","svgimg","createElementNS","setAttributeNS","connectStars","other","connections","includes","push","line","STAR_SIZE","Math","random","computeControlPoints","K","length","p1","p2","Array","n","a","b","c","r","i","m","setPageBackground","body","documentElement","rh","offsetHeight","rw","max","window","innerWidth","clientWidth","console","log","k","dd","cols","ceil","rows","stars","dx","dy","posX","posY","f","entry","image","cx","cy","index","alera","meiza","reylana","freyskol","lanka","w","h","region","edges","borderDistance","next","isAleran","angle","atan2","isAleranBorder","sort","points","cpX","map","p","cpY","start","data","l","cp1","cp2","svg","path","drawSpline","generateTerritory","tag","container","getElementById","id","prepend","firstChild","removeChild","classList","add"],"mappings":"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","file":"638.bundle.js","sourcesContent":["const STARFIELD_SIZE = 2048;\r\nconst STAR_SIZE = 32;\r\nimport { xmas, viskey, visval, xkey, ykey, hkey, wkey, getRandomBetween, getOrCreateImgPath, getArrayIndex, svgNamespace } from '../library';\r\nimport { isPhone } from '../browser';\r\nfunction addImage(elem, img, ix, iy, iw, ih, star) {\r\n    if (star) {\r\n        //injectAtlasNode(elem, ix, iy, \"stellaris\", img, STAR_SIZE, STAR_SIZE, \"screen\");\r\n        let div = document.createElement(\"div\");\r\n        div.className = \"tile-stellaris-\" + img;\r\n        div.setAttribute(\"style\", \"mix-blend-mode: screen;\");\r\n        div.style.position = \"relative\";\r\n        div.style.top = iy.toString() + \"px\";\r\n        div.style.left = ix.toString() + \"px\";\r\n        div.style.width = iw.toString() + \"px\";\r\n        div.style.height = ih.toString() + \"px\";\r\n        elem.appendChild(div);\r\n    }\r\n    else {\r\n        img = modifyImageLocational(ix, iy, img);\r\n        //var pre = '<image x=\"'+ix+'\" y=\"'+iy+'\" width=\"'+iw+'\" height=\"'+ih+'\" xlink:href=\"'+getImageRoot();\r\n        //var post = '.png\" />';\r\n        //return pre+img+post;\r\n        var svgimg = document.createElementNS('http://www.w3.org/2000/svg', 'image');\r\n        svgimg.setAttributeNS(null, wkey, iw.toString());\r\n        svgimg.setAttributeNS(null, hkey, ih.toString());\r\n        svgimg.setAttributeNS('http://www.w3.org/1999/xlink', 'href', getOrCreateImgPath(img, \"stellaris\"));\r\n        svgimg.setAttributeNS(null, xkey, ix.toString());\r\n        svgimg.setAttributeNS(null, ykey, iy.toString());\r\n        svgimg.setAttributeNS(null, viskey, visval);\r\n        elem.appendChild(svgimg);\r\n    }\r\n}\r\nfunction modifyImageLocational(x, y, img) {\r\n    return img;\r\n}\r\nfunction connectStars(elem, star, other) {\r\n    if (star == null || other == null || typeof (star) == \"undefined\" || typeof (other) == \"undefined\")\r\n        return;\r\n    if (star.connections.includes(other)) {\r\n        if (!other.connections.includes(star)) {\r\n            other.connections.push(star);\r\n        }\r\n        return;\r\n    }\r\n    var line = document.createElementNS('http://www.w3.org/2000/svg', 'line');\r\n    line.setAttributeNS(null, \"x1\", (star.x + STAR_SIZE / 2).toString());\r\n    line.setAttributeNS(null, \"y1\", (star.y + STAR_SIZE / 2).toString());\r\n    line.setAttributeNS(null, \"x2\", (other.x + STAR_SIZE / 2).toString());\r\n    line.setAttributeNS(null, \"y2\", (other.y + STAR_SIZE / 2).toString());\r\n    line.setAttributeNS(null, \"stroke\", \"rgb(0, 212, 255)\");\r\n    if (xmas) {\r\n        if (Math.random() < 0.5)\r\n            line.setAttributeNS(null, \"stroke\", \"rgb(255, 0, 0)\");\r\n        else\r\n            line.setAttributeNS(null, \"stroke\", \"rgb(0, 192, 0)\");\r\n    }\r\n    line.setAttributeNS(null, \"stroke-width\", \"2\");\r\n    line.setAttributeNS(null, \"style\", \"mix-blend-mode: screen;\");\r\n    elem.appendChild(line);\r\n    star.connections.push(other);\r\n    other.connections.push(star);\r\n}\r\nfunction generateTerritory(elem, w, h, stars, alera) {\r\n    let region = [];\r\n    let edges = [];\r\n    region.push(alera);\r\n    alera.borderDistance = -1;\r\n    var n = getRandomBetween(4, 9);\r\n    for (var i = 0; i < n; i++) {\r\n        //console.log(i+\"/\"+n+\": \");\r\n        let next = [];\r\n        for (var k = 0; k < region.length; k++) {\r\n            let star = region[k];\r\n            if (typeof star.connections !== 'undefined' && star.connections.length > 0) {\r\n                for (var a = 0; a < star.connections.length; a++) {\r\n                    let other = star.connections[a];\r\n                    if (!region.includes(other) && !next.includes(other)) {\r\n                        next.push(other);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        //console.log(next);\r\n        for (var k = 0; k < next.length; k++) {\r\n            region.push(next[k]);\r\n            next[k].borderDistance = i;\r\n            next[k].isAleran = true;\r\n        }\r\n    }\r\n    for (var i = 0; i < region.length; i++) {\r\n        var star = region[i];\r\n        if (typeof star.connections !== 'undefined' && star.connections.length > 0) {\r\n            //console.log(star);\r\n            //console.log(star.connections);\r\n            for (var k = 0; k < star.connections.length; k++) {\r\n                var other = star.connections[k];\r\n                if (!region.includes(other)) {\r\n                    let entry = { x: (star.x + other.x + STAR_SIZE) / 2, y: (star.y + other.y + STAR_SIZE) / 2 };\r\n                    entry.angle = Math.atan2(entry.y - STAR_SIZE / 2 - alera.y, entry.x - STAR_SIZE / 2 - alera.x);\r\n                    edges.push(entry);\r\n                    star.isAleranBorder = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    edges.sort((a, b) => a.angle - b.angle);\r\n    //console.log(edges);\r\n    //console.log(region);\r\n    var points = edges;\r\n    var cpX = computeControlPoints(points.map(p => p.x));\r\n    var cpY = computeControlPoints(points.map(p => p.y));\r\n    var start = points[0];\r\n    var data = \"M\" + start.x + \" \" + start.y;\r\n    for (var i = 0, l = points.length - 1; i < l; i++) {\r\n        var cp1 = { x: cpX.p1[i], y: cpY.p1[i] };\r\n        var cp2 = { x: cpX.p2[i], y: cpY.p2[i] };\r\n        //drawSpline(elem, points[i], cp1, cp2, points[i + 1])\r\n        //data = data+\" L \"+points[i].x+\" \"+points[i].y;\r\n        data = data + \" C \" + cp1.x + \" \" + cp1.y + \" \" + cp2.x + \" \" + cp2.y + \" \" + points[i + 1].x + \" \" + points[i + 1].y;\r\n    }\r\n    data = data + \" Z\";\r\n    drawSpline(elem, data);\r\n    addImage(elem, \"aleran\", alera.x - 128, alera.y - 128, 256, 256, false);\r\n}\r\n//Credit to https://jsfiddle.net/prafuitu/8m2n5qg6/\r\nfunction computeControlPoints(K) {\r\n    if (K.length == 2) {\r\n        return {\r\n            p1: [K[0]],\r\n            p2: [K[1]]\r\n        };\r\n    }\r\n    let p1 = new Array();\r\n    let p2 = new Array();\r\n    let n = K.length - 1;\r\n    /*rhs vector*/\r\n    let a = new Array();\r\n    let b = new Array();\r\n    let c = new Array();\r\n    let r = new Array();\r\n    /*left most segment*/\r\n    a[0] = 0;\r\n    b[0] = 2;\r\n    c[0] = 1;\r\n    r[0] = K[0] + 2 * K[1];\r\n    /*internal segments*/\r\n    for (var i = 1; i < n - 1; i++) {\r\n        a[i] = 1;\r\n        b[i] = 4;\r\n        c[i] = 1;\r\n        r[i] = 4 * K[i] + 2 * K[i + 1];\r\n    }\r\n    /*right segment*/\r\n    a[n - 1] = 2;\r\n    b[n - 1] = 7;\r\n    c[n - 1] = 0;\r\n    r[n - 1] = 8 * K[n - 1] + K[n];\r\n    /*solves Ax=b with the Thomas algorithm (from Wikipedia)*/\r\n    for (var i = 1; i < n; i++) {\r\n        var m = a[i] / b[i - 1];\r\n        b[i] = b[i] - m * c[i - 1];\r\n        r[i] = r[i] - m * r[i - 1];\r\n    }\r\n    p1[n - 1] = r[n - 1] / b[n - 1];\r\n    for (i = n - 2; i >= 0; --i)\r\n        p1[i] = (r[i] - c[i] * p1[i + 1]) / b[i];\r\n    /*we have p1, now compute p2*/\r\n    for (var i = 0; i < n - 1; i++)\r\n        p2[i] = 2 * K[i + 1] - p1[i + 1];\r\n    p2[n - 1] = 0.5 * (K[n] + p1[n - 1]);\r\n    return { p1: p1, p2: p2 };\r\n}\r\nfunction drawSpline(svg, data) {\r\n    var path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\r\n    path.setAttributeNS(null, 'stroke', \"#785FB6\");\r\n    path.setAttributeNS(null, 'stroke-width', \"15\"); //was 5\r\n    path.setAttributeNS(null, 'fill', \"#785FB6\");\r\n    path.setAttributeNS(null, 'fill-opacity', \"0.4\");\r\n    path.setAttributeNS(null, 'stroke-opacity', \"0.85\");\r\n    path.setAttributeNS(null, 'd', data);\r\n    svg.appendChild(path);\r\n}\r\nexport default function setPageBackground() {\r\n    if (isPhone)\r\n        return;\r\n    //var height = findHighestNode(0, document.documentElement.childNodes);\r\n    let body = document.body;\r\n    let html = document.documentElement;\r\n    var rh = document.body.offsetHeight; //Math.max(body.offsetHeight, html.clientHeight, html.offsetHeight, window.innerHeight, document.body.clientHeight);\r\n    var rw = Math.max(window.innerWidth, document.body.clientWidth);\r\n    //console.log(rw+\" x \"+rh);\r\n    console.log(\"Generating stellaris galaxy map background\");\r\n    let elem = document.createElementNS(svgNamespace, \"svg\");\r\n    elem.setAttributeNS(null, \"width\", rw.toString());\r\n    elem.setAttributeNS(null, \"height\", rh.toString());\r\n    for (var i = 0; i < rw; i += STARFIELD_SIZE) {\r\n        for (var k = 0; k < rh; k += STARFIELD_SIZE) {\r\n            addImage(elem, \"starfield\", i, k, STARFIELD_SIZE, STARFIELD_SIZE, false);\r\n        }\r\n    }\r\n    let dStar = STAR_SIZE * 3;\r\n    let dd = STAR_SIZE * 1.35;\r\n    let cols = Math.ceil(rw / dStar);\r\n    let rows = Math.ceil(rh / dStar);\r\n    let stars = new Array(cols * rows);\r\n    for (var i = 0; i < cols; i++) {\r\n        for (var k = 0; k < rows; k++) {\r\n            var dx = (i + 0.5) * dStar;\r\n            var dy = (k + 0.5) * dStar;\r\n            var posX = getRandomBetween(dx - dd, dx + dd);\r\n            var posY = getRandomBetween(dy - dd, dy + dd);\r\n            var img = \"\";\r\n            var f = Math.random();\r\n            if (f < 0.04)\r\n                img = \"hole\";\r\n            else if (f < 0.1)\r\n                img = \"pulsar\";\r\n            else if (f < 0.15)\r\n                img = \"neutron\";\r\n            else\r\n                img = \"star\" + getRandomBetween(0, 7);\r\n            var entry = { image: img, x: posX, y: posY, cx: i, cy: k, index: getArrayIndex(cols, rows, i, k), connections: [] };\r\n            stars[entry.index] = entry;\r\n        }\r\n    }\r\n    let alera = stars[getArrayIndex(cols, rows, getRandomBetween(4, cols - 4), getRandomBetween(4, rows - 4))];\r\n    for (var i = 0; i < stars.length; i++) {\r\n        var star = stars[i];\r\n        if (star.cx > 0 && Math.random() < 0.33) {\r\n            var other = stars[getArrayIndex(cols, rows, star.cx - 1, star.cy)];\r\n            if (other.connections.length < 3)\r\n                connectStars(elem, star, other);\r\n        }\r\n        if (star.cy > 0 && Math.random() < 0.33) {\r\n            var other = stars[getArrayIndex(cols, rows, star.cx, star.cy - 1)];\r\n            if (other.connections.length < 3)\r\n                connectStars(elem, star, other);\r\n        }\r\n    }\r\n    for (var i = 0; i < stars.length; i++) {\r\n        var star = stars[i];\r\n        if (star.connections.length == 0) {\r\n            //console.log(\"unconnected star: \"+star)\r\n        }\r\n        if (star == alera) {\r\n            connectStars(elem, star, stars[getArrayIndex(cols, rows, star.cx - 1, star.cy)]);\r\n            connectStars(elem, star, stars[getArrayIndex(cols, rows, star.cx + 1, star.cy)]);\r\n            connectStars(elem, star, stars[getArrayIndex(cols, rows, star.cx, star.cy - 1)]);\r\n            connectStars(elem, star, stars[getArrayIndex(cols, rows, star.cx, star.cy + 1)]);\r\n            star.meiza = star.connections[getRandomBetween(0, 3)];\r\n            star.reylana = star.meiza;\r\n            while (star.reylana == star.meiza)\r\n                star.reylana = star.connections[getRandomBetween(0, 3)];\r\n            star.freyskol = star.meiza;\r\n            while (star.freyskol == star.meiza || star.freyskol == star.reylana)\r\n                star.freyskol = star.connections[getRandomBetween(0, 3)];\r\n            star.lanka = star.meiza;\r\n            while (star.lanka == star.meiza || star.lanka == star.reylana || star.lanka == star.freyskol)\r\n                star.lanka = star.connections[getRandomBetween(0, 3)];\r\n        }\r\n        if (star.cx > 0) {\r\n            var other = stars[getArrayIndex(cols, rows, star.cx - 1, star.cy)];\r\n            connectStars(elem, star, other);\r\n        }\r\n        else if (star.cy > 0) {\r\n            var other = stars[getArrayIndex(cols, rows, star.cx, star.cy - 1)];\r\n            connectStars(elem, star, other);\r\n        }\r\n        else if (Math.random() < 0.33) {\r\n            var other = stars[getArrayIndex(cols, rows, star.cx + 1, star.cy)];\r\n            connectStars(elem, star, other);\r\n        }\r\n        else {\r\n            var other = stars[getArrayIndex(cols, rows, star.cx, star.cy + 1)];\r\n            connectStars(elem, star, other);\r\n        }\r\n    }\r\n    alera.meiza.image = \"pulsar\";\r\n    alera.reylana.image = \"star1\";\r\n    alera.freyskol.image = \"star6\";\r\n    alera.lanka.image = \"star4\";\r\n    alera.image = \"star0\";\r\n    generateTerritory(elem, rw, rh, stars, alera);\r\n    let tag = \"background-content\";\r\n    let container = document.getElementById(tag);\r\n    if (container == null) {\r\n        container = document.createElement(\"div\");\r\n        container.id = tag;\r\n        console.log(\"Injecting background element.\");\r\n        document.body.prepend(container);\r\n    }\r\n    while (container.firstChild) {\r\n        container.removeChild(container.firstChild);\r\n    }\r\n    //console.log(elem);\r\n    container.appendChild(elem);\r\n    elem = document.createElement(\"div\");\r\n    elem.id = \"bcg-stars\";\r\n    elem.style.position = \"relative\";\r\n    elem.style.width = \"0px\";\r\n    elem.style.height = \"0px\";\r\n    elem.classList.add(\"entity-layer\");\r\n    for (var i = 0; i < stars.length; i++) {\r\n        var star = stars[i];\r\n        addImage(elem, star.image, star.x, star.y, STAR_SIZE, STAR_SIZE, true);\r\n    }\r\n    container.appendChild(elem);\r\n    //container.style.width = rw.toString()+\"px\";\r\n    //container.style.height = rh.toString()+\"px\";\r\n}\r\n//window.addEventListener('resize', debounce(setPageBackground, 100));\r\n"],"sourceRoot":""}